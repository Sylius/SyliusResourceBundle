<?php

namespace ContainerBoRyxcn;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getNelmioAlice_Generator_Caller_RegistryService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'nelmio_alice.generator.caller.registry' shared service.
     *
     * @return \Nelmio\Alice\Generator\Caller\CallProcessorRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 6).'/vendor/nelmio/alice/src/Generator/Caller/CallProcessorInterface.php';
        include_once \dirname(__DIR__, 6).'/vendor/nelmio/alice/src/IsAServiceTrait.php';
        include_once \dirname(__DIR__, 6).'/vendor/nelmio/alice/src/Generator/Caller/CallProcessorRegistry.php';
        include_once \dirname(__DIR__, 6).'/vendor/nelmio/alice/src/Generator/Caller/ChainableCallProcessorInterface.php';
        include_once \dirname(__DIR__, 6).'/vendor/nelmio/alice/src/Generator/Caller/CallProcessorAwareInterface.php';
        include_once \dirname(__DIR__, 6).'/vendor/nelmio/alice/src/Generator/Caller/Chainable/ConfiguratorMethodCallProcessor.php';
        include_once \dirname(__DIR__, 6).'/vendor/nelmio/alice/src/Generator/Caller/Chainable/MethodCallWithReferenceProcessor.php';
        include_once \dirname(__DIR__, 6).'/vendor/nelmio/alice/src/Generator/Caller/Chainable/OptionalMethodCallProcessor.php';
        include_once \dirname(__DIR__, 6).'/vendor/nelmio/alice/src/Generator/Caller/Chainable/SimpleMethodCallProcessor.php';

        return $container->privates['nelmio_alice.generator.caller.registry'] = new \Nelmio\Alice\Generator\Caller\CallProcessorRegistry([($container->privates['nelmio_alice.generator.caller.chainable.configurator_method_call'] ??= new \Nelmio\Alice\Generator\Caller\Chainable\ConfiguratorMethodCallProcessor()), ($container->privates['nelmio_alice.generator.caller.chainable.method_call_with_reference'] ??= new \Nelmio\Alice\Generator\Caller\Chainable\MethodCallWithReferenceProcessor()), ($container->privates['nelmio_alice.generator.caller.chainable.optional_method_call'] ??= new \Nelmio\Alice\Generator\Caller\Chainable\OptionalMethodCallProcessor()), ($container->privates['nelmio_alice.generator.caller.chainable.simple_call'] ??= new \Nelmio\Alice\Generator\Caller\Chainable\SimpleMethodCallProcessor())]);
    }
}

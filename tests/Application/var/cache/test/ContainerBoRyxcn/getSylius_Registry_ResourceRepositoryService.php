<?php

namespace ContainerBoRyxcn;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSylius_Registry_ResourceRepositoryService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'sylius.registry.resource_repository' shared service.
     *
     * @return \Sylius\Component\Registry\ServiceRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 6).'/vendor/sylius/registry/src/ServiceRegistryInterface.php';
        include_once \dirname(__DIR__, 6).'/vendor/sylius/registry/src/ServiceRegistry.php';

        $container->privates['sylius.registry.resource_repository'] = $instance = new \Sylius\Component\Registry\ServiceRegistry('Sylius\\Component\\Resource\\Repository\\RepositoryInterface', 'resource repository');

        $instance->register('app.blog_post', ($container->services['app.repository.blog_post'] ?? $container->load('getApp_Repository_BlogPostService')));
        $instance->register('app.book', ($container->services['app.repository.book'] ?? $container->load('getApp_Repository_BookService')));
        $instance->register('app.book_translation', ($container->services['app.repository.book_translation'] ?? $container->load('getApp_Repository_BookTranslationService')));
        $instance->register('app.comic_book', ($container->services['app.repository.comic_book'] ?? $container->load('getApp_Repository_ComicBookService')));
        $instance->register('app.science_book', ($container->services['app.repository.science_book'] ?? $container->load('getApp_Repository_ScienceBookService')));
        $instance->register('app.gedmo', ($container->services['app.repository.gedmo'] ?? $container->load('getApp_Repository_GedmoService')));
        $instance->register('app.pull_request', ($container->services['app.repository.pull_request'] ?? $container->load('getApp_Repository_PullRequestService')));
        $instance->register('app.subscription', ($container->services['app.repository.subscription'] ?? $container->load('getApp_Repository_SubscriptionService')));

        return $instance;
    }
}

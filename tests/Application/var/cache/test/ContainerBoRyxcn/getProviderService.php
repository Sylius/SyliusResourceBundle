<?php

namespace ContainerBoRyxcn;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getProviderService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'Sylius\Component\Resource\Symfony\Request\State\Provider' shared service.
     *
     * @return \Sylius\Component\Resource\Symfony\Request\State\Provider
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 6).'/src/Component/Symfony/Request/State/Provider.php';
        include_once \dirname(__DIR__, 6).'/src/Component/Symfony/Request/RepositoryArgumentResolver.php';

        return $container->privates['Sylius\\Component\\Resource\\Symfony\\Request\\State\\Provider'] = new \Sylius\Component\Resource\Symfony\Request\State\Provider(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'app.repository.blog_post' => ['services', 'app.repository.blog_post', 'getApp_Repository_BlogPostService', true],
            'app.repository.book' => ['services', 'app.repository.book', 'getApp_Repository_BookService', true],
            'app.repository.book_translation' => ['services', 'app.repository.book_translation', 'getApp_Repository_BookTranslationService', true],
            'app.repository.comic_book' => ['services', 'app.repository.comic_book', 'getApp_Repository_ComicBookService', true],
            'app.repository.gedmo' => ['services', 'app.repository.gedmo', 'getApp_Repository_GedmoService', true],
            'app.repository.pull_request' => ['services', 'app.repository.pull_request', 'getApp_Repository_PullRequestService', true],
            'app.repository.science_book' => ['services', 'app.repository.science_book', 'getApp_Repository_ScienceBookService', true],
            'app.repository.subscription' => ['services', 'app.repository.subscription', 'getApp_Repository_SubscriptionService', true],
        ], [
            'app.repository.blog_post' => 'Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\EntityRepository',
            'app.repository.book' => 'App\\Repository\\BookRepository',
            'app.repository.book_translation' => 'Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\EntityRepository',
            'app.repository.comic_book' => 'Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\EntityRepository',
            'app.repository.gedmo' => 'Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\EntityRepository',
            'app.repository.pull_request' => 'Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\EntityRepository',
            'app.repository.science_book' => 'Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\EntityRepository',
            'app.repository.subscription' => 'Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\EntityRepository',
        ]), ($container->privates['sylius.repository_argument_resolver.request'] ??= new \Sylius\Component\Resource\Symfony\Request\RepositoryArgumentResolver()), ($container->privates['sylius.expression_language.argument_parser.repository'] ?? $container->load('getSylius_ExpressionLanguage_ArgumentParser_RepositoryService')));
    }
}

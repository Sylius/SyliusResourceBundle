<?php

namespace ContainerBoRyxcn;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_Workflow_RegistryService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private '.workflow.registry' shared service.
     *
     * @return \Symfony\Component\Workflow\Registry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 6).'/vendor/symfony/workflow/Registry.php';
        include_once \dirname(__DIR__, 6).'/vendor/symfony/workflow/SupportStrategy/WorkflowSupportStrategyInterface.php';
        include_once \dirname(__DIR__, 6).'/vendor/symfony/workflow/SupportStrategy/InstanceOfSupportStrategy.php';

        $container->privates['.workflow.registry'] = $instance = new \Symfony\Component\Workflow\Registry();

        $instance->addWorkflow(($container->privates['state_machine.pull_request'] ?? $container->load('getStateMachine_PullRequestService')), new \Symfony\Component\Workflow\SupportStrategy\InstanceOfSupportStrategy('App\\Entity\\PullRequest'));
        $instance->addWorkflow(($container->privates['workflow.blog_publishing'] ?? $container->load('getWorkflow_BlogPublishingService')), new \Symfony\Component\Workflow\SupportStrategy\InstanceOfSupportStrategy('App\\Entity\\BlogPost'));
        $instance->addWorkflow(($container->privates['state_machine.subscription'] ?? $container->load('getStateMachine_SubscriptionService')), new \Symfony\Component\Workflow\SupportStrategy\InstanceOfSupportStrategy('App\\Subscription\\Entity\\Subscription'));

        return $instance;
    }
}

<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">/home/loic/www/sylius/SyliusResourceBundle/tests/Application</parameter>
    <parameter key="kernel.environment">test</parameter>
    <parameter key="kernel.runtime_environment">%env(default:kernel.environment:APP_RUNTIME_ENV)%</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.build_dir">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test</parameter>
    <parameter key="kernel.cache_dir">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test</parameter>
    <parameter key="kernel.logs_dir">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="SyliusResourceBundle">Sylius\Bundle\ResourceBundle\SyliusResourceBundle</parameter>
      <parameter key="BabDevPagerfantaBundle">BabDev\PagerfantaBundle\BabDevPagerfantaBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="BazingaHateoasBundle">Bazinga\Bundle\HateoasBundle\BazingaHateoasBundle</parameter>
      <parameter key="FidryAliceDataFixturesBundle">Fidry\AliceDataFixtures\Bridge\Symfony\FidryAliceDataFixturesBundle</parameter>
      <parameter key="NelmioAliceBundle">Nelmio\Alice\Bridge\Symfony\NelmioAliceBundle</parameter>
      <parameter key="winzouStateMachineBundle">winzou\Bundle\StateMachineBundle\winzouStateMachineBundle</parameter>
      <parameter key="SyliusGridBundle">Sylius\Bundle\GridBundle\SyliusGridBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/home/loic/www/sylius/SyliusResourceBundle/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="SyliusResourceBundle" type="collection">
        <parameter key="path">/home/loic/www/sylius/SyliusResourceBundle/src/Bundle</parameter>
        <parameter key="namespace">Sylius\Bundle\ResourceBundle</parameter>
      </parameter>
      <parameter key="BabDevPagerfantaBundle" type="collection">
        <parameter key="path">/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle</parameter>
        <parameter key="namespace">BabDev\PagerfantaBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="FOSRestBundle" type="collection">
        <parameter key="path">/home/loic/www/sylius/SyliusResourceBundle/vendor/friendsofsymfony/rest-bundle</parameter>
        <parameter key="namespace">FOS\RestBundle</parameter>
      </parameter>
      <parameter key="JMSSerializerBundle" type="collection">
        <parameter key="path">/home/loic/www/sylius/SyliusResourceBundle/vendor/jms/serializer-bundle</parameter>
        <parameter key="namespace">JMS\SerializerBundle</parameter>
      </parameter>
      <parameter key="BazingaHateoasBundle" type="collection">
        <parameter key="path">/home/loic/www/sylius/SyliusResourceBundle/vendor/willdurand/hateoas-bundle</parameter>
        <parameter key="namespace">Bazinga\Bundle\HateoasBundle</parameter>
      </parameter>
      <parameter key="FidryAliceDataFixturesBundle" type="collection">
        <parameter key="path">/home/loic/www/sylius/SyliusResourceBundle/vendor/theofidry/alice-data-fixtures/src/Bridge/Symfony</parameter>
        <parameter key="namespace">Fidry\AliceDataFixtures\Bridge\Symfony</parameter>
      </parameter>
      <parameter key="NelmioAliceBundle" type="collection">
        <parameter key="path">/home/loic/www/sylius/SyliusResourceBundle/vendor/nelmio/alice/src/Bridge/Symfony</parameter>
        <parameter key="namespace">Nelmio\Alice\Bridge\Symfony</parameter>
      </parameter>
      <parameter key="winzouStateMachineBundle" type="collection">
        <parameter key="path">/home/loic/www/sylius/SyliusResourceBundle/vendor/winzou/state-machine-bundle</parameter>
        <parameter key="namespace">winzou\Bundle\StateMachineBundle</parameter>
      </parameter>
      <parameter key="SyliusGridBundle" type="collection">
        <parameter key="path">/home/loic/www/sylius/SyliusResourceBundle/vendor/sylius/grid-bundle/src/Bundle</parameter>
        <parameter key="namespace">Sylius\Bundle\GridBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">App_KernelTestDebugContainer</parameter>
    <parameter key="database_driver">pdo_sqlite</parameter>
    <parameter key="database_path">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/config/db.sql</parameter>
    <parameter key="locale">en_US</parameter>
    <parameter key="secret">Three can keep a secret, if two of them are dead.</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleSignalEvent">console.signal</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Workflow\Event\GuardEvent">workflow.guard</parameter>
      <parameter key="Symfony\Component\Workflow\Event\LeaveEvent">workflow.leave</parameter>
      <parameter key="Symfony\Component\Workflow\Event\TransitionEvent">workflow.transition</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnterEvent">workflow.enter</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnteredEvent">workflow.entered</parameter>
      <parameter key="Symfony\Component\Workflow\Event\CompletedEvent">workflow.completed</parameter>
      <parameter key="Symfony\Component\Workflow\Event\AnnounceEvent">workflow.announce</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationSuccessEvent">security.authentication.success</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\InteractiveLoginEvent">security.interactive_login</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\SwitchUserEvent">security.switch_user</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">Three can keep a secret, if two of them are dead.</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trust_x_sendfile_type_header">false</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en_US</parameter>
    <parameter key="kernel.enabled_locales" type="collection"/>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="debug.file_link_format">%env(default::SYMFONY_IDE)%</parameter>
    <parameter key="test.client.parameters" type="collection"/>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/translations</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/App_KernelTestDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_dir">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/serialization.php</parameter>
    <parameter key="cache.prefix.seed">_/home/loic/www/sylius/SyliusResourceBundle/tests/Application.App_KernelTestDebugContainer</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">null</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="validator.mapping.cache.file">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="security.role_hierarchy.roles" type="collection"/>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="security.firewalls" type="collection">
      <parameter>dev</parameter>
      <parameter>main</parameter>
    </parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="uuid" type="collection">
        <parameter key="class">Symfony\Bridge\Doctrine\Types\UuidType</parameter>
      </parameter>
      <parameter key="ulid" type="collection">
        <parameter key="class">Symfony\Bridge\Doctrine\Types\UlidType</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.attribute.class">Doctrine\ORM\Mapping\Driver\AttributeDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.enable_lazy_ghost_objects">false</parameter>
    <parameter key="doctrine.orm.proxy_dir">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="sylius.state_machine.class">Sylius\Component\Resource\StateMachine\StateMachine</parameter>
    <parameter key="sylius.resource.mapping" type="collection">
      <parameter key="paths" type="collection">
        <parameter>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/src/BoardGameBlog/Infrastructure/Sylius/Resource</parameter>
        <parameter>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/src/Subscription/Entity</parameter>
      </parameter>
    </parameter>
    <parameter key="sylius.resource.settings" type="collection">
      <parameter key="state_machine_component">symfony</parameter>
      <parameter key="paginate">null</parameter>
      <parameter key="limit">null</parameter>
      <parameter key="allowed_paginate" type="collection">
        <parameter>10</parameter>
        <parameter>20</parameter>
        <parameter>30</parameter>
      </parameter>
      <parameter key="default_page_size">10</parameter>
      <parameter key="default_templates_dir">null</parameter>
      <parameter key="sortable">false</parameter>
      <parameter key="sorting">null</parameter>
      <parameter key="filterable">false</parameter>
      <parameter key="criteria">null</parameter>
    </parameter>
    <parameter key="sylius.orm.repository.class">Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository</parameter>
    <parameter key="sylius.translation.translatable_listener.doctrine.orm.class">Sylius\Bundle\ResourceBundle\EventListener\ORMTranslatableListener</parameter>
    <parameter key="sylius.resources" type="collection">
      <parameter key="app.board_game" type="collection">
        <parameter key="driver">false</parameter>
        <parameter key="classes" type="collection">
          <parameter key="model">App\BoardGameBlog\Infrastructure\Sylius\Resource\BoardGameResource</parameter>
          <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
          <parameter key="factory">Sylius\Component\Resource\Factory\Factory</parameter>
          <parameter key="form">Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType</parameter>
        </parameter>
        <parameter key="state_machine_component">null</parameter>
      </parameter>
      <parameter key="app.blog_post" type="collection">
        <parameter key="classes" type="collection">
          <parameter key="model">App\Entity\BlogPost</parameter>
          <parameter key="form">App\Form\Type\BlogPostType</parameter>
          <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
          <parameter key="factory">Sylius\Component\Resource\Factory\Factory</parameter>
        </parameter>
        <parameter key="driver">doctrine/orm</parameter>
        <parameter key="state_machine_component">null</parameter>
      </parameter>
      <parameter key="app.book" type="collection">
        <parameter key="classes" type="collection">
          <parameter key="model">App\Entity\Book</parameter>
          <parameter key="factory">App\Factory\BookFactory</parameter>
          <parameter key="controller">App\Controller\BookController</parameter>
          <parameter key="repository">App\Repository\BookRepository</parameter>
          <parameter key="form">App\Form\Type\BookType</parameter>
        </parameter>
        <parameter key="translation" type="collection">
          <parameter key="classes" type="collection">
            <parameter key="model">App\Entity\BookTranslation</parameter>
            <parameter key="form">App\Form\Type\BookTranslationType</parameter>
            <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
            <parameter key="factory">Sylius\Component\Resource\Factory\Factory</parameter>
          </parameter>
        </parameter>
        <parameter key="driver">doctrine/orm</parameter>
        <parameter key="state_machine_component">null</parameter>
      </parameter>
      <parameter key="app.book_translation" type="collection">
        <parameter key="driver">doctrine/orm</parameter>
        <parameter key="classes" type="collection">
          <parameter key="model">App\Entity\BookTranslation</parameter>
          <parameter key="form">App\Form\Type\BookTranslationType</parameter>
          <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
          <parameter key="factory">Sylius\Component\Resource\Factory\Factory</parameter>
        </parameter>
      </parameter>
      <parameter key="app.comic_book" type="collection">
        <parameter key="classes" type="collection">
          <parameter key="model">App\Entity\ComicBook</parameter>
          <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
          <parameter key="factory">Sylius\Component\Resource\Factory\Factory</parameter>
          <parameter key="form">Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType</parameter>
        </parameter>
        <parameter key="driver">doctrine/orm</parameter>
        <parameter key="state_machine_component">null</parameter>
      </parameter>
      <parameter key="app.science_book" type="collection">
        <parameter key="classes" type="collection">
          <parameter key="model">App\Entity\ScienceBook</parameter>
          <parameter key="form">App\Form\Type\ScienceBookType</parameter>
          <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
          <parameter key="factory">Sylius\Component\Resource\Factory\Factory</parameter>
        </parameter>
        <parameter key="driver">doctrine/orm</parameter>
        <parameter key="state_machine_component">null</parameter>
      </parameter>
      <parameter key="app.gedmo" type="collection">
        <parameter key="classes" type="collection">
          <parameter key="model">App\Entity\GedmoExtendedExample</parameter>
          <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
          <parameter key="factory">Sylius\Component\Resource\Factory\Factory</parameter>
          <parameter key="form">Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType</parameter>
        </parameter>
        <parameter key="driver">doctrine/orm</parameter>
        <parameter key="state_machine_component">null</parameter>
      </parameter>
      <parameter key="app.pull_request" type="collection">
        <parameter key="classes" type="collection">
          <parameter key="model">App\Entity\PullRequest</parameter>
          <parameter key="form">App\Form\Type\PullRequestType</parameter>
          <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
          <parameter key="factory">Sylius\Component\Resource\Factory\Factory</parameter>
        </parameter>
        <parameter key="driver">doctrine/orm</parameter>
        <parameter key="state_machine_component">null</parameter>
      </parameter>
      <parameter key="app.subscription" type="collection">
        <parameter key="classes" type="collection">
          <parameter key="model">App\Subscription\Entity\Subscription</parameter>
          <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
          <parameter key="factory">Sylius\Component\Resource\Factory\Factory</parameter>
          <parameter key="form">Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType</parameter>
        </parameter>
        <parameter key="driver">doctrine/orm</parameter>
      </parameter>
    </parameter>
    <parameter key="app.model.blog_post.class">App\Entity\BlogPost</parameter>
    <parameter key="app.controller.blog_post.class">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
    <parameter key="app.factory.blog_post.class">Sylius\Component\Resource\Factory\Factory</parameter>
    <parameter key="sylius.doctrine.orm.container_repository_factory.entities" type="collection">
      <parameter>App\Entity\BlogPost</parameter>
      <parameter>App\Entity\BookTranslation</parameter>
      <parameter>App\Entity\ComicBook</parameter>
      <parameter>App\Entity\ScienceBook</parameter>
      <parameter>App\Entity\GedmoExtendedExample</parameter>
      <parameter>App\Entity\PullRequest</parameter>
      <parameter>App\Subscription\Entity\Subscription</parameter>
    </parameter>
    <parameter key="app.model.book.class">App\Entity\Book</parameter>
    <parameter key="app.controller.book.class">App\Controller\BookController</parameter>
    <parameter key="app.factory.book.class">App\Factory\BookFactory</parameter>
    <parameter key="app.repository.book.class">App\Repository\BookRepository</parameter>
    <parameter key="app.model.book_translation.class">App\Entity\BookTranslation</parameter>
    <parameter key="app.controller.book_translation.class">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
    <parameter key="app.factory.book_translation.class">Sylius\Component\Resource\Factory\Factory</parameter>
    <parameter key="app.model.comic_book.class">App\Entity\ComicBook</parameter>
    <parameter key="app.controller.comic_book.class">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
    <parameter key="app.factory.comic_book.class">Sylius\Component\Resource\Factory\Factory</parameter>
    <parameter key="app.model.science_book.class">App\Entity\ScienceBook</parameter>
    <parameter key="app.controller.science_book.class">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
    <parameter key="app.factory.science_book.class">Sylius\Component\Resource\Factory\Factory</parameter>
    <parameter key="app.model.gedmo.class">App\Entity\GedmoExtendedExample</parameter>
    <parameter key="app.controller.gedmo.class">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
    <parameter key="app.factory.gedmo.class">Sylius\Component\Resource\Factory\Factory</parameter>
    <parameter key="app.model.pull_request.class">App\Entity\PullRequest</parameter>
    <parameter key="app.controller.pull_request.class">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
    <parameter key="app.factory.pull_request.class">Sylius\Component\Resource\Factory\Factory</parameter>
    <parameter key="app.model.subscription.class">App\Subscription\Entity\Subscription</parameter>
    <parameter key="app.controller.subscription.class">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
    <parameter key="app.factory.subscription.class">Sylius\Component\Resource\Factory\Factory</parameter>
    <parameter key="babdev_pagerfanta.default_twig_template">@Pagerfanta/default.html.twig</parameter>
    <parameter key="babdev_pagerfanta.default_view">default</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/templates</parameter>
    <parameter key="fos_rest.format_listener.rules">null</parameter>
    <parameter key="fidry_alice_data_fixtures.default_purge_mode">delete</parameter>
    <parameter key="nelmio_alice.locale">en_US</parameter>
    <parameter key="nelmio_alice.seed">1</parameter>
    <parameter key="nelmio_alice.functions_blacklist" type="collection">
      <parameter>current</parameter>
    </parameter>
    <parameter key="nelmio_alice.loading_limit">5</parameter>
    <parameter key="nelmio_alice.max_unique_values_retry">150</parameter>
    <parameter key="sm.configs" type="collection">
      <parameter key="pull_request" type="collection">
        <parameter key="class">App\Entity\PullRequest</parameter>
        <parameter key="property_path">currentPlace</parameter>
        <parameter key="graph">pull_request</parameter>
        <parameter key="states" type="collection">
          <parameter>start</parameter>
          <parameter>coding</parameter>
          <parameter>test</parameter>
          <parameter>review</parameter>
          <parameter>merged</parameter>
          <parameter>closed</parameter>
        </parameter>
        <parameter key="transitions" type="collection">
          <parameter key="submit" type="collection">
            <parameter key="from" type="collection">
              <parameter>start</parameter>
            </parameter>
            <parameter key="to">test</parameter>
          </parameter>
          <parameter key="update" type="collection">
            <parameter key="from" type="collection">
              <parameter>coding</parameter>
              <parameter>test</parameter>
              <parameter>review</parameter>
            </parameter>
            <parameter key="to">test</parameter>
          </parameter>
          <parameter key="wait_for_review" type="collection">
            <parameter key="from" type="collection">
              <parameter>test</parameter>
            </parameter>
            <parameter key="to">review</parameter>
          </parameter>
          <parameter key="request_change" type="collection">
            <parameter key="from" type="collection">
              <parameter>review</parameter>
            </parameter>
            <parameter key="to">coding</parameter>
          </parameter>
          <parameter key="accept" type="collection">
            <parameter key="from" type="collection">
              <parameter>review</parameter>
            </parameter>
            <parameter key="to">merged</parameter>
          </parameter>
          <parameter key="reject" type="collection">
            <parameter key="from" type="collection">
              <parameter>review</parameter>
            </parameter>
            <parameter key="to">closed</parameter>
          </parameter>
          <parameter key="reopen" type="collection">
            <parameter key="from" type="collection">
              <parameter>closed</parameter>
            </parameter>
            <parameter key="to">review</parameter>
          </parameter>
        </parameter>
        <parameter key="state_machine_class">SM\StateMachine\StateMachine</parameter>
      </parameter>
      <parameter key="subscription" type="collection">
        <parameter key="class">App\Subscription\Entity\Subscription</parameter>
        <parameter key="property_path">state</parameter>
        <parameter key="graph">subscription</parameter>
        <parameter key="states" type="collection">
          <parameter>new</parameter>
          <parameter>accepted</parameter>
          <parameter>rejected</parameter>
        </parameter>
        <parameter key="transitions" type="collection">
          <parameter key="accept" type="collection">
            <parameter key="from" type="collection">
              <parameter>new</parameter>
            </parameter>
            <parameter key="to">accepted</parameter>
          </parameter>
          <parameter key="reject" type="collection">
            <parameter key="from" type="collection">
              <parameter>new</parameter>
            </parameter>
            <parameter key="to">rejected</parameter>
          </parameter>
        </parameter>
        <parameter key="state_machine_class">SM\StateMachine\StateMachine</parameter>
      </parameter>
    </parameter>
    <parameter key="sm.callback.class">winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallback</parameter>
    <parameter key="sylius.grid.templates.action" type="collection">
      <parameter key="apply_transition">grid/action/apply_transition.html.twig</parameter>
      <parameter key="delete">grid/action/delete.html.twig</parameter>
      <parameter key="show">grid/action/show.html.twig</parameter>
      <parameter key="update">grid/action/update.html.twig</parameter>
    </parameter>
    <parameter key="sylius.grid.templates.bulk_action" type="collection">
      <parameter key="delete">grid/bulk_action/delete.html.twig</parameter>
    </parameter>
    <parameter key="sylius.grid.templates.filter" type="collection"/>
    <parameter key="sylius.grids_definitions" type="collection">
      <parameter key="science_book_grid" type="collection">
        <parameter key="driver" type="collection">
          <parameter key="options" type="collection">
            <parameter key="class">App\Entity\ScienceBook</parameter>
          </parameter>
          <parameter key="name">doctrine/orm</parameter>
        </parameter>
        <parameter key="sorting" type="collection">
          <parameter key="title">asc</parameter>
        </parameter>
        <parameter key="fields" type="collection">
          <parameter key="title" type="collection">
            <parameter key="type">string</parameter>
            <parameter key="sortable">null</parameter>
            <parameter key="enabled">true</parameter>
            <parameter key="position">100</parameter>
            <parameter key="options" type="collection"/>
          </parameter>
          <parameter key="authorFirstName" type="collection">
            <parameter key="type">string</parameter>
            <parameter key="sortable">author.firstName</parameter>
            <parameter key="enabled">true</parameter>
            <parameter key="position">100</parameter>
            <parameter key="options" type="collection"/>
          </parameter>
          <parameter key="authorLastName" type="collection">
            <parameter key="type">string</parameter>
            <parameter key="sortable">author.firstName</parameter>
            <parameter key="enabled">true</parameter>
            <parameter key="position">100</parameter>
            <parameter key="options" type="collection"/>
          </parameter>
        </parameter>
        <parameter key="filters" type="collection">
          <parameter key="search" type="collection">
            <parameter key="type">string</parameter>
            <parameter key="options" type="collection">
              <parameter key="fields" type="collection">
                <parameter>title</parameter>
                <parameter>author.firstName</parameter>
                <parameter>author.lastName</parameter>
              </parameter>
            </parameter>
            <parameter key="enabled">true</parameter>
            <parameter key="position">100</parameter>
            <parameter key="form_options" type="collection"/>
          </parameter>
        </parameter>
        <parameter key="limits" type="collection">
          <parameter>10</parameter>
          <parameter>25</parameter>
          <parameter>50</parameter>
        </parameter>
        <parameter key="actions" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="white_october_pagerfanta.default_view">default</parameter>
    <parameter key="sylius.state_machine_component.default">null</parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>sylius.console.command.resource_debug</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="routing.route_loader"/>
    </service>
    <service id="Psr\Log\NullLogger" class="Psr\Log\NullLogger" autowire="true" autoconfigure="true"/>
    <service id="App\Controller\BookController" class="App\Controller\BookController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service">
        <service class="Sylius\Component\Resource\Metadata\Metadata">
          <argument>app.book</argument>
          <factory service="sylius.resource_registry" method="get"/>
        </service>
      </argument>
      <argument type="service" id="sylius.resource_controller.request_configuration_factory"/>
      <argument type="service" id="sylius.resource_controller.view_handler" on-invalid="null"/>
      <argument type="service" id="app.repository.book"/>
      <argument type="service" id="app.factory.book"/>
      <argument type="service" id="sylius.resource_controller.new_resource_factory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="sylius.resource_controller.single_resource_provider"/>
      <argument type="service" id="sylius.resource_controller.resources_collection_provider"/>
      <argument type="service" id="sylius.resource_controller.form_factory"/>
      <argument type="service" id="sylius.resource_controller.redirect_handler"/>
      <argument type="service" id="sylius.resource_controller.flash_helper"/>
      <argument type="service" id="sylius.resource_controller.authorization_checker.disabled"/>
      <argument type="service" id="sylius.resource_controller.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sylius.resource_controller.resource_update_handler"/>
      <argument type="service" id="sylius.resource_controller.resource_delete_handler"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="test.translation_locale_provider" class="Sylius\Component\Resource\Translation\Provider\ImmutableTranslationLocaleProvider" autowire="true" autoconfigure="true">
      <argument type="collection">
        <argument>pl_PL</argument>
        <argument>en_US</argument>
        <argument>de_DE</argument>
      </argument>
      <argument>en_US</argument>
    </service>
    <service id="test.custom_book_factory" class="App\Factory\CustomBookFactory" public="true" autowire="true" autoconfigure="true">
      <argument>App\Entity\Book</argument>
      <argument type="service" id="test.translation_locale_provider"/>
    </service>
    <service id="test.custom_book_repository" class="App\Repository\CustomBookRepository" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="app.repository.book"/>
    </service>
    <service id="app.form.type.book" class="App\Form\Type\BookType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument>App\Entity\Book</argument>
    </service>
    <service id="app.form.type.science_book" class="App\Form\Type\ScienceBookType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument>App\Entity\ScienceBook</argument>
      <argument type="collection">
        <argument>sylius</argument>
      </argument>
    </service>
    <service id="app.form.type.book_translation" class="App\Form\Type\BookTranslationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument>App\Entity\BookTranslation</argument>
    </service>
    <service id="Gedmo\Sortable\SortableListener" class="Gedmo\Sortable\SortableListener" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="App\Repository\ComicBookRepository" class="App\Repository\ComicBookRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Shared\Infrastructure\Symfony\Messenger\MessengerCommandBus" class="App\Shared\Infrastructure\Symfony\Messenger\MessengerCommandBus" autowire="true" autoconfigure="true">
      <argument type="service" id="command.bus"/>
    </service>
    <service id="App\Shared\Infrastructure\Symfony\Messenger\MessengerQueryBus" class="App\Shared\Infrastructure\Symfony\Messenger\MessengerQueryBus" autowire="true" autoconfigure="true">
      <argument type="service" id="query.bus"/>
    </service>
    <service id="App\BoardGameBlog\Application\Command\CreateBoardGameCommand" class="App\BoardGameBlog\Application\Command\CreateBoardGameCommand" autowire="true" autoconfigure="true">
      <argument type="service" id="App\BoardGameBlog\Domain\ValueObject\BoardGameName"/>
    </service>
    <service id="App\BoardGameBlog\Application\Command\CreateBoardGameCommandHandler" class="App\BoardGameBlog\Application\Command\CreateBoardGameCommandHandler" autowire="true" autoconfigure="true">
      <tag name="messenger.message_handler" bus="command.bus"/>
      <argument type="service" id="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository"/>
    </service>
    <service id="App\BoardGameBlog\Application\Command\DeleteBoardGameCommand" class="App\BoardGameBlog\Application\Command\DeleteBoardGameCommand" autowire="true" autoconfigure="true">
      <argument type="service" id="App\BoardGameBlog\Domain\ValueObject\BoardGameId"/>
    </service>
    <service id="App\BoardGameBlog\Application\Command\DeleteBoardGameCommandHandler" class="App\BoardGameBlog\Application\Command\DeleteBoardGameCommandHandler" autowire="true" autoconfigure="true">
      <tag name="messenger.message_handler" bus="command.bus"/>
      <argument type="service" id="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository"/>
    </service>
    <service id="App\BoardGameBlog\Application\Command\UpdateBoardGameCommand" class="App\BoardGameBlog\Application\Command\UpdateBoardGameCommand" autowire="true" autoconfigure="true">
      <argument type="service" id="App\BoardGameBlog\Domain\ValueObject\BoardGameId"/>
      <argument type="service" id="App\BoardGameBlog\Domain\ValueObject\BoardGameName"/>
    </service>
    <service id="App\BoardGameBlog\Application\Command\UpdateBoardGameCommandHandler" class="App\BoardGameBlog\Application\Command\UpdateBoardGameCommandHandler" autowire="true" autoconfigure="true">
      <tag name="messenger.message_handler" bus="command.bus"/>
      <argument type="service" id="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository"/>
    </service>
    <service id="App\BoardGameBlog\Application\Query\FindBoardGameQuery" class="App\BoardGameBlog\Application\Query\FindBoardGameQuery" autowire="true" autoconfigure="true">
      <argument type="service" id="App\BoardGameBlog\Domain\ValueObject\BoardGameId"/>
    </service>
    <service id="App\BoardGameBlog\Application\Query\FindBoardGameQueryHandler" class="App\BoardGameBlog\Application\Query\FindBoardGameQueryHandler" autowire="true" autoconfigure="true">
      <tag name="messenger.message_handler" bus="query.bus"/>
      <argument type="service" id="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository"/>
    </service>
    <service id="App\BoardGameBlog\Domain\Exception\MissingBoardGameException" class="App\BoardGameBlog\Domain\Exception\MissingBoardGameException" autowire="true" autoconfigure="true">
      <argument type="service" id="App\BoardGameBlog\Domain\ValueObject\BoardGameId"/>
    </service>
    <service id="App\BoardGameBlog\Domain\Model\BoardGame" class="App\BoardGameBlog\Domain\Model\BoardGame" autowire="true" autoconfigure="true">
      <argument type="service" id="App\BoardGameBlog\Domain\ValueObject\BoardGameName"/>
    </service>
    <service id="App\BoardGameBlog\Domain\ValueObject\BoardGameId" class="App\BoardGameBlog\Domain\ValueObject\BoardGameId" autowire="true" autoconfigure="true"/>
    <service id="App\BoardGameBlog\Domain\ValueObject\BoardGameName" class="App\BoardGameBlog\Domain\ValueObject\BoardGameName" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;App\BoardGameBlog\Domain\ValueObject\BoardGameName&quot;: argument &quot;$value&quot; of method &quot;__construct()&quot; is type-hinted &quot;string&quot;, you should configure its value explicitly."/>
    </service>
    <service id="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository" class="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\BoardGameBlog\Infrastructure\Sylius\Grid\BoardGameGrid" class="App\BoardGameBlog\Infrastructure\Sylius\Grid\BoardGameGrid" autowire="true" autoconfigure="true">
      <tag name="sylius.grid"/>
    </service>
    <service id="App\BoardGameBlog\Infrastructure\Sylius\Resource\BoardGameResource" class="App\BoardGameBlog\Infrastructure\Sylius\Resource\BoardGameResource" autowire="true" autoconfigure="true"/>
    <service id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\CreateBoardGameProcessor" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\CreateBoardGameProcessor" autowire="true" autoconfigure="true">
      <tag name="sylius.state_processor"/>
      <argument type="service" id="App\Shared\Infrastructure\Symfony\Messenger\MessengerCommandBus"/>
    </service>
    <service id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\DeleteBoardGameProcessor" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\DeleteBoardGameProcessor" autowire="true" autoconfigure="true">
      <tag name="sylius.state_processor"/>
      <argument type="service" id="App\Shared\Infrastructure\Symfony\Messenger\MessengerCommandBus"/>
    </service>
    <service id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\UpdateBoardGameProcessor" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\UpdateBoardGameProcessor" autowire="true" autoconfigure="true">
      <tag name="sylius.state_processor"/>
      <argument type="service" id="App\Shared\Infrastructure\Symfony\Messenger\MessengerCommandBus"/>
    </service>
    <service id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameCollectionProvider" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameCollectionProvider" autowire="true" autoconfigure="true">
      <tag name="sylius.state_provider"/>
      <argument type="service" id="Sylius\Component\Resource\Grid\State\RequestGridProvider"/>
    </service>
    <service id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameItemProvider" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameItemProvider" autowire="true" autoconfigure="true">
      <tag name="sylius.state_provider"/>
      <argument type="service" id="App\Shared\Infrastructure\Symfony\Messenger\MessengerQueryBus"/>
    </service>
    <service id="App\BoardGameBlog\Infrastructure\Symfony\Form\Type\BoardGameType" class="App\BoardGameBlog\Infrastructure\Symfony\Form\Type\BoardGameType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Subscription\Entity\Subscription" class="App\Subscription\Entity\Subscription" autowire="true" autoconfigure="true"/>
    <service id="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber" class="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="App\Subscription\Factory\SubscriptionFactory" class="App\Subscription\Factory\SubscriptionFactory" autowire="true" autoconfigure="true">
      <tag name="sylius.resource_factory"/>
      <tag name="container.decorator" id="app.factory.subscription"/>
    </service>
    <service id="App\Subscription\Form\Type\SubscriptionType" class="App\Subscription\Form\Type\SubscriptionType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Subscription\Grid\SubscriptionGrid" class="App\Subscription\Grid\SubscriptionGrid" autowire="true" autoconfigure="true">
      <tag name="sylius.grid"/>
    </service>
    <service id="App\Subscription\Twig\Context\Factory\ShowSubscriptionContextFactory" class="App\Subscription\Twig\Context\Factory\ShowSubscriptionContextFactory" autowire="true" autoconfigure="true">
      <tag name="sylius.twig_context_factory"/>
      <argument type="service" id="sylius.twig.context.factory.default"/>
    </service>
    <service id="controller_resolver" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory"/>
    <service id="argument_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="security.user_value_resolver"/>
        <argument type="service" id="security.security_token_value_resolver"/>
        <argument type="service" id="doctrine.orm.entity_value_resolver"/>
        <argument type="service" id="argument_resolver.backed_enum_resolver"/>
        <argument type="service" id="argument_resolver.datetime"/>
        <argument type="service" id="argument_resolver.request_attribute"/>
        <argument type="service" id="argument_resolver.request"/>
        <argument type="service" id="argument_resolver.session"/>
        <argument type="service" id="argument_resolver.service"/>
        <argument type="service" id="argument_resolver.default"/>
        <argument type="service" id="argument_resolver.variadic"/>
      </argument>
      <argument type="service" id=".service_locator.d2ZEtNx"/>
    </service>
    <service id="argument_resolver.backed_enum_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.datetime" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver">controller.argument_value_resolver</tag>
      <argument>null</argument>
    </service>
    <service id="argument_resolver.request_payload" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver" lazy="true">
      <tag name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver">controller.targeted_value_resolver</tag>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="validator" on-invalid="null"/>
      <argument type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver">
      <tag priority="50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver">
      <tag priority="50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">
      <tag priority="-50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id=".service_locator.HBdvAhp"/>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver">
      <tag priority="-100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver">
      <tag priority="-150" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.query_parameter_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver">
      <tag name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver">controller.targeted_value_resolver</tag>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
      <argument>false</argument>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en_US</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>false</argument>
      <argument type="collection"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="controller.cache_attribute_listener" class="Symfony\Component\HttpKernel\EventListener\CacheAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag">
      <argument type="service" id="service_container"/>
    </service>
    <service id="event_dispatcher" class="Symfony\Component\EventDispatcher\EventDispatcher" public="true">
      <tag name="container.hot_path"/>
      <tag name="event_dispatcher">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.context_listener.0"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="sylius.listener.add_format"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>28</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="sylius.listener.read"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>4</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="sylius.listener.factory"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>3</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="sylius.listener.deserialize"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>2</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="sylius.listener.form"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="sylius.listener.validate"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="sylius.listener.write"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="sylius.listener.serialize"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="sylius.listener.flash"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="sylius.listener.respond"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="sylius.listener.exception.validation"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="pagerfanta.event_listener.convert_not_valid_max_per_page_to_not_found"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="pagerfanta.event_listener.convert_not_valid_current_page_to_not_found"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="fos_rest.body_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="fos_rest.format_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>34</argument>
      </call>
      <call method="addListener">
        <argument>app.subscription.show</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber"/>
          <argument>smokeShowEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>app.subscription.index</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber"/>
          <argument>smokeIndexEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>app.subscription.pre_create</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber"/>
          <argument>smokePreEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>app.subscription.post_create</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber"/>
          <argument>smokePostEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>app.subscription.pre_update</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber"/>
          <argument>smokePreEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>app.subscription.post_update</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber"/>
          <argument>smokePostEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>app.subscription.pre_delete</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber"/>
          <argument>smokePreEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>app.subscription.post_delete</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber"/>
          <argument>smokePostEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>app.subscription.bulk_delete</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber"/>
          <argument>smokeBulkEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="argument_resolver.request_payload"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>removeCspHeader</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.cache_attribute_listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.cache_attribute_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="test.session.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="test.session.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.retry.send_failed_message_for_retry_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.failure.add_error_details_stamp_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>200</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerRunningEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.dispatch_pcntl_signal_listener"/>
          <argument>onWorkerRunning</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerStartedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener"/>
          <argument>onWorkerStarted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerRunningEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener"/>
          <argument>onWorkerRunning</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerStartedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_signals_listener"/>
          <argument>onWorkerStarted</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerRunningEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener"/>
          <argument>onWorkerRunning</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.is_granted_attribute_listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>20</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageHandledEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager"/>
          <argument>onWorkerMessageHandled</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager"/>
          <argument>onWorkerMessageFailed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="sylius.storage.cookie"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="sylius.storage.cookie"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.template_attribute_listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\HttpKernelRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\ResponseRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\SymfonyRuntime"/>
      <argument type="service" id="event_dispatcher"/>
      <argument type="service" id="controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="argument_resolver"/>
      <argument>false</argument>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="http_cache" class="Symfony\Bundle\FrameworkBundle\HttpCache\HttpCache">
      <tag name="container.hot_path"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="http_cache.store"/>
      <argument>null</argument>
      <argument type="collection">
        <argument key="debug">true</argument>
      </argument>
      <argument type="service">
        <service class="void">
          <factory class="Symfony\Component\HttpFoundation\Request" method="enableHttpMethodParameterOverride"/>
        </service>
      </argument>
    </service>
    <service id="http_cache.store" class="Symfony\Component\HttpKernel\HttpCache\Store">
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/http_cache</argument>
    </service>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <tag name="container.no_preload"/>
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/App_KernelTestDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>Three can keep a secret, if two of them are dead.</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.asset_mapper" type="service" id="cache.asset_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="cache.scheduler" type="service" id="cache.scheduler" on-invalid="ignore_uninitialized"/>
        <argument key="translation.locale_switcher" type="service" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.in_memory.factory" type="service" id="messenger.transport.in_memory.factory" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.cache.metadata.resource_collection" type="service" id="sylius.cache.metadata.resource_collection" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.engine" type="service" id="twig.form.engine" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.view_handler.default" type="service" id="fos_rest.view_handler.default" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.asset_mapper" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.messenger.restart_workers_signal" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.scheduler" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="translation.locale_switcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="messenger.transport.in_memory.factory" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.security_is_granted_attribute_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="sylius.cache.metadata.resource_collection" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="twig.form.engine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="fos_rest.view_handler.default" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.XXv1IfR"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="slugger"/>
        <argument type="service" id="translator.default"/>
        <argument type="service" id="translation.locale_switcher"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger">
      <tag name="kernel.locale_aware"/>
      <argument>en_US</argument>
    </service>
    <service id="container.getenv" class="Closure">
      <tag name="routing.expression_language_function" function="env"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>getEnv</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.get_routing_condition_service" class="Closure" public="true">
      <tag name="routing.expression_language_function" function="service"/>
      <argument type="collection">
        <argument type="service" id=".service_locator.Xbsa8iG"/>
        <argument>get</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.env" class="Symfony\Component\String\LazyString" constructor="fromCallable" abstract="true">
      <argument type="service" id="container.getenv"/>
    </service>
    <service id="config_builder.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ConfigBuilderCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
    </service>
    <service id="Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Request" class="Symfony\Component\HttpFoundation\Request" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Response" class="Symfony\Component\HttpFoundation\Response" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" class="Symfony\Component\HttpFoundation\Session\SessionInterface" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id=".service_locator.lLv4pWF"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.uri_generator" class="Symfony\Component\HttpKernel\Fragment\FragmentUriGenerator">
      <argument>/_fragment</argument>
      <argument type="service" id="uri_signer"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application</argument>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
        </service>
      </argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>about</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about the current project</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
      <call method="setDescription">
        <argument>Install bundle's web assets under a public directory</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear the cache</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.asset_mapper</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.scheduler</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>sylius.cache.metadata.resource_collection</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
      <call method="setDescription">
        <argument>Prune cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_invalidate_tags" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolInvalidateTagsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.NBUFN6A"/>
      <call method="setName">
        <argument>cache:pool:invalidate-tags</argument>
      </call>
      <call method="setDescription">
        <argument>Invalidate cache tags for all or a specific pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.asset_mapper</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.scheduler</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>sylius.cache.metadata.resource_collection</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
      <call method="setDescription">
        <argument>Delete an item from a cache pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.asset_mapper</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.scheduler</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>sylius.cache.metadata.resource_collection</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
      <call method="setDescription">
        <argument>List available cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
      <call method="setDescription">
        <argument>Warm up an empty cache</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the current configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the default configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
      <call method="setDescription">
        <argument>Display current services for an application</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
      <call method="setDescription">
        <argument>Ensure that arguments injected into services match type declarations</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
      <call method="setDescription">
        <argument>List classes/interfaces you can use for autowiring</argument>
      </call>
    </service>
    <service id="console.command.dotenv_debug" class="Symfony\Component\Dotenv\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>test</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application</argument>
      <call method="setName">
        <argument>debug:dotenv</argument>
      </call>
      <call method="setDescription">
        <argument>Lists all dotenv files with variables and values</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator._1SGciK"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
      <call method="setDescription">
        <argument>Display configured listeners for an application</argument>
      </call>
    </service>
    <service id="console.command.messenger_consume_messages" class="Symfony\Component\Messenger\Command\ConsumeMessagesCommand">
      <tag name="console.command"/>
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.routable_message_bus"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="service" id="event_dispatcher"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
      <argument type="collection">
        <argument>sync</argument>
      </argument>
      <argument type="service" id="messenger.listener.reset_services" on-invalid="null"/>
      <argument type="collection">
        <argument>command.bus</argument>
        <argument>query.bus</argument>
      </argument>
      <argument>null</argument>
      <call method="setName">
        <argument>messenger:consume</argument>
      </call>
      <call method="setDescription">
        <argument>Consume messages</argument>
      </call>
    </service>
    <service id="console.command.messenger_setup_transports" class="Symfony\Component\Messenger\Command\SetupTransportsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="collection">
        <argument>sync</argument>
      </argument>
      <call method="setName">
        <argument>messenger:setup-transports</argument>
      </call>
      <call method="setDescription">
        <argument>Prepare the required infrastructure for the transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_debug" class="Symfony\Component\Messenger\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument key="command.bus" type="collection">
          <argument key="App\BoardGameBlog\Application\Command\CreateBoardGameCommand" type="collection">
            <argument type="collection">
              <argument>App\BoardGameBlog\Application\Command\CreateBoardGameCommandHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="App\BoardGameBlog\Application\Command\DeleteBoardGameCommand" type="collection">
            <argument type="collection">
              <argument>App\BoardGameBlog\Application\Command\DeleteBoardGameCommandHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="App\BoardGameBlog\Application\Command\UpdateBoardGameCommand" type="collection">
            <argument type="collection">
              <argument>App\BoardGameBlog\Application\Command\UpdateBoardGameCommandHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Messenger\Message\RedispatchMessage" type="collection">
            <argument type="collection">
              <argument>messenger.redispatch_message_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
        </argument>
        <argument key="query.bus" type="collection">
          <argument key="App\BoardGameBlog\Application\Query\FindBoardGameQuery" type="collection">
            <argument type="collection">
              <argument>App\BoardGameBlog\Application\Query\FindBoardGameQueryHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Messenger\Message\RedispatchMessage" type="collection">
            <argument type="collection">
              <argument>messenger.redispatch_message_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
        </argument>
      </argument>
      <call method="setName">
        <argument>debug:messenger</argument>
      </call>
      <call method="setDescription">
        <argument>List messages you can dispatch using the message buses</argument>
      </call>
    </service>
    <service id="console.command.messenger_stop_workers" class="Symfony\Component\Messenger\Command\StopWorkersCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
      <call method="setName">
        <argument>messenger:stop-workers</argument>
      </call>
      <call method="setDescription">
        <argument>Stop workers after their current message</argument>
      </call>
    </service>
    <service id="console.command.messenger_stats" class="Symfony\Component\Messenger\Command\StatsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="collection">
        <argument>sync</argument>
      </argument>
      <call method="setName">
        <argument>messenger:stats</argument>
      </call>
      <call method="setDescription">
        <argument>Show the message count for one or more transports</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
      <call method="setDescription">
        <argument>Display current routes for an application</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
      <call method="setDescription">
        <argument>Help debug routes by simulating a path info match</argument>
      </call>
    </service>
    <service id="console.command.serializer_debug" class="Symfony\Component\Serializer\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <call method="setName">
        <argument>debug:serializer</argument>
      </call>
      <call method="setDescription">
        <argument>Display serialization information for classes</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/translations</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/templates</argument>
      <argument type="collection">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations</argument>
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations</argument>
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/pagerfanta/pagerfanta/lib/Twig/templates/</argument>
        <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/templates</argument>
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <argument type="collection"/>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
      <call method="setDescription">
        <argument>Display translation messages information</argument>
      </call>
    </service>
    <service id="console.command.translation_extract" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en_US</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/translations</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/templates</argument>
      <argument type="collection">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations</argument>
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations</argument>
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/pagerfanta/pagerfanta/lib/Twig/templates/</argument>
        <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/templates</argument>
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:extract</argument>
      </call>
      <call method="setDescription">
        <argument>Extract missing translations keys from code to translation files.</argument>
      </call>
    </service>
    <service id="console.command.validator_debug" class="Symfony\Component\Validator\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="validator"/>
      <call method="setName">
        <argument>debug:validator</argument>
      </call>
      <call method="setDescription">
        <argument>Display validation constraints for classes</argument>
      </call>
    </service>
    <service id="console.command.translation_pull" class="Symfony\Component\Translation\Command\TranslationPullCommand">
      <tag name="console.command" command="translation:pull"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument>en_US</argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:pull</argument>
      </call>
      <call method="setDescription">
        <argument>Pull translations from a given provider.</argument>
      </call>
    </service>
    <service id="console.command.translation_push" class="Symfony\Component\Translation\Command\TranslationPushCommand">
      <tag name="console.command" command="translation:push"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.reader"/>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:push</argument>
      </call>
      <call method="setDescription">
        <argument>Push translations to a given provider.</argument>
      </call>
    </service>
    <service id="console.command.workflow_dump" class="Symfony\Bundle\FrameworkBundle\Command\WorkflowDumpCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.7mS.Ryf"/>
      <call method="setName">
        <argument>workflow:dump</argument>
      </call>
      <call method="setDescription">
        <argument>Dump a workflow</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Component\Translation\Command\XliffLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
      <call method="setDescription">
        <argument>Lint an XLIFF file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a YAML file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>App\Form\Type</argument>
        <argument>App\BoardGameBlog\Infrastructure\Symfony\Form\Type</argument>
        <argument>App\Subscription\Form\Type</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument>Sylius\Bundle\ResourceBundle\Form\Type</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter</argument>
      </argument>
      <argument type="collection">
        <argument>App\Form\Type\BookType</argument>
        <argument>App\Form\Type\ScienceBookType</argument>
        <argument>App\Form\Type\BookTranslationType</argument>
        <argument>App\BoardGameBlog\Infrastructure\Symfony\Form\Type\BoardGameType</argument>
        <argument>App\Subscription\Form\Type\SubscriptionType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ColorType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>Sylius\Bundle\ResourceBundle\Form\Type\ResourceAutocompleteChoiceType</argument>
        <argument>Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType</argument>
        <argument>Sylius\Bundle\ResourceBundle\Form\Type\ResourceTranslationsType</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\SelectFilterType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Symfony\Component\Form\Extension\PasswordHasher\Type\FormTypePasswordHasherExtension</argument>
        <argument>Symfony\Component\Form\Extension\PasswordHasher\Type\PasswordTypePasswordHasherExtension</argument>
        <argument>Sylius\Bundle\ResourceBundle\Form\Extension\CollectionTypeExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
      <call method="setDescription">
        <argument>Display form type information</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
      <call method="setDescription">
        <argument>Set a secret in the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove a secret from the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
      <call method="setDescription">
        <argument>Generate new encryption keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
      <call method="setDescription">
        <argument>List all secrets</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
      <call method="setDescription">
        <argument>Decrypt all secrets and stores them in the local vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
      <call method="setDescription">
        <argument>Encrypt all local secrets to the vault</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>SLw4EX49tJ</argument>
      <argument>0</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <tag name="cache.taggable" pool="cache.app"/>
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>6xWQ1UUMxR</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/system</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>Z+wr3395Oz</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/system</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>DTkbLnoTvT</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/system</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>mvBnaBoFov</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/system</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>3u5GUCvxfH</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/system</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.asset_mapper" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>spRzlxeUoX</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/system</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.messenger.restart_workers_signal" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>Xb86Cike2O</argument>
      <argument>0</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.scheduler" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>d3c2AX9ARF</argument>
      <argument>0</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/system</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument type="abstract">PSR-6 provider service</argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.redis_tag_aware" class="Symfony\Component\Cache\Adapter\RedisTagAwareAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Memcached connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine_dbal" class="Symfony\Component\Cache\Adapter\DoctrineDbalAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_dbal_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">DBAL connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">PDO connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller">
      <argument>null</argument>
      <argument>true</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="cache.scheduler" type="service" id="cache.scheduler" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.asset_mapper" type="service" id="cache.asset_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.cache.metadata.resource_collection" type="service" id="sylius.cache.metadata.resource_collection" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.asset_mapper" type="service" id="cache.asset_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="cache.scheduler" type="service" id="cache.scheduler" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.cache.metadata.resource_collection" type="service" id="sylius.cache.metadata.resource_collection" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator"/>
    <service id="test.client" class="Symfony\Bundle\FrameworkBundle\KernelBrowser" shared="false" public="true">
      <argument type="service" id="kernel"/>
      <argument type="collection"/>
      <argument type="service" id="test.client.history"/>
      <argument type="service" id="test.client.cookiejar"/>
    </service>
    <service id="test.client.history" class="Symfony\Component\BrowserKit\History" shared="false"/>
    <service id="test.client.cookiejar" class="Symfony\Component\BrowserKit\CookieJar" shared="false"/>
    <service id="test.session.listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.AQBflHD"/>
      <argument>true</argument>
      <argument>%session.storage.options%</argument>
    </service>
    <service id="test.service_container" class="Symfony\Bundle\FrameworkBundle\Test\TestContainer" public="true">
      <argument type="service" id="kernel"/>
      <argument>test.private_services_locator</argument>
    </service>
    <service id="test.private_services_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="true">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Psr\Log\NullLogger" type="service_closure" id="Psr\Log\NullLogger" on-invalid="ignore_uninitialized"/>
        <argument key="test.translation_locale_provider" type="service_closure" id="test.translation_locale_provider" on-invalid="ignore_uninitialized"/>
        <argument key="app.form.type.book" type="service_closure" id="app.form.type.book" on-invalid="ignore_uninitialized"/>
        <argument key="app.form.type.science_book" type="service_closure" id="app.form.type.science_book" on-invalid="ignore_uninitialized"/>
        <argument key="app.form.type.book_translation" type="service_closure" id="app.form.type.book_translation" on-invalid="ignore_uninitialized"/>
        <argument key="Gedmo\Sortable\SortableListener" type="service_closure" id="Gedmo\Sortable\SortableListener" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\ComicBookRepository" type="service_closure" id="App\Repository\ComicBookRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Shared\Infrastructure\Symfony\Messenger\MessengerCommandBus" type="service_closure" id="App\Shared\Infrastructure\Symfony\Messenger\MessengerCommandBus" on-invalid="ignore_uninitialized"/>
        <argument key="App\Shared\Infrastructure\Symfony\Messenger\MessengerQueryBus" type="service_closure" id="App\Shared\Infrastructure\Symfony\Messenger\MessengerQueryBus" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Application\Command\CreateBoardGameCommand" type="service_closure" id="App\BoardGameBlog\Application\Command\CreateBoardGameCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Application\Command\CreateBoardGameCommandHandler" type="service_closure" id="App\BoardGameBlog\Application\Command\CreateBoardGameCommandHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Application\Command\DeleteBoardGameCommand" type="service_closure" id="App\BoardGameBlog\Application\Command\DeleteBoardGameCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Application\Command\DeleteBoardGameCommandHandler" type="service_closure" id="App\BoardGameBlog\Application\Command\DeleteBoardGameCommandHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Application\Command\UpdateBoardGameCommand" type="service_closure" id="App\BoardGameBlog\Application\Command\UpdateBoardGameCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Application\Command\UpdateBoardGameCommandHandler" type="service_closure" id="App\BoardGameBlog\Application\Command\UpdateBoardGameCommandHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Application\Query\FindBoardGameQuery" type="service_closure" id="App\BoardGameBlog\Application\Query\FindBoardGameQuery" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Application\Query\FindBoardGameQueryHandler" type="service_closure" id="App\BoardGameBlog\Application\Query\FindBoardGameQueryHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Domain\Exception\MissingBoardGameException" type="service_closure" id="App\BoardGameBlog\Domain\Exception\MissingBoardGameException" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Domain\Model\BoardGame" type="service_closure" id="App\BoardGameBlog\Domain\Model\BoardGame" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Domain\ValueObject\BoardGameId" type="service_closure" id="App\BoardGameBlog\Domain\ValueObject\BoardGameId" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository" type="service_closure" id="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Infrastructure\Sylius\Grid\BoardGameGrid" type="service_closure" id="App\BoardGameBlog\Infrastructure\Sylius\Grid\BoardGameGrid" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Infrastructure\Sylius\Resource\BoardGameResource" type="service_closure" id="App\BoardGameBlog\Infrastructure\Sylius\Resource\BoardGameResource" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\CreateBoardGameProcessor" type="service_closure" id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\CreateBoardGameProcessor" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\DeleteBoardGameProcessor" type="service_closure" id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\DeleteBoardGameProcessor" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\UpdateBoardGameProcessor" type="service_closure" id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\UpdateBoardGameProcessor" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameCollectionProvider" type="service_closure" id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameCollectionProvider" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameItemProvider" type="service_closure" id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameItemProvider" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Infrastructure\Symfony\Form\Type\BoardGameType" type="service_closure" id="App\BoardGameBlog\Infrastructure\Symfony\Form\Type\BoardGameType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Subscription\Entity\Subscription" type="service_closure" id="App\Subscription\Entity\Subscription" on-invalid="ignore_uninitialized"/>
        <argument key="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber" type="service_closure" id="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="App\Subscription\Factory\SubscriptionFactory" type="service_closure" id="App\Subscription\Factory\SubscriptionFactory" on-invalid="ignore_uninitialized"/>
        <argument key="App\Subscription\Form\Type\SubscriptionType" type="service_closure" id="App\Subscription\Form\Type\SubscriptionType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Subscription\Grid\SubscriptionGrid" type="service_closure" id="App\Subscription\Grid\SubscriptionGrid" on-invalid="ignore_uninitialized"/>
        <argument key="App\Subscription\Twig\Context\Factory\ShowSubscriptionContextFactory" type="service_closure" id="App\Subscription\Twig\Context\Factory\ShowSubscriptionContextFactory" on-invalid="ignore_uninitialized"/>
        <argument key="controller_resolver" type="service_closure" id="controller_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_metadata_factory" type="service_closure" id="argument_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver" type="service_closure" id="argument_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.backed_enum_resolver" type="service_closure" id="argument_resolver.backed_enum_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.datetime" type="service_closure" id="argument_resolver.datetime" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request_payload" type="service_closure" id="argument_resolver.request_payload" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request_attribute" type="service_closure" id="argument_resolver.request_attribute" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request" type="service_closure" id="argument_resolver.request" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.session" type="service_closure" id="argument_resolver.session" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.service" type="service_closure" id="argument_resolver.service" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.default" type="service_closure" id="argument_resolver.default" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.variadic" type="service_closure" id="argument_resolver.variadic" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.query_parameter_value_resolver" type="service_closure" id="argument_resolver.query_parameter_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="response_listener" type="service_closure" id="response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="locale_listener" type="service_closure" id="locale_listener" on-invalid="ignore_uninitialized"/>
        <argument key="validate_request_listener" type="service_closure" id="validate_request_listener" on-invalid="ignore_uninitialized"/>
        <argument key="disallow_search_engine_index_response_listener" type="service_closure" id="disallow_search_engine_index_response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="exception_listener" type="service_closure" id="exception_listener" on-invalid="ignore_uninitialized"/>
        <argument key="controller.cache_attribute_listener" type="service_closure" id="controller.cache_attribute_listener" on-invalid="ignore_uninitialized"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="http_cache" type="service_closure" id="http_cache" on-invalid="ignore_uninitialized"/>
        <argument key="http_cache.store" type="service_closure" id="http_cache.store" on-invalid="ignore_uninitialized"/>
        <argument key="url_helper" type="service_closure" id="url_helper" on-invalid="ignore_uninitialized"/>
        <argument key="cache_clearer" type="service_closure" id="cache_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="filesystem" type="service_closure" id="filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="file_locator" type="service_closure" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="uri_signer" type="service_closure" id="uri_signer" on-invalid="ignore_uninitialized"/>
        <argument key="config_cache_factory" type="service_closure" id="config_cache_factory" on-invalid="ignore_uninitialized"/>
        <argument key="dependency_injection.config.container_parameters_resource_checker" type="service_closure" id="dependency_injection.config.container_parameters_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="config.resource.self_checking_resource_checker" type="service_closure" id="config.resource.self_checking_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
        <argument key="locale_aware_listener" type="service_closure" id="locale_aware_listener" on-invalid="ignore_uninitialized"/>
        <argument key="container.env_var_processor" type="service_closure" id="container.env_var_processor" on-invalid="ignore_uninitialized"/>
        <argument key="slugger" type="service_closure" id="slugger" on-invalid="ignore_uninitialized"/>
        <argument key="container.getenv" type="service_closure" id="container.getenv" on-invalid="ignore_uninitialized"/>
        <argument key="config_builder.warmer" type="service_closure" id="config_builder.warmer" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.handler" type="service_closure" id="fragment.handler" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.uri_generator" type="service_closure" id="fragment.uri_generator" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.renderer.inline" type="service_closure" id="fragment.renderer.inline" on-invalid="ignore_uninitialized"/>
        <argument key="error_handler.error_renderer.html" type="service_closure" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="console.error_listener" type="service_closure" id="console.error_listener" on-invalid="ignore_uninitialized"/>
        <argument key="console.suggest_missing_package_subscriber" type="service_closure" id="console.suggest_missing_package_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.about" type="service_closure" id="console.command.about" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.assets_install" type="service_closure" id="console.command.assets_install" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_clear" type="service_closure" id="console.command.cache_clear" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id="console.command.cache_pool_clear" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id="console.command.cache_pool_prune" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_invalidate_tags" type="service_closure" id="console.command.cache_pool_invalidate_tags" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id="console.command.cache_pool_delete" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id="console.command.cache_pool_list" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_warmup" type="service_closure" id="console.command.cache_warmup" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.config_debug" type="service_closure" id="console.command.config_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id="console.command.config_dump_reference" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.container_debug" type="service_closure" id="console.command.container_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.container_lint" type="service_closure" id="console.command.container_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id="console.command.debug_autowiring" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.dotenv_debug" type="service_closure" id="console.command.dotenv_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id="console.command.event_dispatcher_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_consume_messages" type="service_closure" id="console.command.messenger_consume_messages" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_setup_transports" type="service_closure" id="console.command.messenger_setup_transports" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_debug" type="service_closure" id="console.command.messenger_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_stop_workers" type="service_closure" id="console.command.messenger_stop_workers" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_stats" type="service_closure" id="console.command.messenger_stats" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.router_debug" type="service_closure" id="console.command.router_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.router_match" type="service_closure" id="console.command.router_match" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.serializer_debug" type="service_closure" id="console.command.serializer_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_debug" type="service_closure" id="console.command.translation_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_extract" type="service_closure" id="console.command.translation_extract" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.validator_debug" type="service_closure" id="console.command.validator_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_pull" type="service_closure" id="console.command.translation_pull" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_push" type="service_closure" id="console.command.translation_push" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.workflow_dump" type="service_closure" id="console.command.workflow_dump" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.xliff_lint" type="service_closure" id="console.command.xliff_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.yaml_lint" type="service_closure" id="console.command.yaml_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.form_debug" type="service_closure" id="console.command.form_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_set" type="service_closure" id="console.command.secrets_set" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_remove" type="service_closure" id="console.command.secrets_remove" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id="console.command.secrets_generate_key" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_list" type="service_closure" id="console.command.secrets_list" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id="console.command.secrets_decrypt_to_local" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id="console.command.secrets_encrypt_from_local" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app.taggable" type="service_closure" id="cache.app.taggable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service_closure" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service_closure" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service_closure" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service_closure" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.asset_mapper" type="service_closure" id="cache.asset_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service_closure" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="cache.scheduler" type="service_closure" id="cache.scheduler" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_marshaller" type="service_closure" id="cache.default_marshaller" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_clearer" type="service_closure" id="cache.default_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="identity_translator" type="service_closure" id="identity_translator" on-invalid="ignore_uninitialized"/>
        <argument key="test.client.history" type="service_closure" id="test.client.history" on-invalid="ignore_uninitialized"/>
        <argument key="test.client.cookiejar" type="service_closure" id="test.client.cookiejar" on-invalid="ignore_uninitialized"/>
        <argument key="test.session.listener" type="service_closure" id="test.session.listener" on-invalid="ignore_uninitialized"/>
        <argument key="translator.default" type="service_closure" id="translator.default" on-invalid="ignore_uninitialized"/>
        <argument key="translator.logging" type="service_closure" id="translator.logging" on-invalid="ignore_uninitialized"/>
        <argument key="translator.formatter.default" type="service_closure" id="translator.formatter.default" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.php" type="service_closure" id="translation.loader.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.yml" type="service_closure" id="translation.loader.yml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.xliff" type="service_closure" id="translation.loader.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.po" type="service_closure" id="translation.loader.po" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.mo" type="service_closure" id="translation.loader.mo" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.qt" type="service_closure" id="translation.loader.qt" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.csv" type="service_closure" id="translation.loader.csv" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.res" type="service_closure" id="translation.loader.res" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.dat" type="service_closure" id="translation.loader.dat" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.ini" type="service_closure" id="translation.loader.ini" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.json" type="service_closure" id="translation.loader.json" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.php" type="service_closure" id="translation.dumper.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.xliff" type="service_closure" id="translation.dumper.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.xliff.xliff" type="service_closure" id="translation.dumper.xliff.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.po" type="service_closure" id="translation.dumper.po" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.mo" type="service_closure" id="translation.dumper.mo" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.yml" type="service_closure" id="translation.dumper.yml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.yaml" type="service_closure" id="translation.dumper.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.qt" type="service_closure" id="translation.dumper.qt" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.csv" type="service_closure" id="translation.dumper.csv" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.ini" type="service_closure" id="translation.dumper.ini" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.json" type="service_closure" id="translation.dumper.json" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.res" type="service_closure" id="translation.dumper.res" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.php_ast" type="service_closure" id="translation.extractor.php_ast" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.visitor.trans_method" type="service_closure" id="translation.extractor.visitor.trans_method" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.visitor.translatable_message" type="service_closure" id="translation.extractor.visitor.translatable_message" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.visitor.constraint" type="service_closure" id="translation.extractor.visitor.constraint" on-invalid="ignore_uninitialized"/>
        <argument key="translation.reader" type="service_closure" id="translation.reader" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor" type="service_closure" id="translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="translation.writer" type="service_closure" id="translation.writer" on-invalid="ignore_uninitialized"/>
        <argument key="translation.warmer" type="service_closure" id="translation.warmer" on-invalid="ignore_uninitialized"/>
        <argument key="translation.locale_switcher" type="service_closure" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="translation.provider_collection" type="service_closure" id="translation.provider_collection" on-invalid="ignore_uninitialized"/>
        <argument key="translation.provider_collection_factory" type="service_closure" id="translation.provider_collection_factory" on-invalid="ignore_uninitialized"/>
        <argument key="translation.provider_factory.null" type="service_closure" id="translation.provider_factory.null" on-invalid="ignore_uninitialized"/>
        <argument key="workflow.security.expression_language" type="service_closure" id="workflow.security.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="state_machine.pull_request.metadata_store" type="service_closure" id="state_machine.pull_request.metadata_store" on-invalid="ignore_uninitialized"/>
        <argument key="state_machine.pull_request" type="service_closure" id="state_machine.pull_request" on-invalid="ignore_uninitialized"/>
        <argument key="state_machine.pull_request.definition" type="service_closure" id="state_machine.pull_request.definition" on-invalid="ignore_uninitialized"/>
        <argument key="workflow.blog_publishing.metadata_store" type="service_closure" id="workflow.blog_publishing.metadata_store" on-invalid="ignore_uninitialized"/>
        <argument key="workflow.blog_publishing" type="service_closure" id="workflow.blog_publishing" on-invalid="ignore_uninitialized"/>
        <argument key="workflow.blog_publishing.definition" type="service_closure" id="workflow.blog_publishing.definition" on-invalid="ignore_uninitialized"/>
        <argument key="state_machine.subscription.metadata_store" type="service_closure" id="state_machine.subscription.metadata_store" on-invalid="ignore_uninitialized"/>
        <argument key="state_machine.subscription" type="service_closure" id="state_machine.subscription" on-invalid="ignore_uninitialized"/>
        <argument key="state_machine.subscription.definition" type="service_closure" id="state_machine.subscription.definition" on-invalid="ignore_uninitialized"/>
        <argument key="debug.debug_handlers_listener" type="service_closure" id="debug.debug_handlers_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.file_link_formatter" type="service_closure" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="routing.resolver" type="service_closure" id="routing.resolver" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.xml" type="service_closure" id="routing.loader.xml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.yml" type="service_closure" id="routing.loader.yml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.php" type="service_closure" id="routing.loader.php" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.glob" type="service_closure" id="routing.loader.glob" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.directory" type="service_closure" id="routing.loader.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.container" type="service_closure" id="routing.loader.container" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation" type="service_closure" id="routing.loader.annotation" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation.directory" type="service_closure" id="routing.loader.annotation.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation.file" type="service_closure" id="routing.loader.annotation.file" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.psr4" type="service_closure" id="routing.loader.psr4" on-invalid="ignore_uninitialized"/>
        <argument key="router.default" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="router.request_context" type="service_closure" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="router.expression_language_provider" type="service_closure" id="router.expression_language_provider" on-invalid="ignore_uninitialized"/>
        <argument key="router.cache_warmer" type="service_closure" id="router.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="router_listener" type="service_closure" id="router_listener" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.reader" type="service_closure" id="annotations.reader" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.cached_reader" type="service_closure" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.filesystem_cache_adapter" type="service_closure" id="annotations.filesystem_cache_adapter" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.cache_warmer" type="service_closure" id="annotations.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.cache_adapter" type="service_closure" id="annotations.cache_adapter" on-invalid="ignore_uninitialized"/>
        <argument key="property_accessor" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.vault" type="service_closure" id="secrets.vault" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.decryption_key" type="service_closure" id="secrets.decryption_key" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.local_vault" type="service_closure" id="secrets.local_vault" on-invalid="ignore_uninitialized"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.class_discriminator_resolver" type="service_closure" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.constraint_violation_list" type="service_closure" id="serializer.normalizer.constraint_violation_list" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.datetimezone" type="service_closure" id="serializer.normalizer.datetimezone" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.dateinterval" type="service_closure" id="serializer.normalizer.dateinterval" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.data_uri" type="service_closure" id="serializer.normalizer.data_uri" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.datetime" type="service_closure" id="serializer.normalizer.datetime" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.json_serializable" type="service_closure" id="serializer.normalizer.json_serializable" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.problem" type="service_closure" id="serializer.normalizer.problem" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.denormalizer.unwrapping" type="service_closure" id="serializer.denormalizer.unwrapping" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.uid" type="service_closure" id="serializer.normalizer.uid" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.form_error" type="service_closure" id="serializer.normalizer.form_error" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.object" type="service_closure" id="serializer.normalizer.object" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.property" type="service_closure" id="serializer.normalizer.property" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.denormalizer.array" type="service_closure" id="serializer.denormalizer.array" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.chain_loader" type="service_closure" id="serializer.mapping.chain_loader" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.class_metadata_factory" type="service_closure" id="serializer.mapping.class_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.cache_warmer" type="service_closure" id="serializer.mapping.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.cache.symfony" type="service_closure" id="serializer.mapping.cache.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.xml" type="service_closure" id="serializer.encoder.xml" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.json" type="service_closure" id="serializer.encoder.json" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.yaml" type="service_closure" id="serializer.encoder.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.csv" type="service_closure" id="serializer.encoder.csv" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.name_converter.camel_case_to_snake_case" type="service_closure" id="serializer.name_converter.camel_case_to_snake_case" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.name_converter.metadata_aware" type="service_closure" id="serializer.name_converter.metadata_aware" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.serializer_extractor" type="service_closure" id="property_info.serializer_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="error_handler.error_renderer.serializer" type="service_closure" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.backed_enum" type="service_closure" id="serializer.normalizer.backed_enum" on-invalid="ignore_uninitialized"/>
        <argument key="property_info" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.reflection_extractor" type="service_closure" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_access" type="service_closure" id="cache.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="session.factory" type="service_closure" id="session.factory" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.factory.native" type="service_closure" id="session.storage.factory.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.factory.php_bridge" type="service_closure" id="session.storage.factory.php_bridge" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.factory.mock_file" type="service_closure" id="session.storage.factory.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler.native" type="service_closure" id="session.handler.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler.native_file" type="service_closure" id="session.handler.native_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.abstract_handler" type="service_closure" id="session.abstract_handler" on-invalid="ignore_uninitialized"/>
        <argument key="session.marshaller" type="service_closure" id="session.marshaller" on-invalid="ignore_uninitialized"/>
        <argument key="security.csrf.token_generator" type="service_closure" id="security.csrf.token_generator" on-invalid="ignore_uninitialized"/>
        <argument key="security.csrf.token_storage" type="service_closure" id="security.csrf.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.security_csrf" type="service_closure" id="twig.runtime.security_csrf" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.security_csrf" type="service_closure" id="twig.extension.security_csrf" on-invalid="ignore_uninitialized"/>
        <argument key="form.resolved_type_factory" type="service_closure" id="form.resolved_type_factory" on-invalid="ignore_uninitialized"/>
        <argument key="form.registry" type="service_closure" id="form.registry" on-invalid="ignore_uninitialized"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore_uninitialized"/>
        <argument key="form.extension" type="service_closure" id="form.extension" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_guesser.validator" type="service_closure" id="form.type_guesser.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.default" type="service_closure" id="form.choice_list_factory.default" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.property_access" type="service_closure" id="form.choice_list_factory.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service_closure" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.form" type="service_closure" id="form.type.form" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.choice" type="service_closure" id="form.type.choice" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.file" type="service_closure" id="form.type.file" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.color" type="service_closure" id="form.type.color" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.transformation_failure_handling" type="service_closure" id="form.type_extension.form.transformation_failure_handling" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.http_foundation" type="service_closure" id="form.type_extension.form.http_foundation" on-invalid="ignore_uninitialized"/>
        <argument key="form.server_params" type="service_closure" id="form.server_params" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.validator" type="service_closure" id="form.type_extension.form.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.repeated.validator" type="service_closure" id="form.type_extension.repeated.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.submit.validator" type="service_closure" id="form.type_extension.submit.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.upload.validator" type="service_closure" id="form.type_extension.upload.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.csrf" type="service_closure" id="form.type_extension.csrf" on-invalid="ignore_uninitialized"/>
        <argument key="validator" type="service_closure" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="validator.builder" type="service_closure" id="validator.builder" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache_warmer" type="service_closure" id="validator.mapping.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache.adapter" type="service_closure" id="validator.mapping.cache.adapter" on-invalid="ignore_uninitialized"/>
        <argument key="validator.validator_factory" type="service_closure" id="validator.validator_factory" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression" type="service_closure" id="validator.expression" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression_language" type="service_closure" id="validator.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="validator.email" type="service_closure" id="validator.email" on-invalid="ignore_uninitialized"/>
        <argument key="validator.not_compromised_password" type="service_closure" id="validator.not_compromised_password" on-invalid="ignore_uninitialized"/>
        <argument key="validator.when" type="service_closure" id="validator.when" on-invalid="ignore_uninitialized"/>
        <argument key="validator.no_suspicious_characters" type="service_closure" id="validator.no_suspicious_characters" on-invalid="ignore_uninitialized"/>
        <argument key="validator.property_info_loader" type="service_closure" id="validator.property_info_loader" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.senders_locator" type="service_closure" id="messenger.senders_locator" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.symfony_serializer" type="service_closure" id="messenger.transport.symfony_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.flatten_exception" type="service_closure" id="serializer.normalizer.flatten_exception" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.native_php_serializer" type="service_closure" id="messenger.transport.native_php_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.dispatch_after_current_bus" type="service_closure" id="messenger.middleware.dispatch_after_current_bus" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.validation" type="service_closure" id="messenger.middleware.validation" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.reject_redelivered_message_middleware" type="service_closure" id="messenger.middleware.reject_redelivered_message_middleware" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.failed_message_processing_middleware" type="service_closure" id="messenger.middleware.failed_message_processing_middleware" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.router_context" type="service_closure" id="messenger.middleware.router_context" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.receiver_locator" type="service_closure" id="messenger.receiver_locator" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport_factory" type="service_closure" id="messenger.transport_factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.amqp.factory" type="service_closure" id="messenger.transport.amqp.factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.redis.factory" type="service_closure" id="messenger.transport.redis.factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.sync.factory" type="service_closure" id="messenger.transport.sync.factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.in_memory.factory" type="service_closure" id="messenger.transport.in_memory.factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.sqs.factory" type="service_closure" id="messenger.transport.sqs.factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.beanstalkd.factory" type="service_closure" id="messenger.transport.beanstalkd.factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.retry_strategy_locator" type="service_closure" id="messenger.retry_strategy_locator" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.retry.send_failed_message_for_retry_listener" type="service_closure" id="messenger.retry.send_failed_message_for_retry_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.failure.add_error_details_stamp_listener" type="service_closure" id="messenger.failure.add_error_details_stamp_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.dispatch_pcntl_signal_listener" type="service_closure" id="messenger.listener.dispatch_pcntl_signal_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.stop_worker_on_restart_signal_listener" type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.stop_worker_signals_listener" type="service_closure" id="messenger.listener.stop_worker_signals_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.stop_worker_on_stop_exception_listener" type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.reset_services" type="service_closure" id="messenger.listener.reset_services" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.routable_message_bus" type="service_closure" id="messenger.routable_message_bus" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.redispatch_message_handler" type="service_closure" id="messenger.redispatch_message_handler" on-invalid="ignore_uninitialized"/>
        <argument key="command.bus" type="service_closure" id="command.bus" on-invalid="ignore_uninitialized"/>
        <argument key="query.bus" type="service_closure" id="query.bus" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.sync" type="service_closure" id="messenger.transport.sync" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.retry.multiplier_retry_strategy.sync" type="service_closure" id="messenger.retry.multiplier_retry_strategy.sync" on-invalid="ignore_uninitialized"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="security.untracked_token_storage" type="service_closure" id="security.untracked_token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="security.helper" type="service_closure" id="security.helper" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_value_resolver" type="service_closure" id="security.user_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="security.security_token_value_resolver" type="service_closure" id="security.security_token_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.trust_resolver" type="service_closure" id="security.authentication.trust_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy" type="service_closure" id="security.authentication.session_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy_noop" type="service_closure" id="security.authentication.session_strategy_noop" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker" type="service_closure" id="security.user_checker" on-invalid="ignore_uninitialized"/>
        <argument key="security.expression_language" type="service_closure" id="security.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication_utils" type="service_closure" id="security.authentication_utils" on-invalid="ignore_uninitialized"/>
        <argument key="security.role_hierarchy" type="service_closure" id="security.role_hierarchy" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.simple_role_voter" type="service_closure" id="security.access.simple_role_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.authenticated_voter" type="service_closure" id="security.access.authenticated_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.expression_voter" type="service_closure" id="security.access.expression_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.impersonate_url_generator" type="service_closure" id="security.impersonate_url_generator" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map" type="service_closure" id="security.firewall.map" on-invalid="ignore_uninitialized"/>
        <argument key="security.logout_url_generator" type="service_closure" id="security.logout_url_generator" on-invalid="ignore_uninitialized"/>
        <argument key="security.http_utils" type="service_closure" id="security.http_utils" on-invalid="ignore_uninitialized"/>
        <argument key="security.validator.user_password" type="service_closure" id="security.validator.user_password" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service_closure" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="controller.is_granted_attribute_listener" type="service_closure" id="controller.is_granted_attribute_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.is_granted_attribute_expression_language" type="service_closure" id="security.is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="security.password_hasher_factory" type="service_closure" id="security.password_hasher_factory" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_password_hasher" type="service_closure" id="security.user_password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="form.listener.password_hasher" type="service_closure" id="form.listener.password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.password_hasher" type="service_closure" id="form.type_extension.form.password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.password.password_hasher" type="service_closure" id="form.type_extension.password.password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="security.channel_listener" type="service_closure" id="security.channel_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_map" type="service_closure" id="security.access_map" on-invalid="ignore_uninitialized"/>
        <argument key="security.context_listener" type="service_closure" id="security.context_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_listener" type="service_closure" id="security.access_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.event_dispatcher_locator" type="service_closure" id="security.firewall.event_dispatcher_locator" on-invalid="ignore_uninitialized"/>
        <argument key="security.authenticator.managers_locator" type="service_closure" id="security.authenticator.managers_locator" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_authenticator" type="service_closure" id="security.user_authenticator" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.check_authenticator_credentials" type="service_closure" id="security.listener.check_authenticator_credentials" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.user_provider" type="service_closure" id="security.listener.user_provider" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.password_migrating" type="service_closure" id="security.listener.password_migrating" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_extractor.header" type="service_closure" id="security.access_token_extractor.header" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_extractor.query_string" type="service_closure" id="security.access_token_extractor.query_string" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_extractor.request_body" type="service_closure" id="security.access_token_extractor.request_body" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.ES256" type="service_closure" id="security.access_token_handler.oidc.signature.ES256" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.ES384" type="service_closure" id="security.access_token_handler.oidc.signature.ES384" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.ES512" type="service_closure" id="security.access_token_handler.oidc.signature.ES512" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.logout_url" type="service_closure" id="twig.extension.logout_url" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.security" type="service_closure" id="twig.extension.security" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.security" type="service_closure" id="data_collector.security" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.access.decision_manager" type="service_closure" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.vote_listener" type="service_closure" id="debug.security.voter.vote_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall" type="service_closure" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="security.command.debug_firewall" type="service_closure" id="security.command.debug_firewall" on-invalid="ignore_uninitialized"/>
        <argument key="security.user.provider.concrete.users_in_memory" type="service_closure" id="security.user.provider.concrete.users_in_memory" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.dev" type="service_closure" id="security.firewall.map.config.dev" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.dev" type="service_closure" id="security.firewall.map.context.dev" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.main" type="service_closure" id="security.firewall.map.config.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.main.user_provider" type="service_closure" id="security.listener.main.user_provider" on-invalid="ignore_uninitialized"/>
        <argument key="security.event_dispatcher.main" type="service_closure" id="security.event_dispatcher.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker.chain.main" type="service_closure" id="security.user_checker.chain.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.context_listener.0" type="service_closure" id="security.context_listener.0" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.session.main" type="service_closure" id="security.listener.session.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.authenticator.manager.main" type="service_closure" id="security.authenticator.manager.main" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall.authenticator.main" type="service_closure" id="debug.security.firewall.authenticator.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.user_checker.main" type="service_closure" id="security.listener.user_checker.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.exception_listener.main" type="service_closure" id="security.exception_listener.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.main" type="service_closure" id="security.firewall.map.context.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.command.user_password_hash" type="service_closure" id="security.command.user_password_hash" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.doctrine" type="service_closure" id="data_collector.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.connection_factory" type="service_closure" id="doctrine.dbal.connection_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.connection_factory.dsn_parser" type="service_closure" id="doctrine.dbal.connection_factory.dsn_parser" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.twig.doctrine_extension" type="service_closure" id="doctrine.twig.doctrine_extension" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.well_known_schema_asset_filter" type="service_closure" id="doctrine.dbal.well_known_schema_asset_filter" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_create_command" type="service_closure" id="doctrine.database_create_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_drop_command" type="service_closure" id="doctrine.database_drop_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.query_sql_command" type="service_closure" id="doctrine.query_sql_command" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" type="service_closure" id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_schema_manager_factory" type="service_closure" id="doctrine.dbal.default_schema_manager_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.legacy_schema_manager_factory" type="service_closure" id="doctrine.dbal.legacy_schema_manager_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_connection.configuration" type="service_closure" id="doctrine.dbal.default_connection.configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_connection.event_manager" type="service_closure" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" type="service_closure" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.debug_data_holder" type="service_closure" id="doctrine.debug_data_holder" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager" type="service_closure" id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.messenger.doctrine_schema_listener" type="service_closure" id="doctrine.orm.messenger.doctrine_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.proxy_cache_warmer" type="service_closure" id="doctrine.orm.proxy_cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_guesser.doctrine" type="service_closure" id="form.type_guesser.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service_closure" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.validator.unique" type="service_closure" id="doctrine.orm.validator.unique" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.validator_initializer" type="service_closure" id="doctrine.orm.validator_initializer" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.resolve_target_entity" type="service_closure" id="doctrine.orm.listeners.resolve_target_entity" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener" type="service_closure" id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.doctrine_token_provider_schema_listener" type="service_closure" id="doctrine.orm.listeners.doctrine_token_provider_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.pdo_session_handler_schema_listener" type="service_closure" id="doctrine.orm.listeners.pdo_session_handler_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.lock_store_schema_listener" type="service_closure" id="doctrine.orm.listeners.lock_store_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.default" type="service_closure" id="doctrine.orm.naming_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.underscore" type="service_closure" id="doctrine.orm.naming_strategy.underscore" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.underscore_number_aware" type="service_closure" id="doctrine.orm.naming_strategy.underscore_number_aware" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.quote_strategy.default" type="service_closure" id="doctrine.orm.quote_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.quote_strategy.ansi" type="service_closure" id="doctrine.orm.quote_strategy.ansi" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.ulid_generator" type="service_closure" id="doctrine.ulid_generator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.uuid_generator" type="service_closure" id="doctrine.uuid_generator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.command.entity_manager_provider" type="service_closure" id="doctrine.orm.command.entity_manager_provider" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.entity_value_resolver" type="service_closure" id="doctrine.orm.entity_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.entity_value_resolver.expression_language" type="service_closure" id="doctrine.orm.entity_value_resolver.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service_closure" id="doctrine.cache_clear_metadata_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service_closure" id="doctrine.cache_clear_query_cache_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_result_command" type="service_closure" id="doctrine.cache_clear_result_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_collection_region_command" type="service_closure" id="doctrine.cache_collection_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.mapping_convert_command" type="service_closure" id="doctrine.mapping_convert_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_create_command" type="service_closure" id="doctrine.schema_create_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_drop_command" type="service_closure" id="doctrine.schema_drop_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.ensure_production_settings_command" type="service_closure" id="doctrine.ensure_production_settings_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.clear_entity_region_command" type="service_closure" id="doctrine.clear_entity_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.mapping_info_command" type="service_closure" id="doctrine.mapping_info_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.clear_query_region_command" type="service_closure" id="doctrine.clear_query_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.query_dql_command" type="service_closure" id="doctrine.query_dql_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_update_command" type="service_closure" id="doctrine.schema_update_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_validate_command" type="service_closure" id="doctrine.schema_validate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.mapping_import_command" type="service_closure" id="doctrine.mapping_import_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_configuration" type="service_closure" id="doctrine.orm.default_configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_yml_metadata_driver" type="service_closure" id="doctrine.orm.default_yml_metadata_driver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_attribute_metadata_driver" type="service_closure" id="doctrine.orm.default_attribute_metadata_driver" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.metadata" type="service_closure" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service_closure" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service_closure" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_listener_resolver" type="service_closure" id="doctrine.orm.default_entity_listener_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service_closure" id="doctrine.orm.default_listeners.attach_entity_listeners" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_manager_configurator" type="service_closure" id="doctrine.orm.default_manager_configurator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.property_info_extractor" type="service_closure" id="doctrine.orm.default_entity_manager.property_info_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.validator_loader" type="service_closure" id="doctrine.orm.default_entity_manager.validator_loader" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.context.initiator.legacy_request_context" type="service_closure" id="sylius.context.initiator.legacy_request_context" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.parameters_parser" type="service_closure" id="sylius.resource_controller.parameters_parser" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.request_configuration_factory" type="service_closure" id="sylius.resource_controller.request_configuration_factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.new_resource_factory" type="service_closure" id="sylius.resource_controller.new_resource_factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.single_resource_provider" type="service_closure" id="sylius.resource_controller.single_resource_provider" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.pagerfanta_representation_factory" type="service_closure" id="sylius.resource_controller.pagerfanta_representation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.resources_collection_provider" type="service_closure" id="sylius.resource_controller.resources_collection_provider" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.form_factory" type="service_closure" id="sylius.resource_controller.form_factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.redirect_handler" type="service_closure" id="sylius.resource_controller.redirect_handler" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.authorization_checker.disabled" type="service_closure" id="sylius.resource_controller.authorization_checker.disabled" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.flash_helper" type="service_closure" id="sylius.resource_controller.flash_helper" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.event_dispatcher" type="service_closure" id="sylius.resource_controller.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.view_handler" type="service_closure" id="sylius.resource_controller.view_handler" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.resource_update_handler" type="service_closure" id="sylius.resource_controller.resource_update_handler" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.resource_delete_handler" type="service_closure" id="sylius.resource_controller.resource_delete_handler" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.dispatcher.operation" type="service_closure" id="sylius.dispatcher.operation" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.event_handler.operation" type="service_closure" id="sylius.event_handler.operation" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_factory.expression_language" type="service_closure" id="sylius.resource_factory.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.repository.expression_language" type="service_closure" id="sylius.repository.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.expression_language" type="service_closure" id="sylius.routing.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.expression_language.variables.token" type="service_closure" id="sylius.expression_language.variables.token" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.expression_language.variables.request" type="service_closure" id="sylius.expression_language.variables.request" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.expression_language.variables_collection.factory" type="service_closure" id="sylius.expression_language.variables_collection.factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.expression_language.variables_collection.repository" type="service_closure" id="sylius.expression_language.variables_collection.repository" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.expression_language.variables_collection.routing" type="service_closure" id="sylius.expression_language.variables_collection.routing" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.expression_language.argument_parser.factory" type="service_closure" id="sylius.expression_language.argument_parser.factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.expression_language.argument_parser.repository" type="service_closure" id="sylius.expression_language.argument_parser.repository" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.expression_language.argument_parser.routing" type="service_closure" id="sylius.expression_language.argument_parser.routing" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.form.factory" type="service_closure" id="sylius.form.factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.helper.flash" type="service_closure" id="sylius.helper.flash" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.negotiator" type="service_closure" id="sylius.negotiator" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.listener.add_format" type="service_closure" id="sylius.listener.add_format" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.listener.read" type="service_closure" id="sylius.listener.read" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.listener.factory" type="service_closure" id="sylius.listener.factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.listener.deserialize" type="service_closure" id="sylius.listener.deserialize" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.listener.form" type="service_closure" id="sylius.listener.form" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.listener.validate" type="service_closure" id="sylius.listener.validate" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.listener.write" type="service_closure" id="sylius.listener.write" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.listener.serialize" type="service_closure" id="sylius.listener.serialize" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.listener.flash" type="service_closure" id="sylius.listener.flash" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.listener.respond" type="service_closure" id="sylius.listener.respond" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.listener.exception.validation" type="service_closure" id="sylius.listener.exception.validation" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.cache.metadata.resource_collection" type="service_closure" id="sylius.cache.metadata.resource_collection" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_collection.factory.cached" type="service_closure" id="sylius.resource_metadata_collection.factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_collection.factory.doctrine" type="service_closure" id="sylius.resource_metadata_collection.factory.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_collection.factory.redirect" type="service_closure" id="sylius.resource_metadata_collection.factory.redirect" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_collection.factory.resource_factory" type="service_closure" id="sylius.resource_metadata_collection.factory.resource_factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_collection.factory.event_short_name" type="service_closure" id="sylius.resource_metadata_collection.factory.event_short_name" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_collection.factory.templates_dir" type="service_closure" id="sylius.resource_metadata_collection.factory.templates_dir" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_operation.initiator.http_operation" type="service_closure" id="sylius.resource_metadata_operation.initiator.http_operation" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.repository_argument_resolver.request" type="service_closure" id="sylius.repository_argument_resolver.request" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Routing\ResourceLoader" type="service_closure" id="Sylius\Bundle\ResourceBundle\Routing\ResourceLoader" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.loader.crud_routes_attributes" type="service_closure" id="sylius.routing.loader.crud_routes_attributes" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.loader.routes_attributes" type="service_closure" id="sylius.routing.loader.routes_attributes" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.factory.operation_route_name_factory" type="service_closure" id="sylius.routing.factory.operation_route_name_factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.factory.route_attributes" type="service_closure" id="sylius.routing.factory.route_attributes" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.factory.attributes_operation_route" type="service_closure" id="sylius.routing.factory.attributes_operation_route" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.factory.operation_route" type="service_closure" id="sylius.routing.factory.operation_route" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state.provider.event_dispatcher" type="service_closure" id="sylius.state.provider.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state.factory" type="service_closure" id="sylius.state.factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state.processor.event_dispatcher" type="service_closure" id="sylius.state.processor.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state.processor.event_dispatcher_bulk_aware" type="service_closure" id="sylius.state.processor.event_dispatcher_bulk_aware" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state.responder" type="service_closure" id="sylius.state.responder" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Symfony\Request\State\Provider" type="service_closure" id="Sylius\Component\Resource\Symfony\Request\State\Provider" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Doctrine\Common\State\PersistProcessor" type="service_closure" id="Sylius\Component\Resource\Doctrine\Common\State\PersistProcessor" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Doctrine\Common\State\RemoveProcessor" type="service_closure" id="Sylius\Component\Resource\Doctrine\Common\State\RemoveProcessor" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\StateMachine\State\ApplyStateMachineTransitionProcessor" type="service_closure" id="Sylius\Component\Resource\StateMachine\State\ApplyStateMachineTransitionProcessor" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Symfony\Request\State\Responder" type="service_closure" id="Sylius\Component\Resource\Symfony\Request\State\Responder" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state_responder.html" type="service_closure" id="sylius.state_responder.html" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.headers_initiator.api" type="service_closure" id="sylius.headers_initiator.api" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state_responder.api" type="service_closure" id="sylius.state_responder.api" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Grid\State\RequestGridProvider" type="service_closure" id="Sylius\Component\Resource\Grid\State\RequestGridProvider" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state_machine.operation" type="service_closure" id="sylius.state_machine.operation" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state_machine.operation.symfony" type="service_closure" id="sylius.state_machine.operation.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state_machine.operation.winzou" type="service_closure" id="sylius.state_machine.operation.winzou" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.twig.context.factory.default" type="service_closure" id="sylius.twig.context.factory.default" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.twig.context.factory.request" type="service_closure" id="sylius.twig.context.factory.request" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.twig.context.factory.legacy" type="service_closure" id="sylius.twig.context.factory.legacy" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.form.type_extension.form.request_handler" type="service_closure" id="sylius.form.type_extension.form.request_handler" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_registry" type="service_closure" id="sylius.resource_registry" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.expression_language" type="service_closure" id="sylius.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.registry.resource_repository" type="service_closure" id="sylius.registry.resource_repository" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.registry.form_builder" type="service_closure" id="sylius.registry.form_builder" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.grid_options_parser" type="service_closure" id="sylius.grid_options_parser" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.grid.view_factory.legacy" type="service_closure" id="sylius.grid.view_factory.legacy" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.form_builder.default" type="service_closure" id="sylius.form_builder.default" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.doctrine.orm.container_repository_factory" type="service_closure" id="sylius.doctrine.orm.container_repository_factory" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\BookRepository" type="service_closure" id="App\Repository\BookRepository" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.route_generator_factory" type="service_closure" id="pagerfanta.route_generator_factory" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.default" type="service_closure" id="pagerfanta.view.default" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.foundation6" type="service_closure" id="pagerfanta.view.foundation6" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.semantic_ui" type="service_closure" id="pagerfanta.view.semantic_ui" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.twitter_bootstrap" type="service_closure" id="pagerfanta.view.twitter_bootstrap" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.twitter_bootstrap3" type="service_closure" id="pagerfanta.view.twitter_bootstrap3" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.twitter_bootstrap4" type="service_closure" id="pagerfanta.view.twitter_bootstrap4" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.twitter_bootstrap5" type="service_closure" id="pagerfanta.view.twitter_bootstrap5" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view_factory" type="service_closure" id="pagerfanta.view_factory" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.twig_extension" type="service_closure" id="pagerfanta.twig_extension" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.twig_runtime" type="service_closure" id="pagerfanta.twig_runtime" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.undefined_callable_handler" type="service_closure" id="pagerfanta.undefined_callable_handler" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.twig" type="service_closure" id="pagerfanta.view.twig" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.serializer.handler" type="service_closure" id="pagerfanta.serializer.handler" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.serializer.normalizer" type="service_closure" id="pagerfanta.serializer.normalizer" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.event_listener.convert_not_valid_max_per_page_to_not_found" type="service_closure" id="pagerfanta.event_listener.convert_not_valid_max_per_page_to_not_found" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.event_listener.convert_not_valid_current_page_to_not_found" type="service_closure" id="pagerfanta.event_listener.convert_not_valid_current_page_to_not_found" on-invalid="ignore_uninitialized"/>
        <argument key="twig.app_variable" type="service_closure" id="twig.app_variable" on-invalid="ignore_uninitialized"/>
        <argument key="twig.template_iterator" type="service_closure" id="twig.template_iterator" on-invalid="ignore_uninitialized"/>
        <argument key="twig.template_cache_warmer" type="service_closure" id="twig.template_cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.native_filesystem" type="service_closure" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.chain" type="service_closure" id="twig.loader.chain" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.profiler" type="service_closure" id="twig.extension.profiler" on-invalid="ignore_uninitialized"/>
        <argument key="twig.profile" type="service_closure" id="twig.profile" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.twig" type="service_closure" id="data_collector.twig" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.trans" type="service_closure" id="twig.extension.trans" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.code" type="service_closure" id="twig.extension.code" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.routing" type="service_closure" id="twig.extension.routing" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.yaml" type="service_closure" id="twig.extension.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.debug.stopwatch" type="service_closure" id="twig.extension.debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.expression" type="service_closure" id="twig.extension.expression" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.htmlsanitizer" type="service_closure" id="twig.extension.htmlsanitizer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.httpkernel" type="service_closure" id="twig.extension.httpkernel" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.httpkernel" type="service_closure" id="twig.runtime.httpkernel" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.httpfoundation" type="service_closure" id="twig.extension.httpfoundation" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.debug" type="service_closure" id="twig.extension.debug" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.weblink" type="service_closure" id="twig.extension.weblink" on-invalid="ignore_uninitialized"/>
        <argument key="twig.translation.extractor" type="service_closure" id="twig.translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="workflow.twig_extension" type="service_closure" id="workflow.twig_extension" on-invalid="ignore_uninitialized"/>
        <argument key="twig.configurator.environment" type="service_closure" id="twig.configurator.environment" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime_loader" type="service_closure" id="twig.runtime_loader" on-invalid="ignore_uninitialized"/>
        <argument key="twig.error_renderer.html" type="service_closure" id="twig.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.serializer" type="service_closure" id="twig.runtime.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.serializer" type="service_closure" id="twig.extension.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="controller.template_attribute_listener" type="service_closure" id="controller.template_attribute_listener" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.form" type="service_closure" id="twig.extension.form" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.engine" type="service_closure" id="twig.form.engine" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.renderer" type="service_closure" id="twig.form.renderer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.command.debug" type="service_closure" id="twig.command.debug" on-invalid="ignore_uninitialized"/>
        <argument key="twig.command.lint" type="service_closure" id="twig.command.lint" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.view_handler.default" type="service_closure" id="fos_rest.view_handler.default" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.view_handler.jsonp" type="service_closure" id="fos_rest.view_handler.jsonp" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.request.param_fetcher" type="service_closure" id="fos_rest.request.param_fetcher" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.request.param_fetcher.reader" type="service_closure" id="fos_rest.request.param_fetcher.reader" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.serializer.jms" type="service_closure" id="fos_rest.serializer.jms" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.serializer.symfony" type="service_closure" id="fos_rest.serializer.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.serializer.form_error_normalizer" type="service_closure" id="fos_rest.serializer.form_error_normalizer" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.normalizer.camel_keys" type="service_closure" id="fos_rest.normalizer.camel_keys" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.normalizer.camel_keys_with_leading_underscore" type="service_closure" id="fos_rest.normalizer.camel_keys_with_leading_underscore" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.decoder.json" type="service_closure" id="fos_rest.decoder.json" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.decoder.jsontoform" type="service_closure" id="fos_rest.decoder.jsontoform" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.decoder.xml" type="service_closure" id="fos_rest.decoder.xml" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.decoder_provider" type="service_closure" id="fos_rest.decoder_provider" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.body_listener" type="service_closure" id="fos_rest.body_listener" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.format_listener" type="service_closure" id="fos_rest.format_listener" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.format_negotiator" type="service_closure" id="fos_rest.format_negotiator" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.event_dispatcher.service_locator" type="service_closure" id="jms_serializer.event_dispatcher.service_locator" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.doctrine_proxy_subscriber" type="service_closure" id="jms_serializer.doctrine_proxy_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.handler_registry.service_locator" type="service_closure" id="jms_serializer.handler_registry.service_locator" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.array_collection_handler" type="service_closure" id="jms_serializer.array_collection_handler" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.constraint_violation_handler" type="service_closure" id="jms_serializer.constraint_violation_handler" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.datetime_handler" type="service_closure" id="jms_serializer.datetime_handler" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.iterator_handler" type="service_closure" id="jms_serializer.iterator_handler" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.symfony_uid_handler" type="service_closure" id="jms_serializer.symfony_uid_handler" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.type_parser" type="service_closure" id="jms_serializer.type_parser" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.yaml_driver" type="service_closure" id="jms_serializer.metadata.yaml_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.xml_driver" type="service_closure" id="jms_serializer.metadata.xml_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.annotation_driver" type="service_closure" id="jms_serializer.metadata.annotation_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.chain_driver" type="service_closure" id="jms_serializer.metadata.chain_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.doctrine_type_driver" type="service_closure" id="jms_serializer.metadata.doctrine_type_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.doctrine_phpcr_type_driver" type="service_closure" id="jms_serializer.metadata.doctrine_phpcr_type_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.typed_properties_driver" type="service_closure" id="jms_serializer.metadata.typed_properties_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.doc_block_driver" type="service_closure" id="jms_serializer.metadata.doc_block_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.service_locator" type="service_closure" id="jms_serializer.metadata.service_locator" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.lazy_loading_driver" type="service_closure" id="jms_serializer.metadata.lazy_loading_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.cache.file_cache" type="service_closure" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.camel_case_naming_strategy" type="service_closure" id="jms_serializer.camel_case_naming_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.identical_property_naming_strategy" type="service_closure" id="jms_serializer.identical_property_naming_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.serialized_name_annotation_strategy" type="service_closure" id="jms_serializer.serialized_name_annotation_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.doctrine_object_constructor" type="service_closure" id="jms_serializer.doctrine_object_constructor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.doctrine_phpcr_object_constructor" type="service_closure" id="jms_serializer.doctrine_phpcr_object_constructor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.unserialize_object_constructor" type="service_closure" id="jms_serializer.unserialize_object_constructor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.serializer" type="service_closure" id="jms_serializer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.deserialization_graph_navigator_factory" type="service_closure" id="jms_serializer.deserialization_graph_navigator_factory" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.serialization_graph_navigator_factory" type="service_closure" id="jms_serializer.serialization_graph_navigator_factory" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.expression_evaluator" type="service_closure" id="jms_serializer.expression_evaluator" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.expression_language" type="service_closure" id="jms_serializer.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.expression_language.function_provider" type="service_closure" id="jms_serializer.expression_language.function_provider" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.twig_extension.runtime_serializer" type="service_closure" id="jms_serializer.twig_extension.runtime_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.twig_extension.serializer_runtime_helper" type="service_closure" id="jms_serializer.twig_extension.serializer_runtime_helper" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.accessor_strategy.default" type="service_closure" id="jms_serializer.accessor_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.json_serialization_visitor" type="service_closure" id="jms_serializer.json_serialization_visitor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.json_deserialization_visitor" type="service_closure" id="jms_serializer.json_deserialization_visitor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.xml_serialization_visitor" type="service_closure" id="jms_serializer.xml_serialization_visitor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.xml_deserialization_visitor" type="service_closure" id="jms_serializer.xml_deserialization_visitor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.cache.cache_clearer" type="service_closure" id="jms_serializer.cache.cache_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.configured_serialization_context_factory" type="service_closure" id="jms_serializer.configured_serialization_context_factory" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.configured_deserialization_context_factory" type="service_closure" id="jms_serializer.configured_deserialization_context_factory" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.jms_serializer" type="service_closure" id="data_collector.jms_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.traceable_event_dispatcher" type="service_closure" id="jms_serializer.traceable_event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.traceable_runs_listener" type="service_closure" id="jms_serializer.traceable_runs_listener" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.traceable_metadata_factory" type="service_closure" id="jms_serializer.traceable_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.traceable_handler_registry" type="service_closure" id="jms_serializer.traceable_handler_registry" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.traceable_file_locator" type="service_closure" id="jms_serializer.metadata.traceable_file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.annotation_and_attributes_reader" type="service_closure" id="jms_serializer.metadata.annotation_and_attributes_reader" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.link_factory" type="service_closure" id="hateoas.link_factory" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.links_factory" type="service_closure" id="hateoas.links_factory" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.embeds_factory" type="service_closure" id="hateoas.embeds_factory" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.serializer.xml" type="service_closure" id="hateoas.serializer.xml" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.serializer.json_hal" type="service_closure" id="hateoas.serializer.json_hal" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.serializer.exclusion.expression_language_strategy" type="service_closure" id="hateoas.serializer.exclusion.expression_language_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.serializer.exclusion_manager" type="service_closure" id="hateoas.serializer.exclusion_manager" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.inline_deferrer.embeds" type="service_closure" id="hateoas.inline_deferrer.embeds" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.inline_deferrer.links" type="service_closure" id="hateoas.inline_deferrer.links" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.provider.chain" type="service_closure" id="hateoas.configuration.provider.chain" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.provider.function" type="service_closure" id="hateoas.configuration.provider.function" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.provider.static_method" type="service_closure" id="hateoas.configuration.provider.static_method" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.provider.expression" type="service_closure" id="hateoas.configuration.provider.expression" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.yaml_driver" type="service_closure" id="hateoas.configuration.metadata.yaml_driver" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.xml_driver" type="service_closure" id="hateoas.configuration.metadata.xml_driver" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.annotation_driver" type="service_closure" id="hateoas.configuration.metadata.annotation_driver" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.extension_driver" type="service_closure" id="hateoas.configuration.metadata.extension_driver" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.chain_driver" type="service_closure" id="hateoas.configuration.metadata.chain_driver" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.lazy_loading_driver" type="service_closure" id="hateoas.configuration.metadata.lazy_loading_driver" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.cache.file_cache" type="service_closure" id="hateoas.configuration.metadata.cache.file_cache" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata_factory" type="service_closure" id="hateoas.configuration.metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.generator.symfony" type="service_closure" id="hateoas.generator.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.expression.link_expression_function" type="service_closure" id="hateoas.expression.link_expression_function" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.twig.link" type="service_closure" id="hateoas.twig.link" on-invalid="ignore_uninitialized"/>
        <argument key="fidry_alice_data_fixtures.loader.multipass_file" type="service_closure" id="fidry_alice_data_fixtures.loader.multipass_file" on-invalid="ignore_uninitialized"/>
        <argument key="fidry_alice_data_fixtures.loader.simple" type="service_closure" id="fidry_alice_data_fixtures.loader.simple" on-invalid="ignore_uninitialized"/>
        <argument key="fidry_alice_data_fixtures.doctrine.purger_loader" type="service_closure" id="fidry_alice_data_fixtures.doctrine.purger_loader" on-invalid="ignore_uninitialized"/>
        <argument key="fidry_alice_data_fixtures.doctrine.persister_loader" type="service_closure" id="fidry_alice_data_fixtures.doctrine.persister_loader" on-invalid="ignore_uninitialized"/>
        <argument key="fidry_alice_data_fixtures.persistence.doctrine.purger.purger_factory" type="service_closure" id="fidry_alice_data_fixtures.persistence.doctrine.purger.purger_factory" on-invalid="ignore_uninitialized"/>
        <argument key="fidry_alice_data_fixtures.persistence.purger_modepurger_mode" type="service_closure" id="fidry_alice_data_fixtures.persistence.purger_modepurger_mode" on-invalid="ignore_uninitialized"/>
        <argument key="fidry_alice_data_fixtures.persistence.persister.doctrine.object_manager_persister" type="service_closure" id="fidry_alice_data_fixtures.persistence.persister.doctrine.object_manager_persister" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.simple_fixture_bag_denormalizer" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.simple_fixture_bag_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.tolerant_denormalizer" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.tolerant_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.registry_denormalizer" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.registry_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.null_list" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.null_list" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.temporary_list" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.temporary_list" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.simple_list" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.simple_list" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.null_range" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.null_range" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.reference_range_name" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.reference_range_name" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.temporary_range" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.temporary_range" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.simple_range" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.simple_range" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.simple" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.specs.simple" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.specs.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor.legacy_constructor_denormalizer" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor.legacy_constructor_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor.factory_denormalizer" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor.factory_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor.constructor_denormalizer" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor.constructor_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.arguments.simple_arguments_denormalizer" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.arguments.simple_arguments_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.value.unique_value_denormalizer" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.value.unique_value_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.value.simple_value_denormalizer" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.value.simple_value_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.property.simple_denormalizer" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.property.simple_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.simple_denormalizer" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.simple_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.function_denormalizer" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.function_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.method_flag_handler.configurator_flag_handler" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.method_flag_handler.configurator_flag_handler" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.method_flag_handler.optional_flag_handler" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.method_flag_handler.optional_flag_handler" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.flag_parser.element" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.element" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.flag_parser.registry" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.registry" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.configurator" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.configurator" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.extend" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.extend" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.optional" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.optional" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.template" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.template" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.unique" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.unique" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.registry" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.registry" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.argument_escaper" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.argument_escaper" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.dynamic_array_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.dynamic_array_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.escaped_value_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.escaped_value_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.fixture_list_reference_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.fixture_list_reference_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.fixture_method_reference_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.fixture_method_reference_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.fixture_range_reference_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.fixture_range_reference_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.method_reference_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.method_reference_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.optional_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.optional_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.parameter_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.parameter_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.property_reference_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.property_reference_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.variable_reference_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.variable_reference_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.simple_reference_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.simple_reference_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.string_array_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.string_array_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.string_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.string_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.tolerant_function_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.tolerant_function_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.identity_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.identity_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.function_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.function_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.variable_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.variable_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.wildcard_reference_token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.wildcard_reference_token_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.lexer.empty_value_lexer" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.lexer.empty_value_lexer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.lexer.reference_escaper_lexer" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.lexer.reference_escaper_lexer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.lexer.globals_patterns_lexer" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.lexer.globals_patterns_lexer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.lexer.function_lexer" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.lexer.function_lexer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.lexer.string_then_reference_lexer" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.lexer.string_then_reference_lexer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.lexer.sub_patterns_lexer" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.lexer.sub_patterns_lexer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.lexer.reference_lexer" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.lexer.reference_lexer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.function_fixture_reference_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.function_fixture_reference_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.string_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.string_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.simple_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.simple_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.simple" type="service_closure" id="nelmio_alice.fixture_builder.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.simple" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.parameter.simple_parameter_bag_denormalizer" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.parameter.simple_parameter_bag_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.file_locator.default" type="service_closure" id="nelmio_alice.file_locator.default" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.faker.generator" type="service_closure" id="nelmio_alice.faker.generator" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.faker.provider.alice" type="service_closure" id="nelmio_alice.faker.provider.alice" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.property_accessor.std" type="service_closure" id="nelmio_alice.property_accessor.std" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.parameter_bag.remove_conflicting_parameters" type="service_closure" id="nelmio_alice.generator.resolver.parameter_bag.remove_conflicting_parameters" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.parameter_bag.simple" type="service_closure" id="nelmio_alice.generator.resolver.parameter_bag.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.parameter.registry" type="service_closure" id="nelmio_alice.generator.resolver.parameter.registry" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.parameter.chainable.static_parameter_resolver" type="service_closure" id="nelmio_alice.generator.resolver.parameter.chainable.static_parameter_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.parameter.chainable.array_parameter_resolver" type="service_closure" id="nelmio_alice.generator.resolver.parameter.chainable.array_parameter_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.parameter.chainable.recursive_parameter_resolver" type="service_closure" id="nelmio_alice.generator.resolver.parameter.chainable.recursive_parameter_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.parameter.chainable.string_parameter_resolver" type="service_closure" id="nelmio_alice.generator.resolver.parameter.chainable.string_parameter_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.fixture_bag.template_bag" type="service_closure" id="nelmio_alice.generator.resolver.fixture_bag.template_bag" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.named_arguments_resolver" type="service_closure" id="nelmio_alice.generator.named_arguments_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.registry" type="service_closure" id="nelmio_alice.generator.resolver.value.registry" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.unique_values_pool" type="service_closure" id="nelmio_alice.generator.resolver.value.unique_values_pool" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.array_value_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.array_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.dynamic_array_value_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.dynamic_array_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.evaluated_value_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.evaluated_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.faker_value_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.faker_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.php_value_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.php_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.function_argument_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.function_argument_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.fixture_property_reference_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.fixture_property_reference_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.fixture_method_call_reference_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.fixture_method_call_reference_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.fixture_reference_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.fixture_reference_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.self_fixture_reference_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.self_fixture_reference_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.unresolved_fixture_reference_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.unresolved_fixture_reference_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.fixture_wildcard_reference_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.fixture_wildcard_reference_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.list_value_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.list_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.optional_value_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.optional_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.parameter_value_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.parameter_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.unique_value_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.unique_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.value_for_current_value_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.value_for_current_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.chainable.variable_value_resolver" type="service_closure" id="nelmio_alice.generator.resolver.value.chainable.variable_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.fixture_set.remove_conflicting_objects" type="service_closure" id="nelmio_alice.generator.resolver.fixture_set.remove_conflicting_objects" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.fixture_set.simple" type="service_closure" id="nelmio_alice.generator.resolver.fixture_set.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.caller.simple" type="service_closure" id="nelmio_alice.generator.caller.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.caller.registry" type="service_closure" id="nelmio_alice.generator.caller.registry" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.caller.chainable.configurator_method_call" type="service_closure" id="nelmio_alice.generator.caller.chainable.configurator_method_call" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.caller.chainable.method_call_with_reference" type="service_closure" id="nelmio_alice.generator.caller.chainable.method_call_with_reference" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.caller.chainable.optional_method_call" type="service_closure" id="nelmio_alice.generator.caller.chainable.optional_method_call" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.caller.chainable.simple_call" type="service_closure" id="nelmio_alice.generator.caller.chainable.simple_call" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.instantiator.existing_instance" type="service_closure" id="nelmio_alice.generator.instantiator.existing_instance" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.instantiator.resolver" type="service_closure" id="nelmio_alice.generator.instantiator.resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.instantiator.registry" type="service_closure" id="nelmio_alice.generator.instantiator.registry" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.instantiator.chainable.no_caller_method_instantiator" type="service_closure" id="nelmio_alice.generator.instantiator.chainable.no_caller_method_instantiator" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.instantiator.chainable.null_constructor_instantiator" type="service_closure" id="nelmio_alice.generator.instantiator.chainable.null_constructor_instantiator" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.instantiator.chainable.no_method_call_instantiator" type="service_closure" id="nelmio_alice.generator.instantiator.chainable.no_method_call_instantiator" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.instantiator.chainable.static_factory_instantiator" type="service_closure" id="nelmio_alice.generator.instantiator.chainable.static_factory_instantiator" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.hydrator.simple" type="service_closure" id="nelmio_alice.generator.hydrator.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.hydrator.property.symfony_property_access" type="service_closure" id="nelmio_alice.generator.hydrator.property.symfony_property_access" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.double_pass" type="service_closure" id="nelmio_alice.generator.double_pass" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.object_generator.complete" type="service_closure" id="nelmio_alice.generator.object_generator.complete" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.object_generator.simple" type="service_closure" id="nelmio_alice.generator.object_generator.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.data_loader.simple" type="service_closure" id="nelmio_alice.data_loader.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.file_loader.simple" type="service_closure" id="nelmio_alice.file_loader.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.files_loader.simple" type="service_closure" id="nelmio_alice.files_loader.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.file_parser.runtime_cache" type="service_closure" id="nelmio_alice.file_parser.runtime_cache" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.file_parser.symfony_yaml" type="service_closure" id="nelmio_alice.file_parser.symfony_yaml" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.file_parser.default_include_processor" type="service_closure" id="nelmio_alice.file_parser.default_include_processor" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.file_parser.registry" type="service_closure" id="nelmio_alice.file_parser.registry" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.file_parser.chainable.yaml" type="service_closure" id="nelmio_alice.file_parser.chainable.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.file_parser.chainable.php" type="service_closure" id="nelmio_alice.file_parser.chainable.php" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.file_parser.chainable.json" type="service_closure" id="nelmio_alice.file_parser.chainable.json" on-invalid="ignore_uninitialized"/>
        <argument key="SM\Extension\Twig\SMExtension" type="service_closure" id="SM\Extension\Twig\SMExtension" on-invalid="ignore_uninitialized"/>
        <argument key="SM\Factory\Factory" type="service_closure" id="SM\Factory\Factory" on-invalid="ignore_uninitialized"/>
        <argument key="winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallbackFactory" type="service_closure" id="winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallbackFactory" on-invalid="ignore_uninitialized"/>
        <argument key="winzou\Bundle\StateMachineBundle\Command\winzouStateMachineDebugCommand" type="service_closure" id="winzou\Bundle\StateMachineBundle\Command\winzouStateMachineDebugCommand" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.form_registry.grid_filter" type="service_closure" id="sylius.form_registry.grid_filter" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.twig.extension.grid" type="service_closure" id="sylius.twig.extension.grid" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.twig.extension.bulk_action_grid" type="service_closure" id="sylius.twig.extension.bulk_action_grid" on-invalid="ignore_uninitialized"/>
        <argument key="command.bus.middleware.add_bus_name_stamp_middleware" type="service_closure" id="command.bus.middleware.add_bus_name_stamp_middleware" on-invalid="ignore_uninitialized"/>
        <argument key="command.bus.middleware.send_message" type="service_closure" id="command.bus.middleware.send_message" on-invalid="ignore_uninitialized"/>
        <argument key="command.bus.middleware.handle_message" type="service_closure" id="command.bus.middleware.handle_message" on-invalid="ignore_uninitialized"/>
        <argument key="query.bus.middleware.add_bus_name_stamp_middleware" type="service_closure" id="query.bus.middleware.add_bus_name_stamp_middleware" on-invalid="ignore_uninitialized"/>
        <argument key="query.bus.middleware.send_message" type="service_closure" id="query.bus.middleware.send_message" on-invalid="ignore_uninitialized"/>
        <argument key="query.bus.middleware.handle_message" type="service_closure" id="query.bus.middleware.handle_message" on-invalid="ignore_uninitialized"/>
        <argument key="command.bus.messenger.handlers_locator" type="service_closure" id="command.bus.messenger.handlers_locator" on-invalid="ignore_uninitialized"/>
        <argument key="query.bus.messenger.handlers_locator" type="service_closure" id="query.bus.messenger.handlers_locator" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.csrf_protection" type="service_closure" id="security.listener.csrf_protection" on-invalid="ignore_uninitialized"/>
        <argument key="security.logout.listener.csrf_token_clearing" type="service_closure" id="security.logout.listener.csrf_token_clearing" on-invalid="ignore_uninitialized"/>
        <argument key="security.ldap_locator" type="service_closure" id="security.ldap_locator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.logging_middleware.default" type="service_closure" id="doctrine.dbal.logging_middleware.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.debug_middleware.default" type="service_closure" id="doctrine.dbal.debug_middleware.default" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.state_machine.winzou" type="service_closure" id="sylius.resource_controller.state_machine.winzou" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.request_matcher.7e437a1bd0410de47b53737cedd3a1da2e51036b14ed3da048d3b9639aa83b903d1e4c5e" type="service_closure" id="fos_rest.request_matcher.7e437a1bd0410de47b53737cedd3a1da2e51036b14ed3da048d3b9639aa83b903d1e4c5e" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.request_matcher.35012096133f739bdc6bcc2346b6a5e2436616e6ba71f4b09b9fe43dc74bab79257b9bf8" type="service_closure" id="fos_rest.request_matcher.35012096133f739bdc6bcc2346b6a5e2436616e6ba71f4b09b9fe43dc74bab79257b9bf8" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478" type="service_closure" id="fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.serializer.form_error_handler" type="service_closure" id="fos_rest.serializer.form_error_handler" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\GridBundle\Command\StubMakeGrid" type="service_closure" id="Sylius\Bundle\GridBundle\Command\StubMakeGrid" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.form.type_extension.form.request_handler.inner" type="service_closure" id="sylius.form.type_extension.form.request_handler.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.resources_resolver.grid_aware.inner" type="service_closure" id="sylius.resource_controller.resources_resolver.grid_aware.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.custom_grid_renderer.twig.inner" type="service_closure" id="sylius.custom_grid_renderer.twig.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.custom_bulk_action_grid_renderer.twig.inner" type="service_closure" id="sylius.custom_bulk_action_grid_renderer.twig.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.factory.operation_route_path_factory.collection.inner" type="service_closure" id="sylius.routing.factory.operation_route_path_factory.collection.inner" on-invalid="ignore_uninitialized"/>
        <argument key="App\Subscription\Factory\SubscriptionFactory.inner" type="service_closure" id="App\Subscription\Factory\SubscriptionFactory.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.access.decision_manager.inner" type="service_closure" id="debug.security.access.decision_manager.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall.authenticator.main.inner" type="service_closure" id="debug.security.firewall.authenticator.main.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.context.initiator.legacy_request_context.inner" type="service_closure" id="sylius.context.initiator.legacy_request_context.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_collection.factory.templates_dir.inner" type="service_closure" id="sylius.resource_metadata_collection.factory.templates_dir.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.twig.context.factory.request.inner" type="service_closure" id="sylius.twig.context.factory.request.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.grid.view_factory.legacy.inner" type="service_closure" id="sylius.grid.view_factory.legacy.inner" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Doctrine\ResourceMappingDriverChain.inner" type="service_closure" id="Sylius\Bundle\ResourceBundle\Doctrine\ResourceMappingDriverChain.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.doctrine.orm.container_repository_factory.inner" type="service_closure" id="sylius.doctrine.orm.container_repository_factory.inner" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.serializer.form_error_handler.inner" type="service_closure" id="fos_rest.serializer.form_error_handler.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state.provider.event_dispatcher.inner" type="service_closure" id="sylius.state.provider.event_dispatcher.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state.processor.event_dispatcher.inner" type="service_closure" id="sylius.state.processor.event_dispatcher.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state.processor.event_dispatcher_bulk_aware.inner" type="service_closure" id="sylius.state.processor.event_dispatcher_bulk_aware.inner" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.traceable_metadata_factory.inner" type="service_closure" id="jms_serializer.traceable_metadata_factory.inner" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.traceable_handler_registry.inner" type="service_closure" id="jms_serializer.traceable_handler_registry.inner" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.traceable_file_locator.inner" type="service_closure" id="jms_serializer.metadata.traceable_file_locator.inner" on-invalid="ignore_uninitialized"/>
        <argument key="logger" type="service_closure" id="Psr\Log\NullLogger" on-invalid="ignore_uninitialized"/>
        <argument key="App\Shared\Application\Command\CommandBusInterface" type="service_closure" id="App\Shared\Infrastructure\Symfony\Messenger\MessengerCommandBus" on-invalid="ignore_uninitialized"/>
        <argument key="App\Shared\Application\Query\QueryBusInterface" type="service_closure" id="App\Shared\Infrastructure\Symfony\Messenger\MessengerQueryBus" on-invalid="ignore_uninitialized"/>
        <argument key="App\Shared\Application\Query\QueryHandlerInterface" type="service_closure" id="App\BoardGameBlog\Application\Query\FindBoardGameQueryHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Shared\Application\Query\QueryInterface" type="service_closure" id="App\BoardGameBlog\Application\Query\FindBoardGameQuery" on-invalid="ignore_uninitialized"/>
        <argument key="App\Shared\Domain\Repository\RepositoryInterface" type="service_closure" id="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\BoardGameBlog\Domain\Repository\BoardGameRepositoryInterface" type="service_closure" id="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\EventDispatcher\EventDispatcherInterface" type="service_closure" id="event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" type="service_closure" id="event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\EventDispatcher\EventDispatcherInterface" type="service_closure" id="event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\HttpKernelInterface" type="service_closure" id="http_kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\RequestStack" type="service_closure" id="request_stack" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\HttpCache\StoreInterface" type="service_closure" id="http_cache.store" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\UrlHelper" type="service_closure" id="url_helper" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\KernelInterface" type="service_closure" id="kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Filesystem\Filesystem" type="service_closure" id="filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Config\FileLocator" type="service_closure" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\UriSigner" type="service_closure" id="uri_signer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ReverseContainer" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\String\Slugger\SluggerInterface" type="service_closure" id="slugger" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Fragment\FragmentUriGeneratorInterface" type="service_closure" id="fragment.uri_generator" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer.html" type="service_closure" id="twig.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer" type="service_closure" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Container\ContainerInterface $parameterBag" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Cache\CacheItemPoolInterface" type="service_closure" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\CacheInterface" type="service_closure" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\TagAwareCacheInterface" type="service_closure" id="cache.app.taggable" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Translation\TranslatorInterface" type="service_closure" id="translator.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Reader\TranslationReaderInterface" type="service_closure" id="translation.reader" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Extractor\ExtractorInterface" type="service_closure" id="translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Writer\TranslationWriterInterface" type="service_closure" id="translation.writer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Translation\LocaleAwareInterface" type="service_closure" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\LocaleSwitcher" type="service_closure" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="translator.formatter" type="service_closure" id="translator.formatter.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Workflow\Registry" type="service_closure" id=".workflow.registry" on-invalid="ignore_uninitialized"/>
        <argument key="workflow.registry" type="service_closure" id=".workflow.registry" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Workflow\WorkflowInterface $pullRequestStateMachine" type="service_closure" id="state_machine.pull_request" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Workflow\WorkflowInterface $pullRequest" type="service_closure" id="state_machine.pull_request" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Workflow\WorkflowInterface $blogPublishingWorkflow" type="service_closure" id="workflow.blog_publishing" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Workflow\WorkflowInterface $blogPublishing" type="service_closure" id="workflow.blog_publishing" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Workflow\WorkflowInterface $subscriptionStateMachine" type="service_closure" id="state_machine.subscription" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Workflow\WorkflowInterface $subscription" type="service_closure" id="state_machine.subscription" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" type="service_closure" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RouterInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Generator\UrlGeneratorInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Matcher\UrlMatcherInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContextAwareInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContext" type="service_closure" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="annotation_reader" type="service_closure" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Annotations\Reader" type="service_closure" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyAccess\PropertyAccessorInterface" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\SerializerInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\NormalizerInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Encoder\EncoderInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Encoder\DecoderInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.property_accessor" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" type="service_closure" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" type="service_closure" id="serializer.normalizer.object" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\PropertyNormalizer" type="service_closure" id="serializer.normalizer.property" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" type="service_closure" id="serializer.mapping.class_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer.serializer" type="service_closure" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" type="service_closure" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" type="service_closure" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_redis_provider" type="service_closure" id=".cache_connection.GD_MSZC" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_memcached_provider" type="service_closure" id=".cache_connection.JKE6keX" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_doctrine_dbal_provider" type="service_closure" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="SessionHandlerInterface" type="service_closure" id="session.handler.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.factory" type="service_closure" id="session.storage.factory.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler" type="service_closure" id="session.handler.native" on-invalid="ignore_uninitialized"/>
        <argument key="session_listener" type="service_closure" id="test.session.listener" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" type="service_closure" id="security.csrf.token_generator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" type="service_closure" id="security.csrf.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" type="service_closure" id="form.resolved_type_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\FormRegistryInterface" type="service_closure" id="form.registry" on-invalid="ignore_uninitialized"/>
        <argument key="form.property_accessor" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory" type="service_closure" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Validator\Validator\ValidatorInterface" type="service_closure" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.class_metadata_factory" type="service_closure" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Messenger\Transport\Serialization\SerializerInterface" type="service_closure" id="messenger.transport.native_php_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.default_serializer" type="service_closure" id="messenger.transport.native_php_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Messenger\MessageBusInterface" type="service_closure" id="command.bus" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Messenger\MessageBusInterface $queryBus" type="service_closure" id="query.bus" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" type="service_closure" id="security.authorization_checker" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" type="service_closure" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Bundle\SecurityBundle\Security" type="service_closure" id="security.helper" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Security" type="service_closure" id="security.helper" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" type="service_closure" id="security.authentication.session_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" type="service_closure" id="security.authentication_utils" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" type="service_closure" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" type="service_closure" id="security.role_hierarchy" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Firewall" type="service_closure" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\FirewallMapInterface" type="service_closure" id="security.firewall.map" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\HttpUtils" type="service_closure" id="security.http_utils" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" type="service_closure" id="security.password_hasher_factory" on-invalid="ignore_uninitialized"/>
        <argument key="security.password_hasher" type="service_closure" id="security.user_password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" type="service_closure" id="security.user_password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Authentication\UserAuthenticatorInterface" type="service_closure" id="security.user_authenticator" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall" type="service_closure" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_providers" type="service_closure" id="security.user.provider.concrete.users_in_memory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\User\UserProviderInterface" type="service_closure" id="security.user.provider.concrete.users_in_memory" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy.main" type="service_closure" id="security.authentication.session_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker.main" type="service_closure" id="security.user_checker" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.context_locator" type="service_closure" id=".service_locator.zJyh7qS" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\User\UserCheckerInterface" type="service_closure" id="security.user_checker" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Connection" type="service_closure" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ManagerRegistry" type="service_closure" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ManagerRegistry" type="service_closure" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.event_manager" type="service_closure" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Connection $defaultConnection" type="service_closure" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.metadata.annotation_reader" type="service_closure" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_metadata_cache" type="service_closure" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_result_cache" type="service_closure" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_query_cache" type="service_closure" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface $defaultEntityManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.event_manager" type="service_closure" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Context\Initiator\RequestContextInitiatorInterface" type="service_closure" id="sylius.context.initiator.legacy_request_context" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Controller\ParametersParserInterface" type="service_closure" id="sylius.resource_controller.parameters_parser" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Controller\RequestConfigurationFactoryInterface" type="service_closure" id="sylius.resource_controller.request_configuration_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Controller\NewResourceFactoryInterface" type="service_closure" id="sylius.resource_controller.new_resource_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Controller\SingleResourceProviderInterface" type="service_closure" id="sylius.resource_controller.single_resource_provider" on-invalid="ignore_uninitialized"/>
        <argument key="Hateoas\Representation\Factory\PagerfantaFactory" type="service_closure" id="sylius.resource_controller.pagerfanta_representation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Controller\ResourcesCollectionProviderInterface" type="service_closure" id="sylius.resource_controller.resources_collection_provider" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Controller\ResourceFormFactoryInterface" type="service_closure" id="sylius.resource_controller.form_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Controller\RedirectHandlerInterface" type="service_closure" id="sylius.resource_controller.redirect_handler" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Controller\DisabledAuthorizationChecker" type="service_closure" id="sylius.resource_controller.authorization_checker.disabled" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Controller\FlashHelperInterface" type="service_closure" id="sylius.resource_controller.flash_helper" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Controller\EventDispatcherInterface" type="service_closure" id="sylius.resource_controller.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Controller\ViewHandlerInterface" type="service_closure" id="sylius.resource_controller.view_handler" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Controller\ResourceUpdateHandlerInterface" type="service_closure" id="sylius.resource_controller.resource_update_handler" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Controller\ResourceDeleteHandlerInterface" type="service_closure" id="sylius.resource_controller.resource_delete_handler" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Symfony\EventDispatcher\OperationEventDispatcherInterface" type="service_closure" id="sylius.dispatcher.operation" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Symfony\EventDispatcher\OperationEventHandlerInterface" type="service_closure" id="sylius.event_handler.operation" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Symfony\Session\Flash\FlashHelperInterface" type="service_closure" id="sylius.helper.flash" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Metadata\Resource\Factory\ResourceMetadataCollectionFactoryInterface" type="service_closure" id="sylius.resource_metadata_collection.factory.templates_dir" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_collection.factory" type="service_closure" id="sylius.resource_metadata_collection.factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.loader.resource" type="service_closure" id="Sylius\Bundle\ResourceBundle\Routing\ResourceLoader" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Routing\CrudRoutesAttributesLoader" type="service_closure" id="sylius.routing.loader.crud_routes_attributes" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Routing\RoutesAttributesLoader" type="service_closure" id="sylius.routing.loader.routes_attributes" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\State\ProviderInterface" type="service_closure" id="sylius.state.provider.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\State\FactoryInterface" type="service_closure" id="sylius.state.factory" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\State\ProcessorInterface" type="service_closure" id="sylius.state.processor.event_dispatcher_bulk_aware" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\State\ResponderInterface" type="service_closure" id="sylius.state.responder" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\StateMachine\OperationStateMachineInterface" type="service_closure" id="sylius.state_machine.operation" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state_machine.operation.default" type="service_closure" id="sylius.state_machine.operation.winzou" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Twig\Context\Factory\ContextFactoryInterface" type="service_closure" id="sylius.twig.context.factory.default" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Metadata\RegistryInterface" type="service_closure" id="sylius.resource_registry" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\ExpressionLanguage\ExpressionLanguage" type="service_closure" id="sylius.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Grid\Parser\OptionsParserInterface" type="service_closure" id="sylius.grid_options_parser" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.authorization_checker" type="service_closure" id="sylius.resource_controller.authorization_checker.disabled" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Doctrine\ORM\Form\Builder\DefaultFormBuilder" type="service_closure" id="sylius.form_builder.default" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Doctrine\ORM\ContainerRepositoryFactory" type="service_closure" id="sylius.doctrine.orm.container_repository_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ObjectManager $blogPostManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectManager $blogPostManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface $blogPostManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectRepository $blogPostRepository" type="service_closure" id="app.repository.blog_post" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Collections\Selectable $blogPostRepository" type="service_closure" id="app.repository.blog_post" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Repository\RepositoryInterface $blogPostRepository" type="service_closure" id="app.repository.blog_post" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository $blogPostRepository" type="service_closure" id="app.repository.blog_post" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityRepository $blogPostRepository" type="service_closure" id="app.repository.blog_post" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\FactoryInterface $blogPostFactory" type="service_closure" id="app.factory.blog_post" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\Factory $blogPostFactory" type="service_closure" id="app.factory.blog_post" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ObjectManager $bookManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectManager $bookManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface $bookManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface $bookRepository" type="service_closure" id="app.repository.book" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Collections\Selectable $bookRepository" type="service_closure" id="app.repository.book" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectRepository $bookRepository" type="service_closure" id="app.repository.book" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\BookRepositoryInterface $bookRepository" type="service_closure" id="app.repository.book" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Repository\RepositoryInterface $bookRepository" type="service_closure" id="app.repository.book" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\BookRepository $bookRepository" type="service_closure" id="app.repository.book" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository $bookRepository" type="service_closure" id="app.repository.book" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Bundle\DoctrineBundle\Repository\LazyServiceEntityRepository $bookRepository" type="service_closure" id="app.repository.book" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityRepository $bookRepository" type="service_closure" id="app.repository.book" on-invalid="ignore_uninitialized"/>
        <argument key="App\Factory\BookFactoryInterface $bookFactory" type="service_closure" id="app.factory.book" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\FactoryInterface $bookFactory" type="service_closure" id="app.factory.book" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\TranslatableFactoryInterface $bookFactory" type="service_closure" id="app.factory.book" on-invalid="ignore_uninitialized"/>
        <argument key="App\Factory\BookFactory $bookFactory" type="service_closure" id="app.factory.book" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ObjectManager $bookTranslationManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectManager $bookTranslationManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface $bookTranslationManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectRepository $bookTranslationRepository" type="service_closure" id="app.repository.book_translation" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Collections\Selectable $bookTranslationRepository" type="service_closure" id="app.repository.book_translation" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Repository\RepositoryInterface $bookTranslationRepository" type="service_closure" id="app.repository.book_translation" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository $bookTranslationRepository" type="service_closure" id="app.repository.book_translation" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityRepository $bookTranslationRepository" type="service_closure" id="app.repository.book_translation" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\FactoryInterface $bookTranslationFactory" type="service_closure" id="app.factory.book_translation" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\Factory $bookTranslationFactory" type="service_closure" id="app.factory.book_translation" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ObjectManager $comicBookManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectManager $comicBookManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface $comicBookManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectRepository $comicBookRepository" type="service_closure" id="app.repository.comic_book" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Collections\Selectable $comicBookRepository" type="service_closure" id="app.repository.comic_book" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Repository\RepositoryInterface $comicBookRepository" type="service_closure" id="app.repository.comic_book" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository $comicBookRepository" type="service_closure" id="app.repository.comic_book" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityRepository $comicBookRepository" type="service_closure" id="app.repository.comic_book" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\FactoryInterface $comicBookFactory" type="service_closure" id="app.factory.comic_book" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\Factory $comicBookFactory" type="service_closure" id="app.factory.comic_book" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ObjectManager $scienceBookManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectManager $scienceBookManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface $scienceBookManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectRepository $scienceBookRepository" type="service_closure" id="app.repository.science_book" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Collections\Selectable $scienceBookRepository" type="service_closure" id="app.repository.science_book" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Repository\RepositoryInterface $scienceBookRepository" type="service_closure" id="app.repository.science_book" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository $scienceBookRepository" type="service_closure" id="app.repository.science_book" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityRepository $scienceBookRepository" type="service_closure" id="app.repository.science_book" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\FactoryInterface $scienceBookFactory" type="service_closure" id="app.factory.science_book" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\Factory $scienceBookFactory" type="service_closure" id="app.factory.science_book" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ObjectManager $gedmoManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectManager $gedmoManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface $gedmoManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectRepository $gedmoRepository" type="service_closure" id="app.repository.gedmo" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Collections\Selectable $gedmoRepository" type="service_closure" id="app.repository.gedmo" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Repository\RepositoryInterface $gedmoRepository" type="service_closure" id="app.repository.gedmo" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository $gedmoRepository" type="service_closure" id="app.repository.gedmo" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityRepository $gedmoRepository" type="service_closure" id="app.repository.gedmo" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\FactoryInterface $gedmoFactory" type="service_closure" id="app.factory.gedmo" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\Factory $gedmoFactory" type="service_closure" id="app.factory.gedmo" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ObjectManager $pullRequestManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectManager $pullRequestManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface $pullRequestManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectRepository $pullRequestRepository" type="service_closure" id="app.repository.pull_request" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Collections\Selectable $pullRequestRepository" type="service_closure" id="app.repository.pull_request" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Repository\RepositoryInterface $pullRequestRepository" type="service_closure" id="app.repository.pull_request" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository $pullRequestRepository" type="service_closure" id="app.repository.pull_request" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityRepository $pullRequestRepository" type="service_closure" id="app.repository.pull_request" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\FactoryInterface $pullRequestFactory" type="service_closure" id="app.factory.pull_request" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\Factory $pullRequestFactory" type="service_closure" id="app.factory.pull_request" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ObjectManager $subscriptionManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectManager $subscriptionManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface $subscriptionManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ObjectRepository $subscriptionRepository" type="service_closure" id="app.repository.subscription" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Collections\Selectable $subscriptionRepository" type="service_closure" id="app.repository.subscription" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Repository\RepositoryInterface $subscriptionRepository" type="service_closure" id="app.repository.subscription" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository $subscriptionRepository" type="service_closure" id="app.repository.subscription" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityRepository $subscriptionRepository" type="service_closure" id="app.repository.subscription" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\FactoryInterface $subscriptionFactory" type="service_closure" id="App\Subscription\Factory\SubscriptionFactory" on-invalid="ignore_uninitialized"/>
        <argument key="Sylius\Component\Resource\Factory\Factory $subscriptionFactory" type="service_closure" id="App\Subscription\Factory\SubscriptionFactory" on-invalid="ignore_uninitialized"/>
        <argument key="Pagerfanta\RouteGenerator\RouteGeneratorFactoryInterface" type="service_closure" id="pagerfanta.route_generator_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Pagerfanta\View\ViewFactory" type="service_closure" id="pagerfanta.view_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Pagerfanta\View\ViewFactoryInterface" type="service_closure" id="pagerfanta.view_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Twig_Environment" type="service_closure" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="Twig\Environment" type="service_closure" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="FOS\RestBundle\View\ViewHandlerInterface" type="service_closure" id="fos_rest.view_handler.default" on-invalid="ignore_uninitialized"/>
        <argument key="FOS\RestBundle\Request\ParamFetcherInterface" type="service_closure" id="fos_rest.request.param_fetcher" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.cache" type="service_closure" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.naming_strategy" type="service_closure" id="jms_serializer.serialized_name_annotation_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.object_constructor" type="service_closure" id="jms_serializer.doctrine_object_constructor" on-invalid="ignore_uninitialized"/>
        <argument key="JMS\Serializer\SerializerInterface" type="service_closure" id="jms_serializer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="JMS\Serializer\ArrayTransformerInterface" type="service_closure" id="jms_serializer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.accessor_strategy" type="service_closure" id="jms_serializer.accessor_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="JMS\Serializer\ContextFactory\SerializationContextFactoryInterface" type="service_closure" id="jms_serializer.configured_serialization_context_factory" on-invalid="ignore_uninitialized"/>
        <argument key="JMS\Serializer\ContextFactory\DeserializationContextFactoryInterface" type="service_closure" id="jms_serializer.configured_deserialization_context_factory" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.event_dispatcher" type="service_closure" id="jms_serializer.traceable_event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.cache" type="service_closure" id="hateoas.configuration.metadata.cache.file_cache" on-invalid="ignore_uninitialized"/>
        <argument key="fidry_alice_data_fixtures.doctrine.loader" type="service_closure" id="fidry_alice_data_fixtures.doctrine.purger_loader" on-invalid="ignore_uninitialized"/>
        <argument key="fidry_alice_data_fixtures.persistence.purger.doctrine.orm_purger" type="service_closure" id="fidry_alice_data_fixtures.persistence.doctrine.purger.purger_factory" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture_bag" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.simple_fixture_bag_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.tolerant_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.specs" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.specs.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor.legacy_constructor_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.arguments" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.arguments.simple_arguments_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.value" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.value.unique_value_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.property" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.property.simple_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.simple_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.flag_parser" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.element" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser.token_parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.registry" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.lexer" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.lexer.empty_value_lexer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.expression_language.parser" type="service_closure" id="nelmio_alice.fixture_builder.expression_language.parser.function_fixture_reference_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder" type="service_closure" id="nelmio_alice.fixture_builder.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.fixture_builder.denormalizer.parameter_bag" type="service_closure" id="nelmio_alice.fixture_builder.denormalizer.parameter.simple_parameter_bag_denormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.file_locator" type="service_closure" id="nelmio_alice.file_locator.default" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.property_accessor" type="service_closure" id="nelmio_alice.property_accessor.std" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.parameter_bag" type="service_closure" id="nelmio_alice.generator.resolver.parameter_bag.remove_conflicting_parameters" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.fixture_bag" type="service_closure" id="nelmio_alice.generator.resolver.fixture_bag.template_bag" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value" type="service_closure" id="nelmio_alice.generator.resolver.value.registry" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.value.property_accessor" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.resolver.fixture_set" type="service_closure" id="nelmio_alice.generator.resolver.fixture_set.remove_conflicting_objects" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.caller" type="service_closure" id="nelmio_alice.generator.caller.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.instantiator" type="service_closure" id="nelmio_alice.generator.instantiator.existing_instance" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.hydrator" type="service_closure" id="nelmio_alice.generator.hydrator.simple" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.hydrator.property" type="service_closure" id="nelmio_alice.generator.hydrator.property.symfony_property_access" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator" type="service_closure" id="nelmio_alice.generator.double_pass" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.generator.object_generator" type="service_closure" id="nelmio_alice.generator.object_generator.complete" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_alice.file_parser" type="service_closure" id="nelmio_alice.file_parser.runtime_cache" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Container\ContainerInterface" type="service_closure" id="service_container" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.grid.renderer" type="service_closure" id="sylius.custom_grid_renderer.twig" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.grid.bulk_action_renderer" type="service_closure" id="sylius.custom_bulk_action_grid_renderer.twig" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.grid.data_extractor" type="service_closure" id="sylius.grid.data_extractor.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.filesystem" type="service_closure" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.controller_locator" type="service_closure" id=".service_locator.HBdvAhp" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.id_generator_locator" type="service_closure" id=".service_locator.KLVvNIq" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader" type="service_closure" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.serializer" type="service_closure" id="fos_rest.serializer.jms" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.pagerfanta" type="service_closure" id="pagerfanta.twig_extension" on-invalid="ignore_uninitialized"/>
        <argument key="white_october_pagerfanta.view_factory" type="service_closure" id="pagerfanta.view_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface" type="service_closure" id="Psr\Log\NullLogger" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.request_handler" type="service_closure" id="sylius.form.type_extension.form.request_handler" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.resources_resolver" type="service_closure" id="sylius.resource_controller.resources_resolver.grid_aware" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_collection.factory.doctrine.inner" type="service_closure" id="sylius.resource_metadata_collection.factory.templates_dir" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_collection.factory.redirect.inner" type="service_closure" id="sylius.resource_metadata_collection.factory.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.factory.operation_route_path_factory.default" type="service_closure" id="sylius.routing.factory.operation_route_path_factory.create" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.decision_manager" type="service_closure" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.authenticator.main" type="service_closure" id="debug.security.firewall.authenticator.main" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.context.initiator.request_context" type="service_closure" id="sylius.context.initiator.legacy_request_context" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_collection.factory.resource_factory.inner" type="service_closure" id="sylius.resource_metadata_collection.factory.redirect" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_collection.factory.event_short_name.inner" type="service_closure" id="sylius.resource_metadata_collection.factory.resource_factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_collection.factory.attributes" type="service_closure" id="sylius.resource_metadata_collection.factory.templates_dir" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.twig.context.factory" type="service_closure" id="sylius.twig.context.factory.legacy" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.twig.context.factory.legacy.inner" type="service_closure" id="sylius.twig.context.factory.request" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_metadata_driver" type="service_closure" id=".doctrine.orm.default_metadata_driver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.container_repository_factory" type="service_closure" id="sylius.doctrine.orm.container_repository_factory" on-invalid="ignore_uninitialized"/>
        <argument key="twig.error_renderer.html.inner" type="service_closure" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.doctrine_type_driver.inner" type="service_closure" id="jms_serializer.metadata.chain_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.typed_properties_driver.inner" type="service_closure" id="jms_serializer.metadata.doctrine_type_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.doctrine_object_constructor.inner" type="service_closure" id="jms_serializer.unserialize_object_constructor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.form_error_handler" type="service_closure" id="fos_rest.serializer.form_error_handler" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_metadata_collection.factory.cached.inner" type="service_closure" id="sylius.resource_metadata_collection.factory.event_short_name" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.factory.operation_route_path_factory.show.inner" type="service_closure" id="sylius.routing.factory.operation_route_path_factory.collection" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.factory.operation_route_path_factory.delete.inner" type="service_closure" id="sylius.routing.factory.operation_route_path_factory.show" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.factory.operation_route_path_factory.bulk_operation.inner" type="service_closure" id="sylius.routing.factory.operation_route_path_factory.delete" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state.provider" type="service_closure" id="sylius.state.provider.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state.processor" type="service_closure" id="sylius.state.processor.event_dispatcher_bulk_aware" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state.processor.bulk_aware" type="service_closure" id="sylius.state.processor.event_dispatcher_bulk_aware" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.factory.operation_route_path_factory.update.inner" type="service_closure" id="sylius.routing.factory.operation_route_path_factory.bulk_operation" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.factory.operation_route_path_factory.create.inner" type="service_closure" id="sylius.routing.factory.operation_route_path_factory.update" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.state.processor.bulk_aware.inner" type="service_closure" id="sylius.state.processor.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata_factory" type="service_closure" id="jms_serializer.traceable_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.handler_registry" type="service_closure" id="jms_serializer.traceable_handler_registry" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.file_locator" type="service_closure" id="jms_serializer.metadata.traceable_file_locator" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.yY.p4P7"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en_US</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.af.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.af.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.ar.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.ar.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.ar.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.ar.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.ar.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.ar.xliff</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.az.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.az.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.az.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.az.xliff</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.be.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.be.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.be.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.be.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.be.yml</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.bg.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.bg.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.bg.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.bg.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.bg.yml</argument>
          </argument>
          <argument key="bs" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.bs.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.bs.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.bs.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.ca.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.ca.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.ca.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.ca.xliff</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.cs.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.cs.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.cs.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.cs.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.cs.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.cs.xliff</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.da.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.da.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.da.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.da.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.da.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.da.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.da.xliff</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.de.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.de.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.de.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.de.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.de.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.de.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.de.xliff</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.el.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.el.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.el.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.el.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.el.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.el.yml</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.en.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.en.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.en.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.en.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.en.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.en.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.en.xliff</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/translations/messages.en.yaml</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.es.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.es.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.es.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.es.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.es.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.es.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.es.xliff</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.et.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.et.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.eu.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.fa.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.fa.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.fa.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.fa.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.fa.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.fa.xliff</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.fi.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.fi.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.fi.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.fi.xliff</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.fr.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.fr.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.fr.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.fr.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.fr.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.fr.xliff</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.gl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.gl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.gl.xliff</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.he.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.he.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.he.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.he.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.he.yml</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.hr.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.hr.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.hr.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.hr.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.hr.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.hr.xliff</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.hu.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.hu.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.hu.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.hu.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.hu.yml</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.hy.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.id.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.id.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.id.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.id.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.id.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.id.yml</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.it.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.it.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.it.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.it.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.it.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.it.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.it.xliff</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.ja.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.ja.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.ja.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.ja.yml</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.lb.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.lt.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.lt.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.lt.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.lt.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.lt.yml</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.lv.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.lv.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.mn.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.mn.xlf</argument>
          </argument>
          <argument key="my" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.my.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.my.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.my.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.nb.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.nl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.nl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.nl.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.nl.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.nl.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.nl.xliff</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.nn.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.no.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.no.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.no.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.no.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.no.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.no.xliff</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.pl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.pl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.pl.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.pl.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.pl.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.pl.xliff</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.pt.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.pt.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.pt.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.pt.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.pt.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.pt.xliff</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.pt_BR.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.pt_BR.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.pt_BR.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.pt_BR.yml</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.ro.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.ro.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.ro.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.ro.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.ro.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.ro.xliff</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.ru.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.ru.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.ru.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.ru.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.ru.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.ru.xliff</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.sk.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.sk.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.sk.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.sk.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.sk.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.sk.xliff</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.sl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.sl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.sl.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.sl.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.sl.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.sl.xliff</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.sq.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.sq.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.sq.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.sq.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.sq.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.sq.yml</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.sr_Cyrl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.sr_Cyrl.xliff</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.sr_Latn.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.sr_Latn.xliff</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.sv.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.sv.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.sv.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.sv.xliff</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.th.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.th.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.th.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.th.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.th.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.th.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.th.xliff</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.tl.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.tr.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.tr.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.tr.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.tr.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.tr.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.tr.xliff</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.uk.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.uk.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.uk.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.uk.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.uk.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.uk.xliff</argument>
          </argument>
          <argument key="ur" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.ur.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.ur.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.ur.xlf</argument>
          </argument>
          <argument key="uz" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.uz.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.uz.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.uz.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.vi.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.zh_CN.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.zh_CN.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.zh_CN.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.zh_CN.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.zh_CN.xliff</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations/security.zh_TW.xlf</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.zh_TW.yml</argument>
          </argument>
          <argument key="de_CH" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.de_CH.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.de_CH.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.de_CH.yml</argument>
          </argument>
          <argument key="sr" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.sr.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.sr.yml</argument>
          </argument>
          <argument key="sr_CS" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/flashes.sr_CS.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/messages.sr_CS.yml</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations/validators.sr_CS.yml</argument>
          </argument>
          <argument key="oc" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.oc.xliff</argument>
          </argument>
          <argument key="sw" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations/pagerfanta.sw.xliff</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/framework-bundle/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-bundle/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/doctrine/doctrine-bundle/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/twig-bundle/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/friendsofsymfony/rest-bundle/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/jms/serializer-bundle/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/willdurand/hateoas-bundle/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/theofidry/alice-data-fixtures/src/Bridge/Symfony/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/nelmio/alice/src/Bridge/Symfony/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/winzou/state-machine-bundle/translations</argument>
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/sylius/grid-bundle/src/Bundle/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/validator/Resources/translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-core/Resources/translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/translations</argument>
            <argument>translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/framework-bundle/translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-bundle/translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/doctrine/doctrine-bundle/translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/twig-bundle/translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/friendsofsymfony/rest-bundle/translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/jms/serializer-bundle/translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/willdurand/hateoas-bundle/translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/theofidry/alice-data-fixtures/src/Bridge/Symfony/translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/nelmio/alice/src/Bridge/Symfony/translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/winzou/state-machine-bundle/translations</argument>
            <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/sylius/grid-bundle/src/Bundle/translations</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en_US</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="Psr\Log\NullLogger"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yaml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.xliff.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xliff"/>
      <argument>xliff</argument>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php_ast" class="Symfony\Component\Translation\Extractor\PhpAstExtractor">
      <tag name="translation.extractor" alias="php"/>
      <argument type="tagged_iterator" tag="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.trans_method" class="Symfony\Component\Translation\Extractor\Visitor\TransMethodVisitor">
      <tag name="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.translatable_message" class="Symfony\Component\Translation\Extractor\Visitor\TranslatableMessageVisitor">
      <tag name="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.constraint" class="Symfony\Component\Translation\Extractor\Visitor\ConstraintVisitor">
      <tag name="translation.extractor.visitor"/>
      <argument type="collection">
        <argument>All</argument>
        <argument>AtLeastOneOf</argument>
        <argument>Bic</argument>
        <argument>Blank</argument>
        <argument>Callback</argument>
        <argument>CardScheme</argument>
        <argument>Choice</argument>
        <argument>Cidr</argument>
        <argument>Collection</argument>
        <argument>Compound</argument>
        <argument>Count</argument>
        <argument>Country</argument>
        <argument>CssColor</argument>
        <argument>Currency</argument>
        <argument>DateTime</argument>
        <argument>Date</argument>
        <argument>DivisibleBy</argument>
        <argument>Email</argument>
        <argument>EqualTo</argument>
        <argument>ExpressionSyntax</argument>
        <argument>Expression</argument>
        <argument>File</argument>
        <argument>GreaterThanOrEqual</argument>
        <argument>GreaterThan</argument>
        <argument>Hostname</argument>
        <argument>Iban</argument>
        <argument>IdenticalTo</argument>
        <argument>Image</argument>
        <argument>Ip</argument>
        <argument>IsFalse</argument>
        <argument>IsNull</argument>
        <argument>IsTrue</argument>
        <argument>Isbn</argument>
        <argument>Isin</argument>
        <argument>Issn</argument>
        <argument>Json</argument>
        <argument>Language</argument>
        <argument>Length</argument>
        <argument>LessThanOrEqual</argument>
        <argument>LessThan</argument>
        <argument>Locale</argument>
        <argument>Luhn</argument>
        <argument>NoSuspiciousCharacters</argument>
        <argument>NotBlank</argument>
        <argument>NotCompromisedPassword</argument>
        <argument>NotEqualTo</argument>
        <argument>NotIdenticalTo</argument>
        <argument>NotNull</argument>
        <argument>PasswordStrength</argument>
        <argument>Range</argument>
        <argument>Regex</argument>
        <argument>Sequentially</argument>
        <argument>Time</argument>
        <argument>Timezone</argument>
        <argument>Type</argument>
        <argument>Ulid</argument>
        <argument>Unique</argument>
        <argument>Url</argument>
        <argument>Uuid</argument>
        <argument>Valid</argument>
        <argument>When</argument>
        <argument>Expression</argument>
        <argument>Email</argument>
        <argument>NotCompromisedPassword</argument>
        <argument>When</argument>
        <argument>NoSuspiciousCharacters</argument>
        <argument>UserPassword</argument>
        <argument>UniqueEntity</argument>
      </argument>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php_ast"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>xliff</argument>
        <argument type="service" id="translation.dumper.xliff.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.fuYM_Z..translation.warmer"/>
    </service>
    <service id="translation.locale_switcher" class="Symfony\Component\Translation\LocaleSwitcher">
      <tag name="kernel.reset" method="reset"/>
      <tag name="kernel.locale_aware"/>
      <argument>en_US</argument>
      <argument type="tagged_iterator" tag="kernel.locale_aware" exclude="translation.locale_switcher"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="translation.provider_collection" class="Symfony\Component\Translation\Provider\TranslationProviderCollection">
      <argument type="collection"/>
      <factory service="translation.provider_collection_factory" method="fromConfig"/>
    </service>
    <service id="translation.provider_collection_factory" class="Symfony\Component\Translation\Provider\TranslationProviderCollectionFactory">
      <argument type="tagged_iterator" tag="translation.provider_factory"/>
      <argument type="collection"/>
    </service>
    <service id="translation.provider_factory.null" class="Symfony\Component\Translation\Provider\NullProviderFactory">
      <tag name="translation.provider_factory"/>
    </service>
    <service id="workflow.abstract" class="Symfony\Component\Workflow\Workflow" abstract="true">
      <argument type="abstract">workflow definition</argument>
      <argument type="abstract">marking store</argument>
      <argument type="service" id="event_dispatcher" on-invalid="ignore"/>
      <argument type="abstract">workflow name</argument>
      <argument type="abstract">events to dispatch</argument>
    </service>
    <service id="state_machine.abstract" class="Symfony\Component\Workflow\StateMachine" abstract="true">
      <argument type="abstract">workflow definition</argument>
      <argument type="abstract">marking store</argument>
      <argument type="service" id="event_dispatcher" on-invalid="ignore"/>
      <argument type="abstract">workflow name</argument>
      <argument type="abstract">events to dispatch</argument>
    </service>
    <service id="workflow.marking_store.method" class="Symfony\Component\Workflow\MarkingStore\MethodMarkingStore" abstract="true"/>
    <service id=".workflow.registry" class="Symfony\Component\Workflow\Registry">
      <call method="addWorkflow">
        <argument type="service" id="state_machine.pull_request"/>
        <argument type="service">
          <service class="Symfony\Component\Workflow\SupportStrategy\InstanceOfSupportStrategy">
            <argument>App\Entity\PullRequest</argument>
          </service>
        </argument>
      </call>
      <call method="addWorkflow">
        <argument type="service" id="workflow.blog_publishing"/>
        <argument type="service">
          <service class="Symfony\Component\Workflow\SupportStrategy\InstanceOfSupportStrategy">
            <argument>App\Entity\BlogPost</argument>
          </service>
        </argument>
      </call>
      <call method="addWorkflow">
        <argument type="service" id="state_machine.subscription"/>
        <argument type="service">
          <service class="Symfony\Component\Workflow\SupportStrategy\InstanceOfSupportStrategy">
            <argument>App\Subscription\Entity\Subscription</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="workflow.security.expression_language" class="Symfony\Component\Workflow\EventListener\ExpressionLanguage"/>
    <service id=".state_machine.pull_request.transition.0" class="Symfony\Component\Workflow\Transition">
      <argument>submit</argument>
      <argument>start</argument>
      <argument>test</argument>
    </service>
    <service id=".state_machine.pull_request.transition.1" class="Symfony\Component\Workflow\Transition">
      <argument>update</argument>
      <argument>coding</argument>
      <argument>test</argument>
    </service>
    <service id=".state_machine.pull_request.transition.2" class="Symfony\Component\Workflow\Transition">
      <argument>update</argument>
      <argument>test</argument>
      <argument>test</argument>
    </service>
    <service id=".state_machine.pull_request.transition.3" class="Symfony\Component\Workflow\Transition">
      <argument>update</argument>
      <argument>review</argument>
      <argument>test</argument>
    </service>
    <service id=".state_machine.pull_request.transition.4" class="Symfony\Component\Workflow\Transition">
      <argument>wait_for_review</argument>
      <argument>test</argument>
      <argument>review</argument>
    </service>
    <service id=".state_machine.pull_request.transition.5" class="Symfony\Component\Workflow\Transition">
      <argument>request_change</argument>
      <argument>review</argument>
      <argument>coding</argument>
    </service>
    <service id=".state_machine.pull_request.transition.6" class="Symfony\Component\Workflow\Transition">
      <argument>accept</argument>
      <argument>review</argument>
      <argument>merged</argument>
    </service>
    <service id=".state_machine.pull_request.transition.7" class="Symfony\Component\Workflow\Transition">
      <argument>reject</argument>
      <argument>review</argument>
      <argument>closed</argument>
    </service>
    <service id=".state_machine.pull_request.transition.8" class="Symfony\Component\Workflow\Transition">
      <argument>reopen</argument>
      <argument>closed</argument>
      <argument>review</argument>
    </service>
    <service id="state_machine.pull_request.metadata_store" class="Symfony\Component\Workflow\Metadata\InMemoryMetadataStore">
      <argument type="collection"/>
      <argument type="collection"/>
      <argument type="service">
        <service class="SplObjectStorage"/>
      </argument>
    </service>
    <service id="state_machine.pull_request" class="Symfony\Component\Workflow\StateMachine">
      <tag name="pull_request">workflow</tag>
      <tag name="pull_request">workflow.state_machine</tag>
      <argument type="service" id="state_machine.pull_request.definition"/>
      <argument type="service">
        <service class="Symfony\Component\Workflow\MarkingStore\MethodMarkingStore">
          <argument>true</argument>
          <argument>currentPlace</argument>
        </service>
      </argument>
      <argument type="service" id="event_dispatcher" on-invalid="ignore"/>
      <argument>pull_request</argument>
      <argument>null</argument>
    </service>
    <service id="state_machine.pull_request.definition" class="Symfony\Component\Workflow\Definition">
      <argument type="collection">
        <argument>start</argument>
        <argument>coding</argument>
        <argument>test</argument>
        <argument>review</argument>
        <argument>merged</argument>
        <argument>closed</argument>
      </argument>
      <argument type="collection">
        <argument type="service" id=".state_machine.pull_request.transition.0"/>
        <argument type="service" id=".state_machine.pull_request.transition.1"/>
        <argument type="service" id=".state_machine.pull_request.transition.2"/>
        <argument type="service" id=".state_machine.pull_request.transition.3"/>
        <argument type="service" id=".state_machine.pull_request.transition.4"/>
        <argument type="service" id=".state_machine.pull_request.transition.5"/>
        <argument type="service" id=".state_machine.pull_request.transition.6"/>
        <argument type="service" id=".state_machine.pull_request.transition.7"/>
        <argument type="service" id=".state_machine.pull_request.transition.8"/>
      </argument>
      <argument type="collection">
        <argument>start</argument>
      </argument>
      <argument type="service" id="state_machine.pull_request.metadata_store"/>
    </service>
    <service id=".workflow.blog_publishing.transition.0" class="Symfony\Component\Workflow\Transition">
      <argument>to_review</argument>
      <argument type="collection">
        <argument>draft</argument>
      </argument>
      <argument type="collection">
        <argument>reviewed</argument>
      </argument>
    </service>
    <service id=".workflow.blog_publishing.transition.1" class="Symfony\Component\Workflow\Transition">
      <argument>publish</argument>
      <argument type="collection">
        <argument>reviewed</argument>
      </argument>
      <argument type="collection">
        <argument>published</argument>
      </argument>
    </service>
    <service id=".workflow.blog_publishing.transition.2" class="Symfony\Component\Workflow\Transition">
      <argument>reject</argument>
      <argument type="collection">
        <argument>reviewed</argument>
      </argument>
      <argument type="collection">
        <argument>rejected</argument>
      </argument>
    </service>
    <service id="workflow.blog_publishing.metadata_store" class="Symfony\Component\Workflow\Metadata\InMemoryMetadataStore">
      <argument type="collection"/>
      <argument type="collection"/>
      <argument type="service">
        <service class="SplObjectStorage"/>
      </argument>
    </service>
    <service id="workflow.blog_publishing" class="Symfony\Component\Workflow\Workflow">
      <tag name="blog_publishing">workflow</tag>
      <tag name="blog_publishing">workflow.workflow</tag>
      <argument type="service" id="workflow.blog_publishing.definition"/>
      <argument type="service">
        <service class="Symfony\Component\Workflow\MarkingStore\MethodMarkingStore">
          <argument>false</argument>
          <argument>currentPlace</argument>
        </service>
      </argument>
      <argument type="service" id="event_dispatcher" on-invalid="ignore"/>
      <argument>blog_publishing</argument>
      <argument>null</argument>
    </service>
    <service id="workflow.blog_publishing.definition" class="Symfony\Component\Workflow\Definition">
      <argument type="collection">
        <argument>draft</argument>
        <argument>reviewed</argument>
        <argument>rejected</argument>
        <argument>published</argument>
      </argument>
      <argument type="collection">
        <argument type="service" id=".workflow.blog_publishing.transition.0"/>
        <argument type="service" id=".workflow.blog_publishing.transition.1"/>
        <argument type="service" id=".workflow.blog_publishing.transition.2"/>
      </argument>
      <argument type="collection">
        <argument>draft</argument>
      </argument>
      <argument type="service" id="workflow.blog_publishing.metadata_store"/>
    </service>
    <service id=".state_machine.subscription.transition.0" class="Symfony\Component\Workflow\Transition">
      <argument>accept</argument>
      <argument>new</argument>
      <argument>accepted</argument>
    </service>
    <service id=".state_machine.subscription.transition.1" class="Symfony\Component\Workflow\Transition">
      <argument>reject</argument>
      <argument>new</argument>
      <argument>rejected</argument>
    </service>
    <service id="state_machine.subscription.metadata_store" class="Symfony\Component\Workflow\Metadata\InMemoryMetadataStore">
      <argument type="collection"/>
      <argument type="collection"/>
      <argument type="service">
        <service class="SplObjectStorage"/>
      </argument>
    </service>
    <service id="state_machine.subscription" class="Symfony\Component\Workflow\StateMachine">
      <tag name="subscription">workflow</tag>
      <tag name="subscription">workflow.state_machine</tag>
      <argument type="service" id="state_machine.subscription.definition"/>
      <argument type="service">
        <service class="Symfony\Component\Workflow\MarkingStore\MethodMarkingStore">
          <argument>true</argument>
          <argument>state</argument>
        </service>
      </argument>
      <argument type="service" id="event_dispatcher" on-invalid="ignore"/>
      <argument>subscription</argument>
      <argument>null</argument>
    </service>
    <service id="state_machine.subscription.definition" class="Symfony\Component\Workflow\Definition">
      <argument type="collection">
        <argument>new</argument>
        <argument>accepted</argument>
        <argument>rejected</argument>
      </argument>
      <argument type="collection">
        <argument type="service" id=".state_machine.subscription.transition.0"/>
        <argument type="service" id=".state_machine.subscription.transition.1"/>
      </argument>
      <argument type="collection">
        <argument>new</argument>
      </argument>
      <argument type="service" id="state_machine.subscription.metadata_store"/>
    </service>
    <service id="debug.error_handler_configurator" class="Symfony\Component\HttpKernel\Debug\ErrorHandlerConfigurator" public="true">
      <tag name="monolog.logger" channel="php"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter">
      <argument>%env(default::SYMFONY_IDE)%</argument>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="Sylius\Bundle\ResourceBundle\Routing\ResourceLoader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.psr4"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator.17rSCVq"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.psr4" class="Symfony\Component\Routing\Loader\Psr4DirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.PvoQzFT.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <argument>en_US</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="addExpressionLanguageProvider">
        <argument type="service" id="router.expression_language_provider"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" constructor="fromUri">
      <argument></argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
      <call method="setParameter">
        <argument>_functions</argument>
        <argument type="service" id="router.expression_language_provider" on-invalid="ignore"/>
      </call>
    </service>
    <service id="router.expression_language_provider" class="Symfony\Component\Routing\Matcher\ExpressionLanguageProvider">
      <tag name="routing.expression_language_provider"/>
      <argument type="service" id=".service_locator.Kl0E_Fe"/>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.cUcW89y.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
    </service>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\PsrCachedReader">
      <tag name="annotations.cached_reader"/>
      <tag name="container.do_not_inline"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service">
        <service class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
      </argument>
      <argument>true</argument>
      <argument type="service_closure" id="annotations.cache_adapter"/>
    </service>
    <service id="annotations.filesystem_cache_adapter" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <argument></argument>
      <argument>0</argument>
      <argument type="abstract">Cache-Directory</argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache_adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" constructor="create">
      <tag name="container.hot_path"/>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>3</argument>
      <argument>2</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/config/secrets/%env(default:kernel.environment:APP_RUNTIME_ENV)%</argument>
      <argument type="service" id="secrets.decryption_key" on-invalid="ignore"/>
    </service>
    <service id="secrets.decryption_key" class="Symfony\Component\String\LazyString" constructor="fromCallable">
      <argument type="service" id="container.getenv"/>
      <argument>base64:default::SYMFONY_DECRYPTION_SECRET</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/.env.test.local</argument>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer">
      <argument type="collection">
        <argument type="service" id="serializer.denormalizer.unwrapping"/>
        <argument type="service" id="pagerfanta.serializer.normalizer"/>
        <argument type="service" id="fos_rest.serializer.form_error_normalizer"/>
        <argument type="service" id="serializer.normalizer.flatten_exception"/>
        <argument type="service" id="serializer.normalizer.problem"/>
        <argument type="service" id="serializer.normalizer.uid"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.datetimezone"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.form_error"/>
        <argument type="service" id="serializer.normalizer.backed_enum"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" autowire="true">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument>null</argument>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer">
      <tag name="serializer.normalizer" priority="-950"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument key="0">true</argument>
      <argument key="translator" type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="serializer.denormalizer.unwrapping" class="Symfony\Component\Serializer\Normalizer\UnwrappingDenormalizer">
      <tag name="serializer.normalizer" priority="1000"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="serializer.normalizer.uid" class="Symfony\Component\Serializer\Normalizer\UidNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
    </service>
    <service id="serializer.normalizer.form_error" class="Symfony\Component\Serializer\Normalizer\FormErrorNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="serializer.normalizer.property" class="Symfony\Component\Serializer\Normalizer\PropertyNormalizer">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader">
            <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory">
      <argument type="service" id="serializer.mapping.chain_loader"/>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader">
            <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
          </service>
        </argument>
      </argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface">
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder">
      <tag name="serializer.encoder"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder">
      <tag name="serializer.encoder"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer">
      <argument type="service" id="serializer"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
        </service>
      </argument>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="serializer.normalizer.backed_enum" class="Symfony\Component\Serializer\Normalizer\BackedEnumNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator"/>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" constructor="createConnection">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" constructor="createConnection">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="session.factory" class="Symfony\Component\HttpFoundation\Session\SessionFactory">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="session.storage.factory.mock_file"/>
      <argument type="collection">
        <argument type="service" id="test.session.listener"/>
        <argument>onSessionUsage</argument>
      </argument>
    </service>
    <service id="session.storage.factory.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorageFactory">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>false</argument>
    </service>
    <service id="session.storage.factory.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorageFactory">
      <argument type="service" id="session.handler.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>false</argument>
    </service>
    <service id="session.storage.factory.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorageFactory">
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
    </service>
    <service id="session.handler.native" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="SessionHandler"/>
      </argument>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
          <argument>null</argument>
        </service>
      </argument>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler">
      <argument type="abstract">A string or a connection object</argument>
      <argument type="collection"/>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session.marshaller" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\IdentityMarshaller"/>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\ResolvedFormTypeFactory"/>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension">
      <argument type="service" id=".service_locator.BV_ZfYz"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="form.type_extension.form.password_hasher"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\PasswordType" type="iterator">
          <argument type="service" id="form.type_extension.password.password_hasher"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\CollectionType" type="iterator">
          <argument type="service" id="sylius.form.extension.type.collection"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <tag name="form.type"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type.color" class="Symfony\Component\Form\Extension\Core\Type\ColorType">
      <tag name="form.type"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="sylius.form.type_extension.form.request_handler"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="validator"/>
      <argument>false</argument>
      <argument type="service" id="twig.form.renderer" on-invalid="ignore"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default" on-invalid="ignore"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="addYamlMappings">
        <argument type="collection">
          <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/config/validator/validation.yaml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument>true</argument>
      </call>
      <call method="setDoctrineAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" constructor="create">
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/validation.php</argument>
      <argument type="service" id="cache.validator"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory">
      <argument type="service" id=".service_locator.fGvEh3."/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionLanguageSyntaxValidator" class="Symfony\Component\Validator\Constraints\ExpressionLanguageSyntaxValidator" abstract="true">
      <tag name="container.excluded" source="in &quot;config/validator.php&quot;"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\AllValidator" class="Symfony\Component\Validator\Constraints\AllValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\AtLeastOneOfValidator" class="Symfony\Component\Validator\Constraints\AtLeastOneOfValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\BicValidator" class="Symfony\Component\Validator\Constraints\BicValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\BlankValidator" class="Symfony\Component\Validator\Constraints\BlankValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CallbackValidator" class="Symfony\Component\Validator\Constraints\CallbackValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CardSchemeValidator" class="Symfony\Component\Validator\Constraints\CardSchemeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ChoiceValidator" class="Symfony\Component\Validator\Constraints\ChoiceValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CidrValidator" class="Symfony\Component\Validator\Constraints\CidrValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CollectionValidator" class="Symfony\Component\Validator\Constraints\CollectionValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CompoundValidator" class="Symfony\Component\Validator\Constraints\CompoundValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CountValidator" class="Symfony\Component\Validator\Constraints\CountValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CountryValidator" class="Symfony\Component\Validator\Constraints\CountryValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CssColorValidator" class="Symfony\Component\Validator\Constraints\CssColorValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CurrencyValidator" class="Symfony\Component\Validator\Constraints\CurrencyValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DateTimeValidator" class="Symfony\Component\Validator\Constraints\DateTimeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DateValidator" class="Symfony\Component\Validator\Constraints\DateValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DivisibleByValidator" class="Symfony\Component\Validator\Constraints\DivisibleByValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\EmailValidator" class="Symfony\Component\Validator\Constraints\EmailValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\EqualToValidator" class="Symfony\Component\Validator\Constraints\EqualToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionSyntaxValidator" class="Symfony\Component\Validator\Constraints\ExpressionSyntaxValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionValidator" class="Symfony\Component\Validator\Constraints\ExpressionValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\FileValidator" class="Symfony\Component\Validator\Constraints\FileValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\GreaterThanOrEqualValidator" class="Symfony\Component\Validator\Constraints\GreaterThanOrEqualValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\GreaterThanValidator" class="Symfony\Component\Validator\Constraints\GreaterThanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\HostnameValidator" class="Symfony\Component\Validator\Constraints\HostnameValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IbanValidator" class="Symfony\Component\Validator\Constraints\IbanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IdenticalToValidator" class="Symfony\Component\Validator\Constraints\IdenticalToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ImageValidator" class="Symfony\Component\Validator\Constraints\ImageValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IpValidator" class="Symfony\Component\Validator\Constraints\IpValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsFalseValidator" class="Symfony\Component\Validator\Constraints\IsFalseValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsNullValidator" class="Symfony\Component\Validator\Constraints\IsNullValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsTrueValidator" class="Symfony\Component\Validator\Constraints\IsTrueValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsbnValidator" class="Symfony\Component\Validator\Constraints\IsbnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsinValidator" class="Symfony\Component\Validator\Constraints\IsinValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IssnValidator" class="Symfony\Component\Validator\Constraints\IssnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\JsonValidator" class="Symfony\Component\Validator\Constraints\JsonValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LanguageValidator" class="Symfony\Component\Validator\Constraints\LanguageValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LengthValidator" class="Symfony\Component\Validator\Constraints\LengthValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LessThanOrEqualValidator" class="Symfony\Component\Validator\Constraints\LessThanOrEqualValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LessThanValidator" class="Symfony\Component\Validator\Constraints\LessThanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LocaleValidator" class="Symfony\Component\Validator\Constraints\LocaleValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LuhnValidator" class="Symfony\Component\Validator\Constraints\LuhnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" class="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotBlankValidator" class="Symfony\Component\Validator\Constraints\NotBlankValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotEqualToValidator" class="Symfony\Component\Validator\Constraints\NotEqualToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotIdenticalToValidator" class="Symfony\Component\Validator\Constraints\NotIdenticalToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotNullValidator" class="Symfony\Component\Validator\Constraints\NotNullValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\PasswordStrengthValidator" class="Symfony\Component\Validator\Constraints\PasswordStrengthValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\RangeValidator" class="Symfony\Component\Validator\Constraints\RangeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\RegexValidator" class="Symfony\Component\Validator\Constraints\RegexValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\SequentiallyValidator" class="Symfony\Component\Validator\Constraints\SequentiallyValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TimeValidator" class="Symfony\Component\Validator\Constraints\TimeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TimezoneValidator" class="Symfony\Component\Validator\Constraints\TimezoneValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TypeValidator" class="Symfony\Component\Validator\Constraints\TypeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UlidValidator" class="Symfony\Component\Validator\Constraints\UlidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UniqueValidator" class="Symfony\Component\Validator\Constraints\UniqueValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UrlValidator" class="Symfony\Component\Validator\Constraints\UrlValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UuidValidator" class="Symfony\Component\Validator\Constraints\UuidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ValidValidator" class="Symfony\Component\Validator\Constraints\ValidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\WhenValidator" class="Symfony\Component\Validator\Constraints\WhenValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.validator_expression_language" on-invalid="null"/>
    </service>
    <service id="cache.validator_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>xlEH8NTiF2</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/system</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator"/>
      <argument>loose</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator">
      <tag name="validator.constraint_validator"/>
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="validator.when" class="Symfony\Component\Validator\Constraints\WhenValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.no_suspicious_characters" class="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator"/>
      <argument type="collection"/>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="messenger.senders_locator" class="Symfony\Component\Messenger\Transport\Sender\SendersLocator">
      <argument type="collection">
        <argument key="App\Shared\Application\Query\QueryInterface" type="collection">
          <argument>sync</argument>
        </argument>
        <argument key="App\Shared\Application\Command\CommandInterface" type="collection">
          <argument>sync</argument>
        </argument>
      </argument>
      <argument type="service" id=".service_locator.QXBcHvi"/>
    </service>
    <service id="messenger.middleware.send_message" class="Symfony\Component\Messenger\Middleware\SendMessageMiddleware" abstract="true">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="messenger.senders_locator"/>
      <argument type="service" id="event_dispatcher"/>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.transport.symfony_serializer" class="Symfony\Component\Messenger\Transport\Serialization\Serializer">
      <argument type="service" id="serializer"/>
      <argument>json</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.normalizer.flatten_exception" class="Symfony\Component\Messenger\Transport\Serialization\Normalizer\FlattenExceptionNormalizer">
      <tag name="serializer.normalizer" priority="-880"/>
    </service>
    <service id="messenger.transport.native_php_serializer" class="Symfony\Component\Messenger\Transport\Serialization\PhpSerializer"/>
    <service id="messenger.middleware.handle_message" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware" abstract="true">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="abstract">bus handler resolver</argument>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.middleware.add_bus_name_stamp_middleware" class="Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware" abstract="true"/>
    <service id="messenger.middleware.dispatch_after_current_bus" class="Symfony\Component\Messenger\Middleware\DispatchAfterCurrentBusMiddleware"/>
    <service id="messenger.middleware.validation" class="Symfony\Component\Messenger\Middleware\ValidationMiddleware">
      <argument type="service" id="validator"/>
    </service>
    <service id="messenger.middleware.reject_redelivered_message_middleware" class="Symfony\Component\Messenger\Middleware\RejectRedeliveredMessageMiddleware"/>
    <service id="messenger.middleware.failed_message_processing_middleware" class="Symfony\Component\Messenger\Middleware\FailedMessageProcessingMiddleware"/>
    <service id="messenger.middleware.traceable" class="Symfony\Component\Messenger\Middleware\TraceableMiddleware" abstract="true">
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="messenger.middleware.router_context" class="Symfony\Component\Messenger\Middleware\RouterContextMiddleware">
      <argument type="service" id="router.default"/>
    </service>
    <service id="messenger.receiver_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="messenger.transport.sync" type="service_closure" id="messenger.transport.sync"/>
        <argument key="sync" type="service_closure" id="messenger.transport.sync"/>
      </argument>
    </service>
    <service id="messenger.transport_factory" class="Symfony\Component\Messenger\Transport\TransportFactory">
      <argument type="tagged_iterator" tag="messenger.transport_factory"/>
    </service>
    <service id="messenger.transport.amqp.factory" class="Symfony\Component\Messenger\Bridge\Amqp\Transport\AmqpTransportFactory"/>
    <service id="messenger.transport.redis.factory" class="Symfony\Component\Messenger\Bridge\Redis\Transport\RedisTransportFactory"/>
    <service id="messenger.transport.sync.factory" class="Symfony\Component\Messenger\Transport\Sync\SyncTransportFactory">
      <tag name="messenger.transport_factory"/>
      <argument type="service" id="messenger.routable_message_bus"/>
    </service>
    <service id="messenger.transport.in_memory.factory" class="Symfony\Component\Messenger\Transport\InMemory\InMemoryTransportFactory">
      <tag name="messenger.transport_factory"/>
      <tag name="kernel.reset" method="reset"/>
    </service>
    <service id="messenger.transport.sqs.factory" class="Symfony\Component\Messenger\Bridge\AmazonSqs\Transport\AmazonSqsTransportFactory">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
    </service>
    <service id="messenger.transport.beanstalkd.factory" class="Symfony\Component\Messenger\Bridge\Beanstalkd\Transport\BeanstalkdTransportFactory"/>
    <service id="messenger.retry_strategy_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="sync" type="service_closure" id="messenger.retry.multiplier_retry_strategy.sync"/>
      </argument>
    </service>
    <service id="messenger.retry.abstract_multiplier_retry_strategy" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy" abstract="true">
      <argument type="abstract">max retries</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
    </service>
    <service id="messenger.retry.send_failed_message_for_retry_listener" class="Symfony\Component\Messenger\EventListener\SendFailedMessageForRetryListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id=".service_locator.QXBcHvi"/>
      <argument type="service" id="messenger.retry_strategy_locator"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <argument type="service" id="event_dispatcher"/>
    </service>
    <service id="messenger.failure.add_error_details_stamp_listener" class="Symfony\Component\Messenger\EventListener\AddErrorDetailsStampListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.listener.dispatch_pcntl_signal_listener" class="Symfony\Component\Messenger\EventListener\DispatchPcntlSignalListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.listener.stop_worker_on_restart_signal_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnRestartSignalListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
    </service>
    <service id="messenger.listener.stop_worker_signals_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnSignalsListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="messenger"/>
      <argument>null</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
    </service>
    <service id="messenger.listener.stop_worker_on_stop_exception_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnCustomStopExceptionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.listener.reset_services" class="Symfony\Component\Messenger\EventListener\ResetServicesListener">
      <argument type="service" id="services_resetter"/>
    </service>
    <service id="messenger.routable_message_bus" class="Symfony\Component\Messenger\RoutableMessageBus">
      <argument type="service" id=".service_locator.jIERMQW"/>
      <argument type="service" id="command.bus"/>
    </service>
    <service id="messenger.redispatch_message_handler" class="Symfony\Component\Messenger\Handler\RedispatchMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="command.bus"/>
    </service>
    <service id="command.bus" class="Symfony\Component\Messenger\MessageBus">
      <tag name="messenger.bus"/>
      <argument type="iterator">
        <argument type="service" id="command.bus.middleware.add_bus_name_stamp_middleware"/>
        <argument type="service" id="messenger.middleware.reject_redelivered_message_middleware"/>
        <argument type="service" id="messenger.middleware.dispatch_after_current_bus"/>
        <argument type="service" id="messenger.middleware.failed_message_processing_middleware"/>
        <argument type="service" id="command.bus.middleware.send_message"/>
        <argument type="service" id="command.bus.middleware.handle_message"/>
      </argument>
    </service>
    <service id="query.bus" class="Symfony\Component\Messenger\MessageBus">
      <tag name="messenger.bus"/>
      <argument type="iterator">
        <argument type="service" id="query.bus.middleware.add_bus_name_stamp_middleware"/>
        <argument type="service" id="messenger.middleware.reject_redelivered_message_middleware"/>
        <argument type="service" id="messenger.middleware.dispatch_after_current_bus"/>
        <argument type="service" id="messenger.middleware.failed_message_processing_middleware"/>
        <argument type="service" id="query.bus.middleware.send_message"/>
        <argument type="service" id="query.bus.middleware.handle_message"/>
      </argument>
    </service>
    <service id="messenger.transport.sync" class="Symfony\Component\Messenger\Transport\TransportInterface">
      <tag name="messenger.receiver" alias="sync" is_failure_transport=""/>
      <argument>sync://</argument>
      <argument type="collection">
        <argument key="transport_name">sync</argument>
      </argument>
      <argument type="service" id="messenger.transport.native_php_serializer"/>
      <factory service="messenger.transport_factory" method="createTransport"/>
    </service>
    <service id="messenger.retry.multiplier_retry_strategy.sync" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy">
      <argument>3</argument>
      <argument>1000</argument>
      <argument>2</argument>
      <argument>0</argument>
    </service>
    <service id=".service_locator.QXBcHvi" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="messenger.transport.sync" type="service_closure" id="messenger.transport.sync"/>
        <argument key="sync" type="service_closure" id="messenger.transport.sync"/>
      </argument>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.LcVn9Hr"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.helper" class="Symfony\Bundle\SecurityBundle\Security">
      <argument type="service" id=".service_locator.LrCXAmX"/>
      <argument type="collection">
        <argument key="dev">null</argument>
        <argument key="main">null</argument>
      </argument>
    </service>
    <service id="security.user_value_resolver" class="Symfony\Component\Security\Http\Controller\UserValueResolver">
      <tag priority="120" name="Symfony\Component\Security\Http\Controller\UserValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.security_token_value_resolver" class="Symfony\Component\Security\Http\Controller\SecurityTokenValueResolver">
      <tag priority="120" name="Symfony\Component\Security\Http\Controller\SecurityTokenValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver"/>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>migrate</argument>
      <argument type="service" id="security.csrf.token_storage" on-invalid="ignore"/>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>none</argument>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\InMemoryUserChecker"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage">
      <argument type="service" id="cache.security_expression_language" on-invalid="null"/>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy">
      <argument type="collection"/>
    </service>
    <service id="security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleVoter">
      <tag name="security.voter" priority="245"/>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.impersonate_url_generator" class="Symfony\Component\Security\Http\Impersonate\ImpersonateUrlGenerator">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap">
      <argument type="service" id=".service_locator.zJyh7qS"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.kLbKLHa"/>
        <argument key="security.firewall.map.context.main">null</argument>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" abstract="true">
      <argument type="abstract">name</argument>
      <argument type="abstract">user_checker</argument>
      <argument type="abstract">request_matcher</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" abstract="true">
      <argument type="abstract">firewall</argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" abstract="true">
      <argument type="abstract">security.ldap.ldap</argument>
      <argument type="abstract">base dn</argument>
      <argument type="abstract">search dn</argument>
      <argument type="abstract">search password</argument>
      <argument type="abstract">default_roles</argument>
      <argument type="abstract">uid key</argument>
      <argument type="abstract">filter</argument>
      <argument type="abstract">password_attribute</argument>
      <argument type="abstract">extra_fields (email etc)</argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>null</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>ipcGwAhG36</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/system</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="controller.is_granted_attribute_listener" class="Symfony\Component\Security\Http\EventListener\IsGrantedAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.is_granted_attribute_expression_language" on-invalid="null"/>
    </service>
    <service id="security.is_granted_attribute_expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="null"/>
    </service>
    <service id="cache.security_is_granted_attribute_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>bHXqkiXYHS</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/system</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="security.password_hasher_factory" class="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory">
      <argument type="collection">
        <argument key="Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" type="collection">
          <argument key="algorithm">auto</argument>
          <argument key="cost">4</argument>
          <argument key="time_cost">3</argument>
          <argument key="memory_cost">10</argument>
          <argument key="migrate_from" type="collection"/>
          <argument key="hash_algorithm">sha512</argument>
          <argument key="key_length">40</argument>
          <argument key="ignore_case">false</argument>
          <argument key="encode_as_base64">true</argument>
          <argument key="iterations">5000</argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_hasher" class="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher">
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="form.listener.password_hasher" class="Symfony\Component\Form\Extension\PasswordHasher\EventListener\PasswordHasherListener">
      <argument type="service" id="security.user_password_hasher"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="form.type_extension.form.password_hasher" class="Symfony\Component\Form\Extension\PasswordHasher\Type\FormTypePasswordHasherExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="form.listener.password_hasher"/>
    </service>
    <service id="form.type_extension.password.password_hasher" class="Symfony\Component\Form\Extension\PasswordHasher\Type\PasswordTypePasswordHasherExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\PasswordType"/>
      <argument type="service" id="form.listener.password_hasher"/>
    </service>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap"/>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.users_in_memory"/>
      </argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">event dispatcher</argument>
      <argument type="collection"/>
    </service>
    <service id="security.logout.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener" abstract="true"/>
    <service id="security.logout.listener.clear_site_data" class="Symfony\Component\Security\Http\EventListener\ClearSiteDataLogoutListener" abstract="true"/>
    <service id="security.logout.listener.cookie_clearing" class="Symfony\Component\Security\Http\EventListener\CookieClearingLogoutListener" abstract="true"/>
    <service id="security.logout.listener.default" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">target url</argument>
    </service>
    <service id="security.authentication.listener.abstract" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" abstract="true">
      <argument type="abstract">The custom success handler service</argument>
      <argument type="collection"/>
      <argument type="abstract">Provider-shared Key</argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" abstract="true">
      <argument type="abstract">The custom failure handler service</argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">User Checker</argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="abstract">Target Route</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.event_dispatcher_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection">
        <argument key="main" type="service_closure" id="security.event_dispatcher.main"/>
      </argument>
    </service>
    <service id="security.authenticator.manager" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">authenticators</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="event_dispatcher"/>
      <argument type="abstract">provider key</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="abstract">required badges</argument>
    </service>
    <service id="security.authenticator.managers_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection">
        <argument key="main" type="service_closure" id="security.authenticator.manager.main"/>
      </argument>
    </service>
    <service id="security.user_authenticator" class="Symfony\Bundle\SecurityBundle\Security\UserAuthenticator">
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="security.authenticator.managers_locator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.firewall.authenticator" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener" abstract="true">
      <argument type="abstract">authenticator manager</argument>
    </service>
    <service id="security.listener.check_authenticator_credentials" class="Symfony\Component\Security\Http\EventListener\CheckCredentialsListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.listener.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="1024" method="checkPassport"/>
      <argument type="service" id="security.user.provider.concrete.users_in_memory"/>
    </service>
    <service id="security.listener.user_provider.abstract" class="Symfony\Component\Security\Http\EventListener\UserProviderListener" abstract="true">
      <argument type="abstract">user provider</argument>
    </service>
    <service id="security.listener.password_migrating" class="Symfony\Component\Security\Http\EventListener\PasswordMigratingListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.listener.user_checker" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener" abstract="true">
      <argument type="abstract">user checker</argument>
    </service>
    <service id="security.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionStrategyListener" abstract="true">
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.listener.login_throttling" class="Symfony\Component\Security\Http\EventListener\LoginThrottlingListener" abstract="true">
      <argument type="service" id="request_stack"/>
      <argument type="abstract">request rate limiter</argument>
    </service>
    <service id="security.authenticator.http_basic" class="Symfony\Component\Security\Http\Authenticator\HttpBasicAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">realm name</argument>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
    </service>
    <service id="security.authenticator.form_login" class="Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">user provider</argument>
      <argument type="abstract">authentication success handler</argument>
      <argument type="abstract">authentication failure handler</argument>
      <argument type="abstract">options</argument>
    </service>
    <service id="security.authenticator.json_login" class="Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">user provider</argument>
      <argument type="abstract">authentication success handler</argument>
      <argument type="abstract">authentication failure handler</argument>
      <argument type="abstract">options</argument>
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <call method="setTranslator">
        <argument type="service" id="translator.default" on-invalid="ignore"/>
      </call>
    </service>
    <service id="security.authenticator.x509" class="Symfony\Component\Security\Http\Authenticator\X509Authenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">firewall name</argument>
      <argument type="abstract">user key</argument>
      <argument type="abstract">credentials key</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
      <argument type="abstract">credentials user identifier</argument>
    </service>
    <service id="security.authenticator.remote_user" class="Symfony\Component\Security\Http\Authenticator\RemoteUserAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">firewall name</argument>
      <argument type="abstract">user key</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
    </service>
    <service id="security.access_token_extractor.header" class="Symfony\Component\Security\Http\AccessToken\HeaderAccessTokenExtractor"/>
    <service id="security.access_token_extractor.query_string" class="Symfony\Component\Security\Http\AccessToken\QueryAccessTokenExtractor"/>
    <service id="security.access_token_extractor.request_body" class="Symfony\Component\Security\Http\AccessToken\FormEncodedBodyExtractor"/>
    <service id="security.authenticator.access_token" class="Symfony\Component\Security\Http\Authenticator\AccessTokenAuthenticator" abstract="true">
      <argument type="abstract">access token handler</argument>
      <argument type="abstract">access token extractor</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <call method="setTranslator">
        <argument type="service" id="translator.default" on-invalid="ignore"/>
      </call>
    </service>
    <service id="security.authenticator.access_token.chain_extractor" class="Symfony\Component\Security\Http\AccessToken\ChainAccessTokenExtractor" abstract="true">
      <argument type="abstract">access token extractors</argument>
    </service>
    <service id="security.access_token_handler.oidc_user_info.http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface" abstract="true">
      <argument type="abstract">http client options</argument>
      <factory service="http_client" method="withOptions"/>
    </service>
    <service id="security.access_token_handler.oidc_user_info" class="Symfony\Component\Security\Http\AccessToken\Oidc\OidcUserInfoTokenHandler" abstract="true">
      <argument type="abstract">http client</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
      <argument type="abstract">claim</argument>
    </service>
    <service id="security.access_token_handler.oidc" class="Symfony\Component\Security\Http\AccessToken\Oidc\OidcTokenHandler" abstract="true">
      <argument type="abstract">signature algorithm</argument>
      <argument type="abstract">signature key</argument>
      <argument type="abstract">audience</argument>
      <argument type="abstract">issuers</argument>
      <argument>sub</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
      <argument type="service" id="clock"/>
    </service>
    <service id="security.access_token_handler.oidc.jwk" class="Jose\Component\Core\JWK" constructor="createFromJson" abstract="true">
      <argument type="abstract">signature key</argument>
    </service>
    <service id="security.access_token_handler.oidc.signature" class="Jose\Component\Core\Algorithm" abstract="true">
      <argument type="abstract">signature algorithm</argument>
      <factory class="Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SignatureAlgorithmFactory" method="create"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.ES256" class="Jose\Component\Signature\Algorithm\ES256">
      <argument>ES256</argument>
      <factory class="Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SignatureAlgorithmFactory" method="create"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.ES384" class="Jose\Component\Signature\Algorithm\ES384">
      <argument>ES384</argument>
      <factory class="Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SignatureAlgorithmFactory" method="create"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.ES512" class="Jose\Component\Signature\Algorithm\ES512">
      <argument>ES512</argument>
      <factory class="Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SignatureAlgorithmFactory" method="create"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
      <argument type="service" id="security.impersonate_url_generator" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager">
      <tag name="container.decorator" id="security.access.decision_manager"/>
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.command.debug_firewall" class="Symfony\Bundle\SecurityBundle\Command\DebugFirewallCommand">
      <tag name="console.command" command="debug:firewall"/>
      <tag name="container.no_preload"/>
      <argument>%security.firewalls%</argument>
      <argument type="service" id=".service_locator.zJyh7qS"/>
      <argument type="service" id=".service_locator._1SGciK"/>
      <argument type="collection">
        <argument key="main" type="collection"/>
      </argument>
      <argument>false</argument>
      <call method="setName">
        <argument>debug:firewall</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about your security firewall(s)</argument>
      </call>
    </service>
    <service id="security.user.provider.concrete.users_in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider">
      <argument type="collection"/>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.kLbKLHa</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.q1UFWmc" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id=".security.request_matcher.kLbKLHa" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.q1UFWmc"/>
      </argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>main</argument>
      <argument>security.user_checker</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.users_in_memory</argument>
      <argument>main</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.listener.main.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" dispatcher="security.event_dispatcher.main" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="2048" method="checkPassport"/>
      <argument type="service" id="security.user.provider.concrete.users_in_memory"/>
    </service>
    <service id="security.event_dispatcher.main" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <tag name="security.event_dispatcher.main">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.main.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.session.main"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.main"/>
          <argument>preCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.main"/>
          <argument>postCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.user_checker.chain.main" class="Symfony\Component\Security\Core\User\ChainUserChecker">
      <argument type="tagged_iterator" tag="security.user_checker.main"/>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.users_in_memory"/>
      </argument>
      <argument>main</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
      <argument type="service" id="security.event_dispatcher.main"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.listener.session.main" class="Symfony\Component\Security\Http\EventListener\SessionStrategyListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authenticator.manager.main" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.event_dispatcher.main"/>
      <argument>main</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="debug.security.firewall.authenticator.main" class="Symfony\Component\Security\Http\Authenticator\Debug\TraceableAuthenticatorManagerListener">
      <tag name="container.decorator" id="security.firewall.authenticator.main"/>
      <argument type="service" id="debug.security.firewall.authenticator.main.inner"/>
    </service>
    <service id="security.listener.user_checker.main" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="debug.security.firewall.authenticator.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.main"/>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id=".service_locator.zJyh7qS" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.dev" type="service_closure" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service_closure" id="security.firewall.map.context.main"/>
      </argument>
    </service>
    <service id="security.command.user_password_hash" class="Symfony\Component\PasswordHasher\Command\UserPasswordHashCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="security.password_hasher_factory"/>
      <argument type="collection">
        <argument>Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface</argument>
      </argument>
      <call method="setName">
        <argument>security:hash-password</argument>
      </call>
      <call method="setDescription">
        <argument>Hash a user password</argument>
      </call>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <argument>true</argument>
      <argument type="service" id="doctrine.debug_data_holder" on-invalid="null"/>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument>%doctrine.dbal.connection_factory.types%</argument>
      <argument type="service" id="doctrine.dbal.connection_factory.dsn_parser"/>
    </service>
    <service id="doctrine.dbal.connection_factory.dsn_parser" class="Doctrine\DBAL\Tools\DsnParser">
      <argument type="collection">
        <argument key="db2">ibm_db2</argument>
        <argument key="mssql">pdo_sqlsrv</argument>
        <argument key="mysql">pdo_mysql</argument>
        <argument key="mysql2">pdo_mysql</argument>
        <argument key="postgres">pdo_pgsql</argument>
        <argument key="postgresql">pdo_pgsql</argument>
        <argument key="pgsql">pdo_pgsql</argument>
        <argument key="sqlite">pdo_sqlite</argument>
        <argument key="sqlite3">pdo_sqlite</argument>
      </argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" class="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand">
      <tag name="console.command" command="dbal:run-sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>dbal:run-sql</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_schema_manager_factory" class="Doctrine\DBAL\Schema\DefaultSchemaManagerFactory"/>
    <service id="doctrine.dbal.legacy_schema_manager_factory" class="Doctrine\DBAL\Schema\LegacySchemaManagerFactory"/>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration">
      <call method="setSchemaManagerFactory">
        <argument type="service" id="doctrine.dbal.legacy_schema_manager_factory"/>
      </call>
      <call method="setMiddlewares">
        <argument type="collection">
          <argument type="service">
            <service class="Doctrine\DBAL\Logging\Middleware">
              <argument type="service" id="Psr\Log\NullLogger"/>
            </service>
          </argument>
          <argument type="service">
            <service class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware">
              <argument type="service" id="doctrine.debug_data_holder"/>
              <argument>null</argument>
              <call method="setConnectionName">
                <argument>default</argument>
              </call>
            </service>
          </argument>
        </argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager">
      <argument type="service" id=".service_locator.HeXyCEs"/>
      <argument type="collection">
        <argument>sylius.event_subscriber.orm_mapped_super_class</argument>
        <argument>sylius.event_subscriber.orm_repository_class</argument>
        <argument>sylius.translation.translatable_listener.doctrine.orm</argument>
        <argument>Gedmo\Sortable\SortableListener</argument>
        <argument>doctrine.orm.listeners.resolve_target_entity</argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.messenger.doctrine_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>onSchemaCreateTable</argument>
          </argument>
          <argument>doctrine.orm.messenger.doctrine_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.doctrine_token_provider_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.pdo_session_handler_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.lock_store_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>loadClassMetadata</argument>
          </argument>
          <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
        </argument>
      </argument>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="driver">pdo_sqlite</argument>
        <argument key="path">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/config/db.sql</argument>
        <argument key="charset">UTF8</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" class="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider">
      <argument type="service">
        <service class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
          <tag name="kernel.reset" method="reset"/>
          <argument type="service" id="service_container"/>
          <argument>%doctrine.connections%</argument>
          <argument>%doctrine.entity_managers%</argument>
          <argument>default</argument>
          <argument>default</argument>
        </service>
      </argument>
    </service>
    <service id="doctrine.dbal.logging_middleware" class="Doctrine\DBAL\Logging\Middleware" abstract="true">
      <tag name="monolog.logger" channel="doctrine"/>
      <tag name="doctrine.middleware" connection="default"/>
      <argument type="service" id="Psr\Log\NullLogger"/>
    </service>
    <service id="doctrine.debug_data_holder" class="Doctrine\Bundle\DoctrineBundle\Middleware\BacktraceDebugDataHolder">
      <argument type="collection"/>
    </service>
    <service id="doctrine.dbal.debug_middleware" class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware" abstract="true">
      <tag name="doctrine.middleware" connection="default"/>
      <argument type="service" id="doctrine.debug_data_holder"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="messenger.middleware.doctrine_transaction" class="Symfony\Bridge\Doctrine\Messenger\DoctrineTransactionMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_ping_connection" class="Symfony\Bridge\Doctrine\Messenger\DoctrinePingConnectionMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_close_connection" class="Symfony\Bridge\Doctrine\Messenger\DoctrineCloseConnectionMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_open_transaction_logger" class="Symfony\Bridge\Doctrine\Messenger\DoctrineOpenTransactionLoggerMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="Psr\Log\NullLogger"/>
    </service>
    <service id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager" class="Symfony\Bridge\Doctrine\Messenger\DoctrineClearEntityManagerWorkerSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.messenger.doctrine_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\MessengerTransportDoctrineSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <tag name="doctrine.event_listener" event="onSchemaCreateTable"/>
      <argument type="tagged_iterator" tag="messenger.receiver"/>
    </service>
    <service id=".1_ServiceLocator~KWgW1rO" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true"/>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener">
      <tag name="doctrine.event_subscriber"/>
      <call method="addResolveTargetEntity">
        <argument>Sylius\Component\Resource\Model\TranslatableInterface</argument>
        <argument>App\Entity\Book</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Sylius\Component\Resource\Model\TranslationInterface</argument>
        <argument>App\Entity\BookTranslation</argument>
        <argument type="collection"/>
      </call>
    </service>
    <service id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\DoctrineDbalCacheAdapterSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.listeners.doctrine_token_provider_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\RememberMeTokenProviderDoctrineSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="tagged_iterator" tag="security.remember_me_handler"/>
    </service>
    <service id="doctrine.orm.listeners.pdo_session_handler_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\PdoSessionHandlerSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="service" id="session.handler.native"/>
    </service>
    <service id="doctrine.orm.listeners.lock_store_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\LockStoreSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="tagged_iterator" tag="lock.store"/>
    </service>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy"/>
    <service id="doctrine.ulid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UlidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.uuid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UuidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.orm.command.entity_manager_provider" class="Doctrine\Bundle\DoctrineBundle\Orm\ManagerRegistryAwareEntityManagerProvider">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.entity_value_resolver" class="Symfony\Bridge\Doctrine\ArgumentResolver\EntityValueResolver">
      <tag name="Symfony\Bridge\Doctrine\ArgumentResolver\EntityValueResolver" priority="110">controller.argument_value_resolver</tag>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="doctrine.orm.entity_value_resolver.expression_language" on-invalid="ignore"/>
    </service>
    <service id="doctrine.orm.entity_value_resolver.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\MetadataCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\QueryCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\ResultCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\CollectionRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\ORM\Tools\Console\Command\ConvertMappingCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\CreateCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\DropCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\ORM\Tools\Console\Command\EnsureProductionSettingsCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\EntityRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\ORM\Tools\Console\Command\InfoCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\QueryRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\ORM\Tools\Console\Command\RunDqlCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\UpdateCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\ORM\Tools\Console\Command\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration">
      <tag name="doctrine.orm.configuration"/>
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
          <argument key="BoardGameBlog">App\BoardGameBlog\Domain</argument>
          <argument key="Subscription">App\Subscription\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCache">
        <argument type="service" id="cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCache">
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCache">
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id=".doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setSchemaIgnoreClasses">
        <argument type="collection"/>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\Bundle\DoctrineBundle\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore_number_aware"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setLazyGhostObjectEnabled">
        <argument>false</argument>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="sylius.doctrine.orm.container_repository_factory"/>
      </call>
    </service>
    <service id="doctrine.orm.default_yml_metadata_driver" class="Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver">
      <argument type="collection">
        <argument key="/home/loic/www/sylius/SyliusResourceBundle/tests/Application/config/doctrine">App\Entity</argument>
      </argument>
      <call method="setGlobalBasename">
        <argument>mapping</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_attribute_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AttributeDriver">
      <argument type="collection">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/src/BoardGameBlog/Domain</argument>
        <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/src/Subscription/Entity</argument>
      </argument>
      <argument>false</argument>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <tag name="container.preload" class="Doctrine\ORM\Proxy\Autoloader"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="sylius.console.command.resource_debug" class="Sylius\Bundle\ResourceBundle\Command\DebugResourceCommand" public="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="sylius.resource_registry"/>
      <argument type="service" id="sylius.resource_metadata_collection.factory.cached"/>
    </service>
    <service id="sylius.context.initiator.legacy_request_context" class="Sylius\Bundle\ResourceBundle\Context\Initiator\LegacyRequestContextInitiator">
      <tag name="container.decorator" id="sylius.context.initiator.request_context"/>
      <argument type="service" id="sylius.resource_registry"/>
      <argument type="service" id="sylius.resource_controller.request_configuration_factory"/>
      <argument type="service" id="sylius.context.initiator.legacy_request_context.inner"/>
    </service>
    <service id="sylius.resource_controller.parameters_parser" class="Sylius\Bundle\ResourceBundle\Controller\ParametersParser">
      <argument type="service" id="service_container"/>
      <argument type="service" id="sylius.expression_language"/>
    </service>
    <service id="sylius.resource_controller.request_configuration_factory" class="Sylius\Bundle\ResourceBundle\Controller\RequestConfigurationFactory">
      <argument type="service" id="sylius.resource_controller.parameters_parser"/>
      <argument>Sylius\Bundle\ResourceBundle\Controller\RequestConfiguration</argument>
      <argument>%sylius.resource.settings%</argument>
    </service>
    <service id="sylius.resource_controller.new_resource_factory" class="Sylius\Bundle\ResourceBundle\Controller\NewResourceFactory"/>
    <service id="sylius.resource_controller.single_resource_provider" class="Sylius\Bundle\ResourceBundle\Controller\SingleResourceProvider"/>
    <service id="sylius.resource_controller.pagerfanta_representation_factory" class="Hateoas\Representation\Factory\PagerfantaFactory"/>
    <service id="sylius.resource_controller.resources_collection_provider" class="Sylius\Bundle\ResourceBundle\Controller\ResourcesCollectionProvider">
      <argument type="service" id="sylius.resource_controller.resources_resolver.grid_aware"/>
      <argument type="service" id="sylius.resource_controller.pagerfanta_representation_factory"/>
    </service>
    <service id="sylius.resource_controller.form_factory" class="Sylius\Bundle\ResourceBundle\Controller\ResourceFormFactory">
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sylius.resource_controller.redirect_handler" class="Sylius\Bundle\ResourceBundle\Controller\RedirectHandler">
      <argument type="service" id="router.default"/>
    </service>
    <service id="sylius.resource_controller.authorization_checker.disabled" class="Sylius\Bundle\ResourceBundle\Controller\DisabledAuthorizationChecker"/>
    <service id="sylius.resource_controller.flash_helper" class="Sylius\Bundle\ResourceBundle\Controller\FlashHelper">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument>en_US</argument>
    </service>
    <service id="sylius.resource_controller.event_dispatcher" class="Sylius\Bundle\ResourceBundle\Controller\EventDispatcher">
      <argument type="service" id="event_dispatcher"/>
    </service>
    <service id="sylius.resource_controller.view_handler" class="Sylius\Bundle\ResourceBundle\Controller\ViewHandler">
      <argument type="service" id="fos_rest.view_handler.default" on-invalid="null"/>
    </service>
    <service id="sylius.resource_controller.resource_update_handler" class="Sylius\Bundle\ResourceBundle\Controller\ResourceUpdateHandler">
      <argument>null</argument>
    </service>
    <service id="sylius.resource_controller.resource_delete_handler" class="Sylius\Bundle\ResourceBundle\Controller\ResourceDeleteHandler"/>
    <service id="sylius.dispatcher.operation" class="Sylius\Component\Resource\Symfony\EventDispatcher\OperationEventDispatcher">
      <argument type="service" id="event_dispatcher"/>
    </service>
    <service id="sylius.event_handler.operation" class="Sylius\Component\Resource\Symfony\EventDispatcher\OperationEventHandler">
      <argument type="service" id="sylius.routing.redirect_handler"/>
    </service>
    <service id="sylius.resource_factory.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="sylius.repository.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="sylius.routing.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="sylius.expression_language.variables.token" class="Sylius\Component\Resource\Symfony\ExpressionLanguage\TokenVariables">
      <tag name="sylius.resource_factory_variables"/>
      <tag name="sylius.repository_variables"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
    </service>
    <service id="sylius.expression_language.variables.request" class="Sylius\Component\Resource\Symfony\ExpressionLanguage\RequestVariables">
      <tag name="sylius.resource_factory_variables"/>
      <tag name="sylius.repository_variables"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="sylius.expression_language.variables_collection.factory" class="Sylius\Component\Resource\Symfony\ExpressionLanguage\VariablesCollection">
      <argument type="tagged_iterator" tag="sylius.resource_factory_variables"/>
    </service>
    <service id="sylius.expression_language.variables_collection.repository" class="Sylius\Component\Resource\Symfony\ExpressionLanguage\VariablesCollection">
      <argument type="tagged_iterator" tag="sylius.repository_variables"/>
    </service>
    <service id="sylius.expression_language.variables_collection.routing" class="Sylius\Component\Resource\Symfony\ExpressionLanguage\VariablesCollection">
      <argument type="tagged_iterator" tag="sylius.routing_variables"/>
    </service>
    <service id="sylius.expression_language.argument_parser.factory" class="Sylius\Component\Resource\Symfony\ExpressionLanguage\ArgumentParser">
      <argument type="service" id="sylius.resource_factory.expression_language"/>
      <argument type="service" id="sylius.expression_language.variables_collection.factory"/>
    </service>
    <service id="sylius.expression_language.argument_parser.repository" class="Sylius\Component\Resource\Symfony\ExpressionLanguage\ArgumentParser">
      <argument type="service" id="sylius.repository.expression_language"/>
      <argument type="service" id="sylius.expression_language.variables_collection.repository"/>
    </service>
    <service id="sylius.expression_language.argument_parser.routing" class="Sylius\Component\Resource\Symfony\ExpressionLanguage\ArgumentParser">
      <argument type="service" id="sylius.routing.expression_language"/>
      <argument type="service" id="sylius.expression_language.variables_collection.routing"/>
    </service>
    <service id="sylius.form.type.resource_autocomplete_choice" class="Sylius\Bundle\ResourceBundle\Form\Type\ResourceAutocompleteChoiceType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="sylius.registry.resource_repository"/>
    </service>
    <service id="sylius.form.factory" class="Sylius\Component\Resource\Symfony\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sylius.helper.flash" class="Sylius\Component\Resource\Symfony\Session\Flash\FlashHelper">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="sylius.negotiator" class="Negotiation\Negotiator"/>
    <service id="sylius.listener.add_format" class="Sylius\Component\Resource\Symfony\EventListener\AddFormatListener">
      <tag name="kernel.event_listener" event="kernel.request" priority="28"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sylius.resource_metadata_operation.initiator.http_operation"/>
      <argument type="service" id="sylius.negotiator"/>
    </service>
    <service id="sylius.listener.read" class="Sylius\Component\Resource\Symfony\EventListener\ReadListener">
      <tag name="kernel.event_listener" event="kernel.request" priority="4"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sylius.resource_metadata_operation.initiator.http_operation"/>
      <argument type="service" id="sylius.context.initiator.legacy_request_context"/>
      <argument type="service" id="sylius.state.provider.event_dispatcher"/>
    </service>
    <service id="sylius.listener.factory" class="Sylius\Component\Resource\Symfony\EventListener\FactoryListener">
      <tag name="kernel.event_listener" event="kernel.request" priority="3"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sylius.resource_metadata_operation.initiator.http_operation"/>
      <argument type="service" id="sylius.context.initiator.legacy_request_context"/>
      <argument type="service" id="sylius.state.factory"/>
    </service>
    <service id="sylius.listener.deserialize" class="Sylius\Component\Resource\Symfony\EventListener\DeserializeListener">
      <tag name="kernel.event_listener" event="kernel.request" priority="2"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sylius.resource_metadata_operation.initiator.http_operation"/>
      <argument type="service" id="serializer" on-invalid="null"/>
    </service>
    <service id="sylius.listener.form" class="Sylius\Component\Resource\Symfony\EventListener\FormListener">
      <tag name="kernel.event_listener" event="kernel.view" priority="128"/>
      <argument type="service" id="sylius.resource_metadata_operation.initiator.http_operation"/>
      <argument type="service" id="sylius.context.initiator.legacy_request_context"/>
      <argument type="service" id="sylius.form.factory"/>
    </service>
    <service id="sylius.listener.validate" class="Sylius\Component\Resource\Symfony\EventListener\ValidateListener">
      <tag name="kernel.event_listener" event="kernel.view" priority="64"/>
      <argument type="service" id="sylius.resource_metadata_operation.initiator.http_operation"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="sylius.listener.write" class="Sylius\Component\Resource\Symfony\EventListener\WriteListener">
      <tag name="kernel.event_listener" event="kernel.view" priority="32"/>
      <argument type="service" id="sylius.resource_metadata_operation.initiator.http_operation"/>
      <argument type="service" id="sylius.context.initiator.legacy_request_context"/>
      <argument type="service" id="sylius.state.processor.event_dispatcher_bulk_aware"/>
    </service>
    <service id="sylius.listener.serialize" class="Sylius\Component\Resource\Symfony\EventListener\SerializeListener">
      <tag name="kernel.event_listener" event="kernel.view" priority="16"/>
      <argument type="service" id="sylius.resource_metadata_operation.initiator.http_operation"/>
      <argument type="service" id="serializer" on-invalid="null"/>
    </service>
    <service id="sylius.listener.flash" class="Sylius\Component\Resource\Symfony\EventListener\FlashListener">
      <tag name="kernel.event_listener" event="kernel.view" priority="16"/>
      <argument type="service" id="sylius.resource_metadata_operation.initiator.http_operation"/>
      <argument type="service" id="sylius.context.initiator.legacy_request_context"/>
      <argument type="service" id="sylius.helper.flash"/>
    </service>
    <service id="sylius.listener.respond" class="Sylius\Component\Resource\Symfony\EventListener\RespondListener">
      <tag name="kernel.event_listener" event="kernel.view" priority="8"/>
      <argument type="service" id="sylius.resource_metadata_operation.initiator.http_operation"/>
      <argument type="service" id="sylius.context.initiator.legacy_request_context"/>
      <argument type="service" id="sylius.state.responder"/>
    </service>
    <service id="sylius.listener.exception.validation" class="Sylius\Component\Resource\Symfony\Validator\EventListener\ValidationExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException"/>
      <argument type="service" id="serializer" on-invalid="null"/>
    </service>
    <service id="sylius.cache.metadata.resource_collection" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>wo9F+HTS1L</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/pools/system</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="sylius.resource_metadata_collection.factory.cached" class="Sylius\Component\Resource\Metadata\Resource\Factory\CachedResourceMetadataCollectionFactory">
      <argument type="service" id="sylius.cache.metadata.resource_collection"/>
      <argument type="service" id="sylius.resource_metadata_collection.factory.event_short_name"/>
    </service>
    <service id="sylius.resource_metadata_collection.factory.doctrine" class="Sylius\Component\Resource\Doctrine\Common\Metadata\Resource\Factory\DoctrineResourceMetadataCollectionFactory">
      <argument type="service" id="sylius.resource_registry"/>
      <argument type="service" id="sylius.resource_metadata_collection.factory.templates_dir"/>
    </service>
    <service id="sylius.resource_metadata_collection.factory.redirect" class="Sylius\Component\Resource\Metadata\Resource\Factory\RedirectResourceMetadataCollectionFactory">
      <argument type="service" id="sylius.routing.factory.operation_route_name_factory"/>
      <argument type="service" id="sylius.resource_metadata_collection.factory.doctrine"/>
    </service>
    <service id="sylius.resource_metadata_collection.factory.resource_factory" class="Sylius\Component\Resource\Metadata\Resource\Factory\FactoryResourceMetadataCollectionFactory">
      <argument type="service" id="sylius.resource_registry"/>
      <argument type="service" id="sylius.resource_metadata_collection.factory.redirect"/>
    </service>
    <service id="sylius.resource_metadata_collection.factory.event_short_name" class="Sylius\Component\Resource\Metadata\Resource\Factory\EventShortNameResourceMetadataCollectionFactory">
      <argument type="service" id="sylius.resource_metadata_collection.factory.resource_factory"/>
    </service>
    <service id="sylius.resource_metadata_collection.factory.templates_dir" class="Sylius\Component\Resource\Metadata\Resource\Factory\TemplatesDirResourceMetadataCollectionFactory">
      <tag name="container.decorator" id="sylius.resource_metadata_collection.factory.attributes"/>
      <argument type="service" id="sylius.resource_metadata_collection.factory.templates_dir.inner"/>
      <argument>%sylius.resource.settings%</argument>
    </service>
    <service id="sylius.resource_metadata_operation.initiator.http_operation" class="Sylius\Component\Resource\Metadata\Operation\HttpOperationInitiator">
      <argument type="service" id="sylius.resource_registry"/>
      <argument type="service" id="sylius.resource_metadata_collection.factory.cached"/>
    </service>
    <service id="sylius.repository_argument_resolver.request" class="Sylius\Component\Resource\Symfony\Request\RepositoryArgumentResolver"/>
    <service id=".1_RouteFactory~wU44QXJ" class="Sylius\Bundle\ResourceBundle\Routing\RouteFactory"/>
    <service id="Sylius\Bundle\ResourceBundle\Routing\ResourceLoader" class="Sylius\Bundle\ResourceBundle\Routing\ResourceLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="sylius.resource_registry"/>
      <argument type="service" id=".1_RouteFactory~wU44QXJ"/>
    </service>
    <service id="sylius.routing.loader.crud_routes_attributes" class="Sylius\Bundle\ResourceBundle\Routing\CrudRoutesAttributesLoader">
      <tag name="routing.route_loader"/>
      <argument>%sylius.resource.mapping%</argument>
      <argument type="service" id="Sylius\Bundle\ResourceBundle\Routing\ResourceLoader"/>
    </service>
    <service id="sylius.routing.loader.routes_attributes" class="Sylius\Bundle\ResourceBundle\Routing\RoutesAttributesLoader">
      <tag name="routing.route_loader"/>
      <argument>%sylius.resource.mapping%</argument>
      <argument type="service" id="sylius.routing.factory.route_attributes"/>
      <argument type="service" id="sylius.routing.factory.attributes_operation_route"/>
    </service>
    <service id="sylius.routing.factory.operation_route_name_factory" class="Sylius\Component\Resource\Symfony\Routing\Factory\OperationRouteNameFactory"/>
    <service id="sylius.routing.factory.operation_route_path_factory.collection" class="Sylius\Component\Resource\Symfony\Routing\Factory\CollectionOperationRoutePathFactory" public="true">
      <argument type="service" id="sylius.routing.factory.operation_route_path_factory.collection.inner"/>
    </service>
    <service id="sylius.routing.factory.operation_route_path_factory.create" class="Sylius\Component\Resource\Symfony\Routing\Factory\CreateOperationRoutePathFactory" public="true">
      <tag name="container.decorator" id="sylius.routing.factory.operation_route_path_factory.default"/>
      <argument type="service" id="sylius.routing.factory.operation_route_path_factory.update"/>
    </service>
    <service id="sylius.routing.factory.operation_route_path_factory.update" class="Sylius\Component\Resource\Symfony\Routing\Factory\UpdateOperationRoutePathFactory" public="true">
      <argument type="service" id="sylius.routing.factory.operation_route_path_factory.bulk_operation"/>
    </service>
    <service id="sylius.routing.factory.operation_route_path_factory.bulk_operation" class="Sylius\Component\Resource\Symfony\Routing\Factory\BulkOperationRoutePathFactory" public="true">
      <argument type="service" id="sylius.routing.factory.operation_route_path_factory.delete"/>
    </service>
    <service id="sylius.routing.factory.operation_route_path_factory.delete" class="Sylius\Component\Resource\Symfony\Routing\Factory\DeleteOperationRoutePathFactory" public="true">
      <argument type="service" id="sylius.routing.factory.operation_route_path_factory.show"/>
    </service>
    <service id="sylius.routing.factory.operation_route_path_factory.show" class="Sylius\Component\Resource\Symfony\Routing\Factory\ShowOperationRoutePathFactory" public="true">
      <argument type="service" id="sylius.routing.factory.operation_route_path_factory.collection"/>
    </service>
    <service id="sylius.routing.factory.route_attributes" class="Sylius\Bundle\ResourceBundle\Routing\RouteAttributesFactory"/>
    <service id="sylius.routing.factory.attributes_operation_route" class="Sylius\Bundle\ResourceBundle\Routing\AttributesOperationRouteFactory">
      <argument type="service" id="sylius.resource_registry"/>
      <argument type="service" id="sylius.routing.factory.operation_route"/>
      <argument type="service" id="sylius.resource_metadata_collection.factory.templates_dir"/>
    </service>
    <service id="sylius.routing.factory.operation_route" class="Sylius\Component\Resource\Symfony\Routing\Factory\OperationRouteFactory">
      <argument type="service" id="sylius.routing.factory.operation_route_path_factory.create"/>
    </service>
    <service id="sylius.routing.redirect_handler" class="Sylius\Component\Resource\Symfony\Routing\RedirectHandler" public="true">
      <argument type="service" id="router.default"/>
      <argument type="service" id="sylius.expression_language.argument_parser.routing"/>
      <argument type="service" id="sylius.routing.factory.operation_route_name_factory"/>
    </service>
    <service id="sylius.state.provider.event_dispatcher" class="Sylius\Component\Resource\State\EventDispatcherProvider">
      <tag name="container.decorator" id="sylius.state.provider"/>
      <argument type="service" id="sylius.state.provider.event_dispatcher.inner"/>
      <argument type="service" id="sylius.dispatcher.operation"/>
    </service>
    <service id="sylius.state.factory" class="Sylius\Component\Resource\State\Factory">
      <argument type="service" id=".service_locator.MHNFoLa"/>
      <argument type="service" id="sylius.expression_language.argument_parser.factory"/>
    </service>
    <service id="sylius.state.processor.event_dispatcher" class="Sylius\Component\Resource\State\EventDispatcherProcessor">
      <argument type="service" id="sylius.state.processor.event_dispatcher.inner"/>
      <argument type="service" id="sylius.dispatcher.operation"/>
      <argument type="service" id="sylius.event_handler.operation"/>
    </service>
    <service id="sylius.state.processor.event_dispatcher_bulk_aware" class="Sylius\Component\Resource\State\EventDispatcherBulkAwareProcessor">
      <tag name="container.decorator" id="sylius.state.processor.bulk_aware"/>
      <argument type="service" id="sylius.state.processor.event_dispatcher_bulk_aware.inner"/>
      <argument type="service" id="sylius.dispatcher.operation"/>
    </service>
    <service id="sylius.state.responder" class="Sylius\Component\Resource\State\Responder">
      <argument type="service" id=".service_locator.Ine1Ld0"/>
    </service>
    <service id="Sylius\Component\Resource\Symfony\Request\State\Provider" class="Sylius\Component\Resource\Symfony\Request\State\Provider">
      <tag name="sylius.state_provider"/>
      <argument type="service" id=".service_locator.YBWNcmH"/>
      <argument type="service" id="sylius.repository_argument_resolver.request"/>
      <argument type="service" id="sylius.expression_language.argument_parser.repository"/>
    </service>
    <service id="Sylius\Component\Resource\Doctrine\Common\State\PersistProcessor" class="Sylius\Component\Resource\Doctrine\Common\State\PersistProcessor">
      <tag name="sylius.state_processor"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Sylius\Component\Resource\Doctrine\Common\State\RemoveProcessor" class="Sylius\Component\Resource\Doctrine\Common\State\RemoveProcessor">
      <tag name="sylius.state_processor"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Sylius\Component\Resource\StateMachine\State\ApplyStateMachineTransitionProcessor" class="Sylius\Component\Resource\StateMachine\State\ApplyStateMachineTransitionProcessor">
      <tag name="sylius.state_processor"/>
      <argument type="service" id="sylius.state_machine.operation"/>
      <argument type="service" id="Sylius\Component\Resource\Doctrine\Common\State\PersistProcessor"/>
    </service>
    <service id="Sylius\Component\Resource\Symfony\Request\State\Responder" class="Sylius\Component\Resource\Symfony\Request\State\Responder">
      <tag name="sylius.state_responder"/>
      <argument type="service" id=".service_locator.Ine1Ld0"/>
    </service>
    <service id="sylius.state_responder.html" class="Sylius\Component\Resource\Symfony\Request\State\TwigResponder">
      <tag name="sylius.state_responder"/>
      <argument type="service" id="sylius.routing.redirect_handler"/>
      <argument type="service" id="sylius.twig.context.factory.legacy"/>
      <argument type="service" id="twig" on-invalid="null"/>
    </service>
    <service id="sylius.headers_initiator.api" class="Sylius\Component\Resource\Symfony\Response\ApiHeadersInitiator"/>
    <service id="sylius.state_responder.api" class="Sylius\Component\Resource\Symfony\Request\State\ApiResponder">
      <tag name="sylius.state_responder"/>
      <argument type="service" id="sylius.headers_initiator.api"/>
    </service>
    <service id="Sylius\Component\Resource\Grid\State\RequestGridProvider" class="Sylius\Component\Resource\Grid\State\RequestGridProvider">
      <tag name="sylius.state_provider"/>
      <argument type="service" id="sylius.grid.view_factory.legacy" on-invalid="null"/>
      <argument type="service" id="sylius.grid.service_grid_provider" on-invalid="null"/>
    </service>
    <service id="sylius.state_machine.operation" class="Sylius\Component\Resource\StateMachine\OperationStateMachine">
      <argument type="service" id=".service_locator.tCqbw62"/>
    </service>
    <service id="sylius.state_machine.operation.symfony" class="Sylius\Component\Resource\Symfony\Workflow\OperationStateMachine">
      <tag name="sylius.state_machine" key="symfony"/>
      <argument type="service" id=".workflow.registry" on-invalid="null"/>
    </service>
    <service id="sylius.state_machine.operation.winzou" class="Sylius\Component\Resource\Winzou\StateMachine\OperationStateMachine">
      <tag name="sylius.state_machine" key="winzou"/>
      <argument type="service" id="SM\Factory\Factory" on-invalid="null"/>
    </service>
    <service id="sylius.storage.session" class="Sylius\Bundle\ResourceBundle\Storage\SessionStorage" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="sylius.storage.cookie" class="Sylius\Bundle\ResourceBundle\Storage\CookieStorage" public="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sylius.twig.context.factory.default" class="Sylius\Component\Resource\Twig\Context\Factory\DefaultContextFactory">
      <tag name="sylius.twig_context_factory"/>
    </service>
    <service id="sylius.twig.context.factory.request" class="Sylius\Component\Resource\Twig\Context\Factory\RequestContextFactory">
      <argument type="service" id="sylius.twig.context.factory.request.inner"/>
    </service>
    <service id="sylius.twig.context.factory.legacy" class="Sylius\Bundle\ResourceBundle\Twig\Context\LegacyContextFactory">
      <tag name="container.decorator" id="sylius.twig.context.factory"/>
      <argument type="service" id="sylius.twig.context.factory.request"/>
    </service>
    <service id="sylius.random_generator" class="Sylius\Component\Resource\Generator\RandomnessGenerator" public="true"/>
    <service id="sylius.form.type_extension.form.request_handler" class="Sylius\Bundle\ResourceBundle\Form\Extension\HttpFoundation\HttpFoundationRequestHandler">
      <tag name="container.decorator" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="sylius.resource_registry" class="Sylius\Component\Resource\Metadata\Registry">
      <call method="addFromAliasAndConfiguration">
        <argument>app.board_game</argument>
        <argument type="collection">
          <argument key="driver">false</argument>
          <argument key="classes" type="collection">
            <argument key="model">App\BoardGameBlog\Infrastructure\Sylius\Resource\BoardGameResource</argument>
            <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
            <argument key="factory">Sylius\Component\Resource\Factory\Factory</argument>
            <argument key="form">Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType</argument>
          </argument>
          <argument key="state_machine_component">null</argument>
        </argument>
      </call>
      <call method="addFromAliasAndConfiguration">
        <argument>app.blog_post</argument>
        <argument type="collection">
          <argument key="classes" type="collection">
            <argument key="model">App\Entity\BlogPost</argument>
            <argument key="form">App\Form\Type\BlogPostType</argument>
            <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
            <argument key="factory">Sylius\Component\Resource\Factory\Factory</argument>
          </argument>
          <argument key="driver">doctrine/orm</argument>
          <argument key="state_machine_component">null</argument>
        </argument>
      </call>
      <call method="addFromAliasAndConfiguration">
        <argument>app.book</argument>
        <argument type="collection">
          <argument key="classes" type="collection">
            <argument key="model">App\Entity\Book</argument>
            <argument key="factory">App\Factory\BookFactory</argument>
            <argument key="controller">App\Controller\BookController</argument>
            <argument key="repository">App\Repository\BookRepository</argument>
            <argument key="form">App\Form\Type\BookType</argument>
          </argument>
          <argument key="translation" type="collection">
            <argument key="classes" type="collection">
              <argument key="model">App\Entity\BookTranslation</argument>
              <argument key="form">App\Form\Type\BookTranslationType</argument>
              <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
              <argument key="factory">Sylius\Component\Resource\Factory\Factory</argument>
            </argument>
          </argument>
          <argument key="driver">doctrine/orm</argument>
          <argument key="state_machine_component">null</argument>
        </argument>
      </call>
      <call method="addFromAliasAndConfiguration">
        <argument>app.book_translation</argument>
        <argument type="collection">
          <argument key="driver">doctrine/orm</argument>
          <argument key="classes" type="collection">
            <argument key="model">App\Entity\BookTranslation</argument>
            <argument key="form">App\Form\Type\BookTranslationType</argument>
            <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
            <argument key="factory">Sylius\Component\Resource\Factory\Factory</argument>
          </argument>
        </argument>
      </call>
      <call method="addFromAliasAndConfiguration">
        <argument>app.comic_book</argument>
        <argument type="collection">
          <argument key="classes" type="collection">
            <argument key="model">App\Entity\ComicBook</argument>
            <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
            <argument key="factory">Sylius\Component\Resource\Factory\Factory</argument>
            <argument key="form">Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType</argument>
          </argument>
          <argument key="driver">doctrine/orm</argument>
          <argument key="state_machine_component">null</argument>
        </argument>
      </call>
      <call method="addFromAliasAndConfiguration">
        <argument>app.science_book</argument>
        <argument type="collection">
          <argument key="classes" type="collection">
            <argument key="model">App\Entity\ScienceBook</argument>
            <argument key="form">App\Form\Type\ScienceBookType</argument>
            <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
            <argument key="factory">Sylius\Component\Resource\Factory\Factory</argument>
          </argument>
          <argument key="driver">doctrine/orm</argument>
          <argument key="state_machine_component">null</argument>
        </argument>
      </call>
      <call method="addFromAliasAndConfiguration">
        <argument>app.gedmo</argument>
        <argument type="collection">
          <argument key="classes" type="collection">
            <argument key="model">App\Entity\GedmoExtendedExample</argument>
            <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
            <argument key="factory">Sylius\Component\Resource\Factory\Factory</argument>
            <argument key="form">Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType</argument>
          </argument>
          <argument key="driver">doctrine/orm</argument>
          <argument key="state_machine_component">null</argument>
        </argument>
      </call>
      <call method="addFromAliasAndConfiguration">
        <argument>app.pull_request</argument>
        <argument type="collection">
          <argument key="classes" type="collection">
            <argument key="model">App\Entity\PullRequest</argument>
            <argument key="form">App\Form\Type\PullRequestType</argument>
            <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
            <argument key="factory">Sylius\Component\Resource\Factory\Factory</argument>
          </argument>
          <argument key="driver">doctrine/orm</argument>
          <argument key="state_machine_component">null</argument>
        </argument>
      </call>
      <call method="addFromAliasAndConfiguration">
        <argument>app.subscription</argument>
        <argument type="collection">
          <argument key="classes" type="collection">
            <argument key="model">App\Subscription\Entity\Subscription</argument>
            <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
            <argument key="factory">Sylius\Component\Resource\Factory\Factory</argument>
            <argument key="form">Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType</argument>
          </argument>
          <argument key="driver">doctrine/orm</argument>
        </argument>
      </call>
    </service>
    <service id="sylius.expression_language" class="Sylius\Bundle\ResourceBundle\ExpressionLanguage\ExpressionLanguage"/>
    <service id="sylius.form.extension.type.collection" class="Sylius\Bundle\ResourceBundle\Form\Extension\CollectionTypeExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\CollectionType" extended-type="Symfony\Component\Form\Extension\Core\Type\CollectionType"/>
    </service>
    <service id="sylius.form.type.default" class="Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="sylius.resource_registry"/>
      <argument type="service" id="sylius.registry.form_builder"/>
    </service>
    <service id="sylius.registry.resource_repository" class="Sylius\Component\Registry\ServiceRegistry">
      <argument>Sylius\Component\Resource\Repository\RepositoryInterface</argument>
      <argument>resource repository</argument>
      <call method="register">
        <argument>app.blog_post</argument>
        <argument type="service" id="app.repository.blog_post"/>
      </call>
      <call method="register">
        <argument>app.book</argument>
        <argument type="service" id="app.repository.book"/>
      </call>
      <call method="register">
        <argument>app.book_translation</argument>
        <argument type="service" id="app.repository.book_translation"/>
      </call>
      <call method="register">
        <argument>app.comic_book</argument>
        <argument type="service" id="app.repository.comic_book"/>
      </call>
      <call method="register">
        <argument>app.science_book</argument>
        <argument type="service" id="app.repository.science_book"/>
      </call>
      <call method="register">
        <argument>app.gedmo</argument>
        <argument type="service" id="app.repository.gedmo"/>
      </call>
      <call method="register">
        <argument>app.pull_request</argument>
        <argument type="service" id="app.repository.pull_request"/>
      </call>
      <call method="register">
        <argument>app.subscription</argument>
        <argument type="service" id="app.repository.subscription"/>
      </call>
    </service>
    <service id="sylius.registry.form_builder" class="Sylius\Component\Registry\ServiceRegistry">
      <argument>Sylius\Bundle\ResourceBundle\Form\Builder\DefaultFormBuilderInterface</argument>
      <argument>form builder</argument>
      <call method="register">
        <argument>doctrine/orm</argument>
        <argument type="service" id="sylius.form_builder.default"/>
      </call>
    </service>
    <service id="sylius.grid.resource_view_factory" class="Sylius\Bundle\ResourceBundle\Grid\View\ResourceGridViewFactory" public="true">
      <argument type="service" id="sylius.grid.data_provider"/>
      <argument type="service" id="sylius.resource_controller.parameters_parser"/>
    </service>
    <service id="sylius.resource_controller.resources_resolver.grid_aware" class="Sylius\Bundle\ResourceBundle\Grid\Controller\ResourcesResolver" public="true">
      <tag name="container.decorator" id="sylius.resource_controller.resources_resolver"/>
      <argument type="service" id="sylius.resource_controller.resources_resolver.grid_aware.inner"/>
      <argument type="service" id="sylius.grid.chain_provider"/>
      <argument type="service" id="sylius.grid.resource_view_factory"/>
    </service>
    <service id="sylius.custom_grid_renderer.twig" class="Sylius\Bundle\ResourceBundle\Grid\Renderer\TwigGridRenderer" public="true">
      <tag name="container.decorator" id="sylius.grid.renderer.twig"/>
      <argument type="service" id="sylius.custom_grid_renderer.twig.inner"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="sylius.grid_options_parser"/>
      <argument>%sylius.grid.templates.action%</argument>
    </service>
    <service id="sylius.custom_bulk_action_grid_renderer.twig" class="Sylius\Bundle\ResourceBundle\Grid\Renderer\TwigBulkActionGridRenderer" public="true">
      <tag name="container.decorator" id="sylius.grid.bulk_action_renderer.twig"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="sylius.grid_options_parser"/>
      <argument>%sylius.grid.templates.bulk_action%</argument>
    </service>
    <service id="sylius.grid_options_parser" class="Sylius\Bundle\ResourceBundle\Grid\Parser\OptionsParser">
      <argument type="service" id="service_container"/>
      <argument type="service" id="sylius.expression_language"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="sylius.grid.view_factory.legacy" class="Sylius\Bundle\ResourceBundle\Grid\View\LegacyGridViewFactory">
      <tag name="container.decorator" id="sylius.grid.view_factory.resource"/>
      <argument type="service" id="sylius.grid.resource_view_factory"/>
      <argument type="service" id="sylius.grid.view_factory.legacy.inner"/>
    </service>
    <service id="sylius.translation_locale_provider.immutable" class="Sylius\Component\Resource\Translation\Provider\ImmutableTranslationLocaleProvider" public="true">
      <argument type="collection">
        <argument>en_US</argument>
      </argument>
      <argument>en_US</argument>
    </service>
    <service id="sylius.translation.translatable_listener.doctrine.orm" class="Sylius\Bundle\ResourceBundle\EventListener\ORMTranslatableListener" public="true">
      <tag name="doctrine.event_subscriber" connection="default" priority="99"/>
      <argument type="service" id="sylius.resource_registry"/>
      <argument type="service" id="sylius.translatable_entity_locale_assigner"/>
    </service>
    <service id="sylius.form.type.resource_translations" class="Sylius\Bundle\ResourceBundle\Form\Type\ResourceTranslationsType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="test.translation_locale_provider"/>
    </service>
    <service id="sylius.translatable_entity_locale_assigner" class="Sylius\Component\Resource\Translation\TranslatableEntityLocaleAssigner" public="true">
      <argument type="service" id="test.translation_locale_provider"/>
    </service>
    <service id="Sylius\Bundle\ResourceBundle\Doctrine\ResourceMappingDriverChain" class="Sylius\Bundle\ResourceBundle\Doctrine\ResourceMappingDriverChain" public="true">
      <argument type="service" id="Sylius\Bundle\ResourceBundle\Doctrine\ResourceMappingDriverChain.inner"/>
      <argument type="service" id="sylius.resource_registry"/>
    </service>
    <service id="sylius.event_subscriber.orm_mapped_super_class" class="Sylius\Bundle\ResourceBundle\EventListener\ORMMappedSuperClassSubscriber" public="true">
      <tag name="doctrine.event_subscriber" priority="8192"/>
      <argument type="service" id="sylius.resource_registry"/>
    </service>
    <service id="sylius.event_subscriber.orm_repository_class" class="Sylius\Bundle\ResourceBundle\EventListener\ORMRepositoryClassSubscriber" public="true">
      <tag name="doctrine.event_subscriber" priority="8192"/>
      <argument type="service" id="sylius.resource_registry"/>
    </service>
    <service id="sylius.form_builder.default" class="Sylius\Bundle\ResourceBundle\Doctrine\ORM\Form\Builder\DefaultFormBuilder">
      <tag name="sylius.default_resource_form.builder" type="doctrine/orm"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="sylius.doctrine.orm.container_repository_factory" class="Sylius\Bundle\ResourceBundle\Doctrine\ORM\ContainerRepositoryFactory">
      <tag name="container.decorator" id="doctrine.orm.container_repository_factory"/>
      <argument type="service" id="sylius.doctrine.orm.container_repository_factory.inner"/>
      <argument>%sylius.doctrine.orm.container_repository_factory.entities%</argument>
    </service>
    <service id="app.controller.blog_post" class="Sylius\Bundle\ResourceBundle\Controller\ResourceController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service">
        <service class="Sylius\Component\Resource\Metadata\Metadata">
          <argument>app.blog_post</argument>
          <factory service="sylius.resource_registry" method="get"/>
        </service>
      </argument>
      <argument type="service" id="sylius.resource_controller.request_configuration_factory"/>
      <argument type="service" id="sylius.resource_controller.view_handler" on-invalid="null"/>
      <argument type="service" id="app.repository.blog_post"/>
      <argument type="service" id="app.factory.blog_post"/>
      <argument type="service" id="sylius.resource_controller.new_resource_factory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="sylius.resource_controller.single_resource_provider"/>
      <argument type="service" id="sylius.resource_controller.resources_collection_provider"/>
      <argument type="service" id="sylius.resource_controller.form_factory"/>
      <argument type="service" id="sylius.resource_controller.redirect_handler"/>
      <argument type="service" id="sylius.resource_controller.flash_helper"/>
      <argument type="service" id="sylius.resource_controller.authorization_checker.disabled"/>
      <argument type="service" id="sylius.resource_controller.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sylius.resource_controller.resource_update_handler"/>
      <argument type="service" id="sylius.resource_controller.resource_delete_handler"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="app.repository.blog_post" class="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository" public="true">
      <tag name="sylius.repository"/>
      <argument>App\Entity\BlogPost</argument>
      <factory service="doctrine.orm.default_entity_manager" method="getRepository"/>
    </service>
    <service id="app.factory.blog_post" class="Sylius\Component\Resource\Factory\Factory" public="true">
      <tag name="sylius.resource_factory"/>
      <argument>App\Entity\BlogPost</argument>
    </service>
    <service id="app.controller.book" class="App\Controller\BookController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service">
        <service class="Sylius\Component\Resource\Metadata\Metadata">
          <argument>app.book</argument>
          <factory service="sylius.resource_registry" method="get"/>
        </service>
      </argument>
      <argument type="service" id="sylius.resource_controller.request_configuration_factory"/>
      <argument type="service" id="sylius.resource_controller.view_handler" on-invalid="null"/>
      <argument type="service" id="app.repository.book"/>
      <argument type="service" id="app.factory.book"/>
      <argument type="service" id="sylius.resource_controller.new_resource_factory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="sylius.resource_controller.single_resource_provider"/>
      <argument type="service" id="sylius.resource_controller.resources_collection_provider"/>
      <argument type="service" id="sylius.resource_controller.form_factory"/>
      <argument type="service" id="sylius.resource_controller.redirect_handler"/>
      <argument type="service" id="sylius.resource_controller.flash_helper"/>
      <argument type="service" id="sylius.resource_controller.authorization_checker.disabled"/>
      <argument type="service" id="sylius.resource_controller.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sylius.resource_controller.resource_update_handler"/>
      <argument type="service" id="sylius.resource_controller.resource_delete_handler"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="app.repository.book" class="App\Repository\BookRepository" public="true">
      <tag name="sylius.repository"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\BookRepository" class="App\Repository\BookRepository">
      <tag name="doctrine.repository_service"/>
      <argument>app.repository.book</argument>
      <factory service="service_container" method="get"/>
    </service>
    <service id="app.factory.book" class="App\Factory\BookFactory" public="true">
      <tag name="sylius.resource_factory"/>
      <argument type="service">
        <service class="Sylius\Component\Resource\Factory\Factory">
          <argument>App\Entity\Book</argument>
        </service>
      </argument>
      <argument type="service" id="test.translation_locale_provider"/>
    </service>
    <service id="app.controller.book_translation" class="Sylius\Bundle\ResourceBundle\Controller\ResourceController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service">
        <service class="Sylius\Component\Resource\Metadata\Metadata">
          <argument>app.book_translation</argument>
          <factory service="sylius.resource_registry" method="get"/>
        </service>
      </argument>
      <argument type="service" id="sylius.resource_controller.request_configuration_factory"/>
      <argument type="service" id="sylius.resource_controller.view_handler" on-invalid="null"/>
      <argument type="service" id="app.repository.book_translation"/>
      <argument type="service" id="app.factory.book_translation"/>
      <argument type="service" id="sylius.resource_controller.new_resource_factory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="sylius.resource_controller.single_resource_provider"/>
      <argument type="service" id="sylius.resource_controller.resources_collection_provider"/>
      <argument type="service" id="sylius.resource_controller.form_factory"/>
      <argument type="service" id="sylius.resource_controller.redirect_handler"/>
      <argument type="service" id="sylius.resource_controller.flash_helper"/>
      <argument type="service" id="sylius.resource_controller.authorization_checker.disabled"/>
      <argument type="service" id="sylius.resource_controller.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sylius.resource_controller.resource_update_handler"/>
      <argument type="service" id="sylius.resource_controller.resource_delete_handler"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="app.repository.book_translation" class="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository" public="true">
      <tag name="sylius.repository"/>
      <argument>App\Entity\BookTranslation</argument>
      <factory service="doctrine.orm.default_entity_manager" method="getRepository"/>
    </service>
    <service id="app.factory.book_translation" class="Sylius\Component\Resource\Factory\Factory" public="true">
      <tag name="sylius.resource_factory"/>
      <argument>App\Entity\BookTranslation</argument>
    </service>
    <service id="app.controller.comic_book" class="Sylius\Bundle\ResourceBundle\Controller\ResourceController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service">
        <service class="Sylius\Component\Resource\Metadata\Metadata">
          <argument>app.comic_book</argument>
          <factory service="sylius.resource_registry" method="get"/>
        </service>
      </argument>
      <argument type="service" id="sylius.resource_controller.request_configuration_factory"/>
      <argument type="service" id="sylius.resource_controller.view_handler" on-invalid="null"/>
      <argument type="service" id="app.repository.comic_book"/>
      <argument type="service" id="app.factory.comic_book"/>
      <argument type="service" id="sylius.resource_controller.new_resource_factory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="sylius.resource_controller.single_resource_provider"/>
      <argument type="service" id="sylius.resource_controller.resources_collection_provider"/>
      <argument type="service" id="sylius.resource_controller.form_factory"/>
      <argument type="service" id="sylius.resource_controller.redirect_handler"/>
      <argument type="service" id="sylius.resource_controller.flash_helper"/>
      <argument type="service" id="sylius.resource_controller.authorization_checker.disabled"/>
      <argument type="service" id="sylius.resource_controller.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sylius.resource_controller.resource_update_handler"/>
      <argument type="service" id="sylius.resource_controller.resource_delete_handler"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="app.repository.comic_book" class="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository" public="true">
      <tag name="sylius.repository"/>
      <argument>App\Entity\ComicBook</argument>
      <factory service="doctrine.orm.default_entity_manager" method="getRepository"/>
    </service>
    <service id="app.factory.comic_book" class="Sylius\Component\Resource\Factory\Factory" public="true">
      <tag name="sylius.resource_factory"/>
      <argument>App\Entity\ComicBook</argument>
    </service>
    <service id="app.controller.science_book" class="Sylius\Bundle\ResourceBundle\Controller\ResourceController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service">
        <service class="Sylius\Component\Resource\Metadata\Metadata">
          <argument>app.science_book</argument>
          <factory service="sylius.resource_registry" method="get"/>
        </service>
      </argument>
      <argument type="service" id="sylius.resource_controller.request_configuration_factory"/>
      <argument type="service" id="sylius.resource_controller.view_handler" on-invalid="null"/>
      <argument type="service" id="app.repository.science_book"/>
      <argument type="service" id="app.factory.science_book"/>
      <argument type="service" id="sylius.resource_controller.new_resource_factory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="sylius.resource_controller.single_resource_provider"/>
      <argument type="service" id="sylius.resource_controller.resources_collection_provider"/>
      <argument type="service" id="sylius.resource_controller.form_factory"/>
      <argument type="service" id="sylius.resource_controller.redirect_handler"/>
      <argument type="service" id="sylius.resource_controller.flash_helper"/>
      <argument type="service" id="sylius.resource_controller.authorization_checker.disabled"/>
      <argument type="service" id="sylius.resource_controller.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sylius.resource_controller.resource_update_handler"/>
      <argument type="service" id="sylius.resource_controller.resource_delete_handler"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="app.repository.science_book" class="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository" public="true">
      <tag name="sylius.repository"/>
      <argument>App\Entity\ScienceBook</argument>
      <factory service="doctrine.orm.default_entity_manager" method="getRepository"/>
    </service>
    <service id="app.factory.science_book" class="Sylius\Component\Resource\Factory\Factory" public="true">
      <tag name="sylius.resource_factory"/>
      <argument>App\Entity\ScienceBook</argument>
    </service>
    <service id="app.controller.gedmo" class="Sylius\Bundle\ResourceBundle\Controller\ResourceController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service">
        <service class="Sylius\Component\Resource\Metadata\Metadata">
          <argument>app.gedmo</argument>
          <factory service="sylius.resource_registry" method="get"/>
        </service>
      </argument>
      <argument type="service" id="sylius.resource_controller.request_configuration_factory"/>
      <argument type="service" id="sylius.resource_controller.view_handler" on-invalid="null"/>
      <argument type="service" id="app.repository.gedmo"/>
      <argument type="service" id="app.factory.gedmo"/>
      <argument type="service" id="sylius.resource_controller.new_resource_factory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="sylius.resource_controller.single_resource_provider"/>
      <argument type="service" id="sylius.resource_controller.resources_collection_provider"/>
      <argument type="service" id="sylius.resource_controller.form_factory"/>
      <argument type="service" id="sylius.resource_controller.redirect_handler"/>
      <argument type="service" id="sylius.resource_controller.flash_helper"/>
      <argument type="service" id="sylius.resource_controller.authorization_checker.disabled"/>
      <argument type="service" id="sylius.resource_controller.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sylius.resource_controller.resource_update_handler"/>
      <argument type="service" id="sylius.resource_controller.resource_delete_handler"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="app.repository.gedmo" class="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository" public="true">
      <tag name="sylius.repository"/>
      <argument>App\Entity\GedmoExtendedExample</argument>
      <factory service="doctrine.orm.default_entity_manager" method="getRepository"/>
    </service>
    <service id="app.factory.gedmo" class="Sylius\Component\Resource\Factory\Factory" public="true">
      <tag name="sylius.resource_factory"/>
      <argument>App\Entity\GedmoExtendedExample</argument>
    </service>
    <service id="app.controller.pull_request" class="Sylius\Bundle\ResourceBundle\Controller\ResourceController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service">
        <service class="Sylius\Component\Resource\Metadata\Metadata">
          <argument>app.pull_request</argument>
          <factory service="sylius.resource_registry" method="get"/>
        </service>
      </argument>
      <argument type="service" id="sylius.resource_controller.request_configuration_factory"/>
      <argument type="service" id="sylius.resource_controller.view_handler" on-invalid="null"/>
      <argument type="service" id="app.repository.pull_request"/>
      <argument type="service" id="app.factory.pull_request"/>
      <argument type="service" id="sylius.resource_controller.new_resource_factory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="sylius.resource_controller.single_resource_provider"/>
      <argument type="service" id="sylius.resource_controller.resources_collection_provider"/>
      <argument type="service" id="sylius.resource_controller.form_factory"/>
      <argument type="service" id="sylius.resource_controller.redirect_handler"/>
      <argument type="service" id="sylius.resource_controller.flash_helper"/>
      <argument type="service" id="sylius.resource_controller.authorization_checker.disabled"/>
      <argument type="service" id="sylius.resource_controller.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sylius.resource_controller.resource_update_handler"/>
      <argument type="service" id="sylius.resource_controller.resource_delete_handler"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="app.repository.pull_request" class="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository" public="true">
      <tag name="sylius.repository"/>
      <argument>App\Entity\PullRequest</argument>
      <factory service="doctrine.orm.default_entity_manager" method="getRepository"/>
    </service>
    <service id="app.factory.pull_request" class="Sylius\Component\Resource\Factory\Factory" public="true">
      <tag name="sylius.resource_factory"/>
      <argument>App\Entity\PullRequest</argument>
    </service>
    <service id="app.controller.subscription" class="Sylius\Bundle\ResourceBundle\Controller\ResourceController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service">
        <service class="Sylius\Component\Resource\Metadata\Metadata">
          <argument>app.subscription</argument>
          <factory service="sylius.resource_registry" method="get"/>
        </service>
      </argument>
      <argument type="service" id="sylius.resource_controller.request_configuration_factory"/>
      <argument type="service" id="sylius.resource_controller.view_handler" on-invalid="null"/>
      <argument type="service" id="app.repository.subscription"/>
      <argument type="service" id="App\Subscription\Factory\SubscriptionFactory"/>
      <argument type="service" id="sylius.resource_controller.new_resource_factory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="sylius.resource_controller.single_resource_provider"/>
      <argument type="service" id="sylius.resource_controller.resources_collection_provider"/>
      <argument type="service" id="sylius.resource_controller.form_factory"/>
      <argument type="service" id="sylius.resource_controller.redirect_handler"/>
      <argument type="service" id="sylius.resource_controller.flash_helper"/>
      <argument type="service" id="sylius.resource_controller.authorization_checker.disabled"/>
      <argument type="service" id="sylius.resource_controller.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sylius.resource_controller.resource_update_handler"/>
      <argument type="service" id="sylius.resource_controller.resource_delete_handler"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="app.repository.subscription" class="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository" public="true">
      <tag name="sylius.repository"/>
      <argument>App\Subscription\Entity\Subscription</argument>
      <factory service="doctrine.orm.default_entity_manager" method="getRepository"/>
    </service>
    <service id="pagerfanta.route_generator_factory" class="BabDev\PagerfantaBundle\RouteGenerator\RequestAwareRouteGeneratorFactory" public="true">
      <tag name="container.private" package="babdev/pagerfanta-bundle" version="3.5"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="property_accessor" on-invalid="ignore"/>
    </service>
    <service id="pagerfanta.view.default" class="Pagerfanta\View\DefaultView">
      <tag name="pagerfanta.view" alias="default"/>
    </service>
    <service id="pagerfanta.view.foundation6" class="Pagerfanta\View\Foundation6View">
      <tag name="pagerfanta.view" alias="foundation6"/>
    </service>
    <service id="pagerfanta.view.semantic_ui" class="Pagerfanta\View\SemanticUiView">
      <tag name="pagerfanta.view" alias="semantic_ui"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap" class="Pagerfanta\View\TwitterBootstrapView">
      <tag name="pagerfanta.view" alias="twitter_bootstrap"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap3" class="Pagerfanta\View\TwitterBootstrap3View">
      <tag name="pagerfanta.view" alias="twitter_bootstrap3"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap4" class="Pagerfanta\View\TwitterBootstrap4View">
      <tag name="pagerfanta.view" alias="twitter_bootstrap4"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap5" class="Pagerfanta\View\TwitterBootstrap5View">
      <tag name="pagerfanta.view" alias="twitter_bootstrap5"/>
    </service>
    <service id="pagerfanta.view_factory" class="Pagerfanta\View\ViewFactory" public="true">
      <tag name="container.private" package="babdev/pagerfanta-bundle" version="3.5"/>
      <call method="set">
        <argument>default</argument>
        <argument type="service" id="pagerfanta.view.default"/>
      </call>
      <call method="set">
        <argument>foundation6</argument>
        <argument type="service" id="pagerfanta.view.foundation6"/>
      </call>
      <call method="set">
        <argument>semantic_ui</argument>
        <argument type="service" id="pagerfanta.view.semantic_ui"/>
      </call>
      <call method="set">
        <argument>twitter_bootstrap</argument>
        <argument type="service" id="pagerfanta.view.twitter_bootstrap"/>
      </call>
      <call method="set">
        <argument>twitter_bootstrap3</argument>
        <argument type="service" id="pagerfanta.view.twitter_bootstrap3"/>
      </call>
      <call method="set">
        <argument>twitter_bootstrap4</argument>
        <argument type="service" id="pagerfanta.view.twitter_bootstrap4"/>
      </call>
      <call method="set">
        <argument>twitter_bootstrap5</argument>
        <argument type="service" id="pagerfanta.view.twitter_bootstrap5"/>
      </call>
      <call method="set">
        <argument>twig</argument>
        <argument type="service" id="pagerfanta.view.twig"/>
      </call>
    </service>
    <service id="pagerfanta.twig_extension" class="Pagerfanta\Twig\Extension\PagerfantaExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="pagerfanta.twig_runtime" class="Pagerfanta\Twig\Extension\PagerfantaRuntime">
      <tag name="twig.runtime"/>
      <argument>default</argument>
      <argument type="service" id="pagerfanta.view_factory"/>
      <argument type="service" id="pagerfanta.route_generator_factory"/>
    </service>
    <service id="pagerfanta.undefined_callable_handler" class="BabDev\PagerfantaBundle\Twig\UndefinedCallableHandler"/>
    <service id="pagerfanta.view.twig" class="Pagerfanta\Twig\View\TwigView">
      <tag name="pagerfanta.view" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>@Pagerfanta/default.html.twig</argument>
    </service>
    <service id="pagerfanta.serializer.handler" class="BabDev\PagerfantaBundle\Serializer\Handler\PagerfantaHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="pagerfanta.serializer.normalizer" class="BabDev\PagerfantaBundle\Serializer\Normalizer\PagerfantaNormalizer">
      <tag name="serializer.normalizer"/>
    </service>
    <service id="pagerfanta.event_listener.convert_not_valid_max_per_page_to_not_found" class="BabDev\PagerfantaBundle\EventListener\ConvertNotValidCurrentPageToNotFoundListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="512"/>
    </service>
    <service id="pagerfanta.event_listener.convert_not_valid_current_page_to_not_found" class="BabDev\PagerfantaBundle\EventListener\ConvertNotValidMaxPerPageToNotFoundListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="512"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <tag name="container.preload" class="Twig\Cache\FilesystemCache"/>
      <tag name="container.preload" class="Twig\Extension\CoreExtension"/>
      <tag name="container.preload" class="Twig\Extension\EscaperExtension"/>
      <tag name="container.preload" class="Twig\Extension\OptimizerExtension"/>
      <tag name="container.preload" class="Twig\Extension\StagingExtension"/>
      <tag name="container.preload" class="Twig\ExtensionSet"/>
      <tag name="container.preload" class="Twig\Template"/>
      <tag name="container.preload" class="Twig\TemplateWrapper"/>
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/twig</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="workflow.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="pagerfanta.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="jms_serializer.twig_extension.runtime_serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="hateoas.twig.link"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="SM\Extension\Twig\SMExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sylius.twig.extension.grid"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sylius.twig.extension.bulk_action_grid"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="registerUndefinedFunctionCallback">
        <argument type="collection">
          <argument type="service" id="pagerfanta.undefined_callable_handler"/>
          <argument>onUndefinedFunction</argument>
        </argument>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable">
      <call method="setEnvironment">
        <argument>test</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
      <call method="setLocaleSwitcher">
        <argument type="service" id="translation.locale_switcher" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator">
      <argument type="service" id="kernel"/>
      <argument type="collection">
        <argument key="/home/loic/www/sylius/SyliusResourceBundle/vendor/pagerfanta/pagerfanta/lib/Twig/templates/">Pagerfanta</argument>
        <argument key="/home/loic/www/sylius/SyliusResourceBundle/tests/Application/templates">null</argument>
        <argument key="/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/templates</argument>
      <argument type="collection"/>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.etVElvN.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application</argument>
      <call method="addPath">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/pagerfanta/pagerfanta/lib/Twig/templates/</argument>
        <argument>Pagerfanta</argument>
      </call>
      <call method="addPath">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/templates</argument>
      </call>
      <call method="addPath">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/views</argument>
        <argument>SyliusResource</argument>
      </call>
      <call method="addPath">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/src/Bundle/Resources/views</argument>
        <argument>!SyliusResource</argument>
      </call>
      <call method="addPath">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/templates</argument>
        <argument>BabDevPagerfanta</argument>
      </call>
      <call method="addPath">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/babdev/pagerfanta-bundle/templates</argument>
        <argument>!BabDevPagerfanta</argument>
      </call>
      <call method="addPath">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/jms/serializer-bundle/Resources/views</argument>
        <argument>JMSSerializer</argument>
      </call>
      <call method="addPath">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/jms/serializer-bundle/Resources/views</argument>
        <argument>!JMSSerializer</argument>
      </call>
      <call method="addPath">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/templates</argument>
      </call>
      <call method="addPath">
        <argument>/home/loic/www/sylius/SyliusResourceBundle/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument>null</argument>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension">
      <argument>null</argument>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.htmlsanitizer" class="Symfony\Bridge\Twig\Extension\HtmlSanitizerExtension">
      <argument type="service" id=".service_locator.Xbsa8iG"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
      <argument type="service" id="fragment.uri_generator" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="workflow.twig_extension" class="Symfony\Bridge\Twig\Extension\WorkflowExtension">
      <tag name="twig.extension"/>
      <argument type="service" id=".workflow.registry"/>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader">
      <argument type="service" id=".service_locator.fL6tnjm"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service">
        <service class="bool">
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="twig.runtime.serializer" class="Symfony\Bridge\Twig\Extension\SerializerRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="serializer"/>
    </service>
    <service id="twig.extension.serializer" class="Symfony\Bridge\Twig\Extension\SerializerExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="controller.template_attribute_listener" class="Symfony\Bridge\Twig\EventListener\TemplateAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine">
      <tag name="kernel.reset" method="reset"/>
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Show a list of twig functions, filters, globals and tests</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument>*.twig</argument>
      </argument>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a Twig template and outputs encountered errors</argument>
      </call>
    </service>
    <service id="fos_rest.view_handler.default" class="FOS\RestBundle\View\ViewHandler" constructor="create">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="fos_rest.serializer.jms"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="json">false</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument key="serializeNullStrategy">false</argument>
      </argument>
    </service>
    <service id="fos_rest.view_handler.jsonp" class="FOS\RestBundle\View\JsonpHandler">
      <argument></argument>
    </service>
    <service id="fos_rest.request.param_fetcher" class="FOS\RestBundle\Request\ParamFetcher">
      <argument type="service" id="service_container"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="validator" on-invalid="null"/>
    </service>
    <service id="fos_rest.request.param_fetcher.reader" class="FOS\RestBundle\Request\ParamReader">
      <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
    </service>
    <service id="fos_rest.serializer.jms" class="FOS\RestBundle\Serializer\JMSSerializerAdapter">
      <argument type="service" id="jms_serializer.serializer"/>
      <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
    </service>
    <service id="fos_rest.serializer.symfony" class="FOS\RestBundle\Serializer\SymfonySerializerAdapter">
      <argument type="service" id="serializer"/>
    </service>
    <service id="fos_rest.serializer.form_error_normalizer" class="FOS\RestBundle\Serializer\Normalizer\FormErrorNormalizer">
      <tag name="serializer.normalizer" priority="-10"/>
    </service>
    <service id="fos_rest.normalizer.camel_keys" class="FOS\RestBundle\Normalizer\CamelKeysNormalizer"/>
    <service id="fos_rest.normalizer.camel_keys_with_leading_underscore" class="FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore"/>
    <service id="fos_rest.decoder.json" class="FOS\RestBundle\Decoder\JsonDecoder"/>
    <service id="fos_rest.decoder.jsontoform" class="FOS\RestBundle\Decoder\JsonToFormDecoder"/>
    <service id="fos_rest.decoder.xml" class="FOS\RestBundle\Decoder\XmlDecoder"/>
    <service id="fos_rest.decoder_provider" class="FOS\RestBundle\Decoder\ContainerDecoderProvider">
      <argument type="service" id=".service_locator.CE6DdyV"/>
      <argument type="collection">
        <argument key="json">fos_rest.decoder.json</argument>
        <argument key="xml">fos_rest.decoder.xml</argument>
      </argument>
    </service>
    <service id="fos_rest.body_listener" class="FOS\RestBundle\EventListener\BodyListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="10"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="fos_rest.decoder_provider"/>
      <argument>false</argument>
      <call method="setDefaultFormat">
        <argument>null</argument>
      </call>
    </service>
    <service id=".service_locator.CE6DdyV" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fos_rest.decoder.json" type="service_closure" id="fos_rest.decoder.json"/>
        <argument key="fos_rest.decoder.xml" type="service_closure" id="fos_rest.decoder.xml"/>
      </argument>
    </service>
    <service id="fos_rest.format_listener" class="FOS\RestBundle\EventListener\FormatListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="34"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="fos_rest.format_negotiator"/>
    </service>
    <service id="fos_rest.format_negotiator" class="FOS\RestBundle\Negotiation\FormatNegotiator">
      <argument type="service" id="request_stack"/>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.7e437a1bd0410de47b53737cedd3a1da2e51036b14ed3da048d3b9639aa83b903d1e4c5e"/>
        <argument type="collection">
          <argument key="priorities" type="collection">
            <argument>html</argument>
          </argument>
          <argument key="fallback_format">html</argument>
          <argument key="methods">null</argument>
          <argument key="attributes" type="collection"/>
          <argument key="stop">false</argument>
          <argument key="prefer_extension" type="string">2.0</argument>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.35012096133f739bdc6bcc2346b6a5e2436616e6ba71f4b09b9fe43dc74bab79257b9bf8"/>
        <argument type="collection">
          <argument key="priorities" type="collection">
            <argument>html</argument>
          </argument>
          <argument key="fallback_format">html</argument>
          <argument key="methods">null</argument>
          <argument key="attributes" type="collection"/>
          <argument key="stop">false</argument>
          <argument key="prefer_extension" type="string">2.0</argument>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478"/>
        <argument type="collection">
          <argument key="priorities" type="collection">
            <argument>json</argument>
          </argument>
          <argument key="fallback_format">json</argument>
          <argument key="prefer_extension" type="string">2.0</argument>
          <argument key="methods">null</argument>
          <argument key="attributes" type="collection"/>
          <argument key="stop">false</argument>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.event_dispatcher.service_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="jms_serializer.traceable_runs_listener" type="service_closure" id="jms_serializer.traceable_runs_listener"/>
        <argument key="jms_serializer.doctrine_proxy_subscriber" type="service_closure" id="jms_serializer.doctrine_proxy_subscriber"/>
        <argument key="hateoas.event_listener.xml" type="service_closure" id="hateoas.event_listener.xml"/>
        <argument key="hateoas.event_listener.json" type="service_closure" id="hateoas.event_listener.json"/>
      </argument>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber">
      <tag name="jms_serializer.event_subscriber"/>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.handler_registry.service_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="pagerfanta.serializer.handler" type="service_closure" id="pagerfanta.serializer.handler"/>
        <argument key="jms_serializer.array_collection_handler" type="service_closure" id="jms_serializer.array_collection_handler"/>
        <argument key="jms_serializer.constraint_violation_handler" type="service_closure" id="jms_serializer.constraint_violation_handler"/>
        <argument key="jms_serializer.datetime_handler" type="service_closure" id="jms_serializer.datetime_handler"/>
        <argument key="jms_serializer.iterator_handler" type="service_closure" id="jms_serializer.iterator_handler"/>
        <argument key="jms_serializer.symfony_uid_handler" type="service_closure" id="jms_serializer.symfony_uid_handler"/>
        <argument key="fos_rest.serializer.form_error_handler" type="service_closure" id="fos_rest.serializer.form_error_handler"/>
      </argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sP</argument>
      <argument>Europe/Berlin</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.iterator_handler" class="JMS\Serializer\Handler\IteratorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.symfony_uid_handler" class="JMS\Serializer\Handler\SymfonyUidHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>canonical</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.type_parser" class="JMS\Serializer\Type\Parser"/>
    <service id="jms_serializer.metadata.yaml_driver" class="JMS\Serializer\Metadata\Driver\YamlDriver">
      <argument type="service" id="jms_serializer.metadata.traceable_file_locator"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.xml_driver" class="JMS\Serializer\Metadata\Driver\XmlDriver">
      <argument type="service" id="jms_serializer.metadata.traceable_file_locator"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.annotation_driver" class="JMS\Serializer\Metadata\Driver\AnnotationDriver">
      <argument type="service" id="jms_serializer.metadata.annotation_and_attributes_reader"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.chain_driver" class="Metadata\Driver\DriverChain">
      <argument type="collection">
        <argument type="service" id="jms_serializer.metadata.yaml_driver"/>
        <argument type="service" id="jms_serializer.metadata.xml_driver"/>
        <argument type="service" id="jms_serializer.metadata.annotation_driver"/>
      </argument>
    </service>
    <service id="jms_serializer.metadata.doctrine_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.type_parser"/>
    </service>
    <service id="jms_serializer.metadata.doctrine_phpcr_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver">
      <argument></argument>
      <argument type="service" id="doctrine_phpcr"/>
      <argument type="service" id="jms_serializer.type_parser"/>
    </service>
    <service id="jms_serializer.metadata.typed_properties_driver" class="JMS\Serializer\Metadata\Driver\TypedPropertiesDriver">
      <argument type="service" id="jms_serializer.metadata.doctrine_type_driver"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.doc_block_driver" class="JMS\Serializer\Metadata\Driver\DocBlockDriver">
      <argument type="service" id="jms_serializer.metadata.doc_block_driver.inner"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.service_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="metadata_driver" type="service_closure" id="jms_serializer.metadata.typed_properties_driver"/>
      </argument>
    </service>
    <service id="jms_serializer.metadata.lazy_loading_driver" class="Metadata\Driver\LazyLoadingDriver">
      <argument type="service" id="jms_serializer.metadata.service_locator"/>
      <argument>metadata_driver</argument>
    </service>
    <service id="jms_serializer.metadata.cache.file_cache" class="Metadata\Cache\FileCache">
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/jms_serializer</argument>
    </service>
    <service id="jms_serializer.version_exclusion_strategy" class="JMS\Serializer\Exclusion\VersionExclusionStrategy" abstract="true"/>
    <service id="jms_serializer.camel_case_naming_strategy" class="JMS\Serializer\Naming\CamelCaseNamingStrategy">
      <argument>_</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.identical_property_naming_strategy" class="JMS\Serializer\Naming\IdenticalPropertyNamingStrategy"/>
    <service id="jms_serializer.serialized_name_annotation_strategy" class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy">
      <argument type="service" id="jms_serializer.camel_case_naming_strategy"/>
    </service>
    <service id="jms_serializer.doctrine_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="string">null</argument>
    </service>
    <service id="jms_serializer.doctrine_phpcr_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor">
      <argument type="service" id="doctrine_phpcr"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor"/>
    <service id="jms_serializer.serializer" class="JMS\Serializer\Serializer">
      <argument type="service" id="jms_serializer.traceable_metadata_factory"/>
      <argument type="collection">
        <argument key="2" type="service" id="jms_serializer.deserialization_graph_navigator_factory"/>
        <argument key="1" type="service" id="jms_serializer.serialization_graph_navigator_factory"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="jms_serializer.json_serialization_visitor"/>
        <argument key="xml" type="service" id="jms_serializer.xml_serialization_visitor"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="jms_serializer.json_deserialization_visitor"/>
        <argument key="xml" type="service" id="jms_serializer.xml_deserialization_visitor"/>
      </argument>
      <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.deserialization_graph_navigator_factory" class="JMS\Serializer\GraphNavigator\Factory\DeserializationGraphNavigatorFactory">
      <argument type="service" id="jms_serializer.traceable_metadata_factory"/>
      <argument type="service" id="jms_serializer.traceable_handler_registry"/>
      <argument type="service" id="jms_serializer.doctrine_object_constructor"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
      <argument type="service" id="jms_serializer.traceable_event_dispatcher"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.serialization_graph_navigator_factory" class="JMS\Serializer\GraphNavigator\Factory\SerializationGraphNavigatorFactory">
      <argument type="service" id="jms_serializer.traceable_metadata_factory"/>
      <argument type="service" id="jms_serializer.traceable_handler_registry"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
      <argument type="service" id="jms_serializer.traceable_event_dispatcher"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.expression_evaluator" class="JMS\Serializer\Expression\ExpressionEvaluator">
      <argument type="service" id="jms_serializer.expression_language"/>
      <argument type="collection">
        <argument key="container" type="service" id="service_container"/>
      </argument>
    </service>
    <service id="jms_serializer.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <call method="registerProvider">
        <argument type="service" id="jms_serializer.expression_language.function_provider"/>
      </call>
      <call method="registerProvider">
        <argument type="service" id="hateoas.expression.link_expression_function"/>
      </call>
    </service>
    <service id="jms_serializer.expression_language.function_provider" class="JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider">
      <tag name="jms.expression.function_provider"/>
    </service>
    <service id="jms_serializer.twig_extension.runtime_serializer" class="JMS\Serializer\Twig\SerializerRuntimeExtension">
      <tag name="twig.extension"/>
      <argument>jms_</argument>
    </service>
    <service id="jms_serializer.twig_extension.serializer_runtime_helper" class="JMS\Serializer\Twig\SerializerRuntimeHelper">
      <tag name="twig.runtime"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.accessor_strategy.default" class="JMS\Serializer\Accessor\DefaultAccessorStrategy">
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\Visitor\Factory\JsonSerializationVisitorFactory">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <call method="setOptions">
        <argument>1024</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\Visitor\Factory\JsonDeserializationVisitorFactory">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <argument>false</argument>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\Visitor\Factory\XmlSerializationVisitorFactory">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <call method="setFormatOutput">
        <argument>true</argument>
      </call>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\Visitor\Factory\XmlDeserializationVisitorFactory">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
    </service>
    <service id="jms_serializer.cache.cache_clearer" class="JMS\SerializerBundle\Cache\CacheClearer">
      <tag name="kernel.cache_clearer"/>
      <argument type="service" id="jms_serializer.metadata.cache.file_cache"/>
    </service>
    <service id="jms_serializer.configured_serialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory"/>
    <service id="jms_serializer.configured_deserialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory"/>
    <service id="data_collector.jms_serializer" class="JMS\SerializerBundle\Debug\DataCollector">
      <tag name="data_collector" id="jms_serializer" template="@JMSSerializer/Collector/panel.html.twig"/>
      <argument type="collection"/>
      <argument type="service" id="jms_serializer.traceable_event_dispatcher"/>
      <argument type="service" id="jms_serializer.traceable_handler_registry"/>
      <argument type="service" id="jms_serializer.traceable_metadata_factory"/>
      <argument type="service" id="jms_serializer.metadata.traceable_file_locator"/>
      <argument type="service" id="jms_serializer.traceable_runs_listener"/>
    </service>
    <service id="jms_serializer.traceable_event_dispatcher" class="JMS\SerializerBundle\Debug\TraceableEventDispatcher">
      <argument type="service" id="jms_serializer.event_dispatcher.service_locator"/>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.traceable_runs_listener</argument>
          <argument>saveRunInfo</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerializeTypedProxy</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>Doctrine\Persistence\Proxy</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerializeTypedProxy</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>Doctrine\Common\Persistence\Proxy</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>Doctrine\ORM\PersistentCollection</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>Doctrine\Persistence\Proxy</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>Doctrine\Common\Persistence\Proxy</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>ProxyManager\Proxy\LazyLoadingInterface</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_deserialize</argument>
        <argument type="collection">
          <argument>jms_serializer.traceable_runs_listener</argument>
          <argument>saveRunInfo</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
      <call method="addListener">
        <argument>serializer.post_serialize</argument>
        <argument type="collection">
          <argument>hateoas.event_listener.xml</argument>
          <argument>onPostSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>xml</argument>
        <argument>null</argument>
      </call>
      <call method="addListener">
        <argument>serializer.post_serialize</argument>
        <argument type="collection">
          <argument>hateoas.event_listener.json</argument>
          <argument>onPostSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>json</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="jms_serializer.traceable_runs_listener" class="JMS\SerializerBundle\Debug\RunsListener">
      <tag name="jms_serializer.event_listener" event="serializer.pre_serialize" method="saveRunInfo"/>
      <tag name="jms_serializer.event_listener" event="serializer.pre_deserialize" method="saveRunInfo"/>
    </service>
    <service id="jms_serializer.traceable_metadata_factory" class="JMS\SerializerBundle\Debug\TraceableMetadataFactory">
      <tag name="container.decorator" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.traceable_metadata_factory.inner"/>
    </service>
    <service id="jms_serializer.traceable_handler_registry" class="JMS\SerializerBundle\Debug\TraceableHandlerRegistry">
      <tag name="container.decorator" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.traceable_handler_registry.inner"/>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Pagerfanta\Pagerfanta</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>pagerfanta.serializer.handler</argument>
          <argument>serializeToJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Pagerfanta\PagerfantaInterface</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>pagerfanta.serializer.handler</argument>
          <argument>serializeToJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>ArrayCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>ArrayCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\Common\Collections\ArrayCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\Common\Collections\ArrayCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ORM\PersistentCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ORM\PersistentCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Validator\ConstraintViolationList</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.constraint_violation_handler</argument>
          <argument>serializeListToxml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Validator\ConstraintViolationList</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.constraint_violation_handler</argument>
          <argument>serializeListTojson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Validator\ConstraintViolation</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.constraint_violation_handler</argument>
          <argument>serializeViolationToxml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Validator\ConstraintViolation</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.constraint_violation_handler</argument>
          <argument>serializeViolationTojson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateTime</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateTime</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateTime</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateTime</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateTimeImmutable</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateTimeImmutable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateTimeImmutable</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateTimeImmutable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateInterval</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateInterval</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateInterval</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateInterval</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateTimeInterface</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateTimeInterface</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateTimeInterface</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateTimeInterface</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Iterator</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>serializeIterable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Iterator</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>serializeIterable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>ArrayIterator</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>serializeIterable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>ArrayIterator</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>serializeIterable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Generator</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>serializeIterable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Generator</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>serializeIterable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\Ulid</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\Ulid</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\Uuid</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\Uuid</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\UuidV1</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\UuidV1</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\UuidV3</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\UuidV3</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\UuidV4</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\UuidV4</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\UuidV5</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\UuidV5</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\UuidV6</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\UuidV6</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\UuidV7</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\UuidV7</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\UuidV8</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Uid\UuidV8</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>serializeUid</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Form\Form</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>fos_rest.serializer.form_error_handler</argument>
          <argument>serializeFormToxml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Form\Form</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>fos_rest.serializer.form_error_handler</argument>
          <argument>serializeFormTojson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Form\FormInterface</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>fos_rest.serializer.form_error_handler</argument>
          <argument>serializeFormToXml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Form\FormInterface</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>fos_rest.serializer.form_error_handler</argument>
          <argument>serializeFormToJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Form\FormError</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>fos_rest.serializer.form_error_handler</argument>
          <argument>serializeFormErrorToxml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Form\FormError</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>fos_rest.serializer.form_error_handler</argument>
          <argument>serializeFormErrorTojson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>ArrayCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>ArrayCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\Common\Collections\ArrayCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\Common\Collections\ArrayCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ORM\PersistentCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ORM\PersistentCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateTime</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateTimeFromjson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateTime</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateTimeFromxml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateTimeImmutable</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateTimeImmutableFromjson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateTimeImmutable</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateTimeImmutableFromxml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateInterval</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateIntervalFromjson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateInterval</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateIntervalFromxml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateTimeInterface</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateTimeFromJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateTimeInterface</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateTimeFromXml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Iterator</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>deserializeIterator</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Iterator</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>deserializeIterator</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>ArrayIterator</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>deserializeIterator</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>ArrayIterator</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>deserializeIterator</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Generator</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>deserializeGenerator</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Generator</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>deserializeGenerator</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\Ulid</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\Ulid</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromXml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\Uuid</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\Uuid</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromXml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\UuidV1</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\UuidV1</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromXml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\UuidV3</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\UuidV3</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromXml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\UuidV4</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\UuidV4</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromXml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\UuidV5</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\UuidV5</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromXml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\UuidV6</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\UuidV6</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromXml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\UuidV7</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\UuidV7</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromXml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\UuidV8</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Symfony\Component\Uid\UuidV8</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.symfony_uid_handler</argument>
          <argument>deserializeUidFromXml</argument>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.metadata.traceable_file_locator" class="JMS\SerializerBundle\Debug\TraceableFileLocator">
      <tag name="container.decorator" id="jms_serializer.metadata.file_locator"/>
      <argument type="service" id="jms_serializer.metadata.traceable_file_locator.inner"/>
    </service>
    <service id="jms_serializer.metadata.annotation_and_attributes_reader" class="JMS\Serializer\Metadata\Driver\AttributeDriver\AttributeReader">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="hateoas.link_factory" class="Hateoas\Factory\LinkFactory">
      <argument type="service" id="hateoas.generator.registry"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="hateoas.links_factory" class="Hateoas\Factory\LinksFactory">
      <argument type="service" id="hateoas.configuration.metadata_factory"/>
      <argument type="service" id="hateoas.link_factory"/>
      <argument type="service" id="hateoas.serializer.exclusion_manager"/>
    </service>
    <service id="hateoas.embeds_factory" class="Hateoas\Factory\EmbeddedsFactory">
      <argument type="service" id="hateoas.configuration.metadata_factory"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
      <argument type="service" id="hateoas.serializer.exclusion_manager"/>
    </service>
    <service id="hateoas.serializer.xml" class="Hateoas\Serializer\XmlSerializer"/>
    <service id="hateoas.serializer.json_hal" class="Hateoas\Serializer\JsonHalSerializer"/>
    <service id="hateoas.serializer.exclusion.expression_language_strategy" class="JMS\Serializer\Exclusion\ExpressionLanguageExclusionStrategy">
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="hateoas.serializer.exclusion_manager" class="Hateoas\Serializer\ExclusionManager">
      <argument type="service" id="hateoas.serializer.exclusion.expression_language_strategy"/>
    </service>
    <service id="hateoas.event_listener.xml" class="Hateoas\Serializer\AddRelationsListener" public="true">
      <tag name="jms_serializer.event_listener" event="serializer.post_serialize" format="xml" method="onPostSerialize"/>
      <argument type="service" id="hateoas.serializer.xml"/>
      <argument type="service" id="hateoas.links_factory"/>
      <argument type="service" id="hateoas.embeds_factory"/>
      <argument type="service" id="hateoas.inline_deferrer.embeds"/>
      <argument type="service" id="hateoas.inline_deferrer.links"/>
    </service>
    <service id="hateoas.event_listener.json" class="Hateoas\Serializer\AddRelationsListener" public="true">
      <tag name="jms_serializer.event_listener" event="serializer.post_serialize" format="json" method="onPostSerialize"/>
      <argument type="service" id="hateoas.serializer.json_hal"/>
      <argument type="service" id="hateoas.links_factory"/>
      <argument type="service" id="hateoas.embeds_factory"/>
      <argument type="service" id="hateoas.inline_deferrer.embeds"/>
      <argument type="service" id="hateoas.inline_deferrer.links"/>
    </service>
    <service id="hateoas.inline_deferrer.embeds" class="Hateoas\Serializer\Metadata\InlineDeferrer"/>
    <service id="hateoas.inline_deferrer.links" class="Hateoas\Serializer\Metadata\InlineDeferrer"/>
    <service id="hateoas.configuration.provider.chain" class="Hateoas\Configuration\Provider\ChainProvider">
      <argument type="collection">
        <argument type="service">
          <service class="Hateoas\Configuration\Provider\FunctionProvider">
            <tag name="hateoas.relation_provider"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Hateoas\Configuration\Provider\StaticMethodProvider">
            <tag name="hateoas.relation_provider"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Hateoas\Configuration\Provider\ExpressionEvaluatorProvider">
            <tag name="hateoas.relation_provider"/>
            <argument type="service" id="jms_serializer.expression_evaluator"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="hateoas.configuration.provider.function" class="Hateoas\Configuration\Provider\FunctionProvider">
      <tag name="hateoas.relation_provider"/>
    </service>
    <service id="hateoas.configuration.provider.static_method" class="Hateoas\Configuration\Provider\StaticMethodProvider">
      <tag name="hateoas.relation_provider"/>
    </service>
    <service id="hateoas.configuration.provider.expression" class="Hateoas\Configuration\Provider\ExpressionEvaluatorProvider">
      <tag name="hateoas.relation_provider"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="hateoas.configuration.metadata.yaml_driver" class="Hateoas\Configuration\Metadata\Driver\YamlDriver">
      <argument type="service" id="jms_serializer.metadata.traceable_file_locator"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
      <argument type="service" id="hateoas.configuration.provider.chain"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="hateoas.configuration.metadata.xml_driver" class="Hateoas\Configuration\Metadata\Driver\XmlDriver">
      <argument type="service" id="jms_serializer.metadata.traceable_file_locator"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
      <argument type="service" id="hateoas.configuration.provider.chain"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="hateoas.configuration.metadata.annotation_driver" class="Hateoas\Configuration\Metadata\Driver\AnnotationDriver">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
      <argument type="service" id="hateoas.configuration.provider.chain"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="hateoas.configuration.metadata.extension_driver" class="Hateoas\Configuration\Metadata\Driver\ExtensionDriver">
      <argument type="service" id="hateoas.configuration.metadata.annotation_driver"/>
    </service>
    <service id="hateoas.configuration.metadata.chain_driver" class="Metadata\Driver\DriverChain">
      <argument type="collection">
        <argument type="service" id="hateoas.configuration.metadata.yaml_driver"/>
        <argument type="service" id="hateoas.configuration.metadata.xml_driver"/>
        <argument type="service" id="hateoas.configuration.metadata.extension_driver"/>
      </argument>
    </service>
    <service id="hateoas.configuration.metadata.lazy_loading_driver" class="Metadata\Driver\LazyLoadingDriver">
      <argument type="service" id="service_container"/>
      <argument>hateoas.configuration.metadata_driver</argument>
    </service>
    <service id="hateoas.configuration.metadata.cache.file_cache" class="Metadata\Cache\FileCache">
      <argument>/home/loic/www/sylius/SyliusResourceBundle/tests/Application/var/cache/test/hateoas</argument>
    </service>
    <service id="hateoas.configuration.metadata_factory" class="Metadata\MetadataFactory">
      <argument type="service" id="hateoas.configuration.metadata.lazy_loading_driver"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="hateoas.configuration.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="hateoas.generator.registry" class="Hateoas\UrlGenerator\UrlGeneratorRegistry" public="true">
      <argument type="service" id="hateoas.generator.symfony"/>
    </service>
    <service id="hateoas.generator.symfony" class="Hateoas\UrlGenerator\SymfonyUrlGenerator">
      <argument type="service" id="router.default"/>
    </service>
    <service id="hateoas.helper.link" class="Hateoas\Helper\LinkHelper" public="true">
      <argument type="service" id="hateoas.link_factory"/>
      <argument type="service" id="hateoas.configuration.metadata_factory"/>
    </service>
    <service id="hateoas.expression.link_expression_function" class="Bazinga\Bundle\HateoasBundle\Expression\LinkExpressionFunction">
      <tag name="jms.expression.function_provider"/>
    </service>
    <service id="hateoas.twig.link" class="Hateoas\Twig\Extension\LinkExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="hateoas.helper.link"/>
    </service>
    <service id="fidry_alice_data_fixtures.loader.multipass_file" class="Fidry\AliceDataFixtures\Loader\MultiPassLoader" lazy="true">
      <argument type="service" id="nelmio_alice.file_loader.simple"/>
      <deprecated package="theofidry/alice-data-fixtures" version="1.0">The service "%service_id%" is deprecated and will be removed in future versions.</deprecated>
    </service>
    <service id="fidry_alice_data_fixtures.loader.simple" class="Fidry\AliceDataFixtures\Loader\SimpleLoader" lazy="true">
      <argument type="service" id="nelmio_alice.files_loader.simple"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
    </service>
    <service id="fidry_alice_data_fixtures.doctrine.purger_loader" class="Fidry\AliceDataFixtures\Loader\PurgerLoader" lazy="true">
      <argument type="service" id="fidry_alice_data_fixtures.doctrine.persister_loader"/>
      <argument type="service" id="fidry_alice_data_fixtures.persistence.doctrine.purger.purger_factory"/>
      <argument>delete</argument>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
    </service>
    <service id="fidry_alice_data_fixtures.doctrine.persister_loader" class="Fidry\AliceDataFixtures\Loader\PersisterLoader" lazy="true">
      <argument type="service" id="fidry_alice_data_fixtures.loader.simple"/>
      <argument type="service" id="fidry_alice_data_fixtures.persistence.persister.doctrine.object_manager_persister"/>
      <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      <argument type="collection"/>
    </service>
    <service id="fidry_alice_data_fixtures.persistence.doctrine.purger.purger_factory" class="Fidry\AliceDataFixtures\Bridge\Doctrine\Purger\Purger" lazy="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="fidry_alice_data_fixtures.persistence.purger_modepurger_mode" class="Fidry\AliceDataFixtures\Persistence\PurgeMode" constructor="createDeleteMode">
      <deprecated package="theofidry/alice-data-fixtures" version="1.0">The service "%service_id%" is deprecated and will be removed in future versions.Inject the purger or purger factory directly instead.</deprecated>
    </service>
    <service id="fidry_alice_data_fixtures.persistence.persister.doctrine.object_manager_persister" class="Fidry\AliceDataFixtures\Bridge\Doctrine\Persister\ObjectManagerPersister" lazy="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.simple_fixture_bag_denormalizer" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\SimpleFixtureBagDenormalizer">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.tolerant_denormalizer"/>
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.element"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.tolerant_denormalizer" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\TolerantFixtureDenormalizer">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.registry_denormalizer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.registry_denormalizer" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\FixtureDenormalizerRegistry">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.element"/>
      <argument type="collection">
        <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.simple_list"/>
        <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.reference_range_name"/>
        <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.simple_range"/>
        <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.simple"/>
      </argument>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.null_list" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\Chainable\NullListNameDenormalizer"/>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.temporary_list" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\Chainable\CollectionDenormalizerWithTemporaryFixture">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.null_list"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.simple_list" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\Chainable\SimpleCollectionDenormalizer">
      <tag name="nelmio_alice.fixture_builder.denormalizer.chainable_fixture_denormalizer"/>
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.temporary_list"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.null_range" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\Chainable\NullRangeNameDenormalizer"/>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.reference_range_name" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\Chainable\ReferenceRangeNameDenormalizer">
      <tag name="nelmio_alice.fixture_builder.denormalizer.chainable_fixture_denormalizer"/>
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.specs.simple"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.temporary_range" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\Chainable\CollectionDenormalizerWithTemporaryFixture">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.null_range"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.simple_range" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\Chainable\SimpleCollectionDenormalizer">
      <tag name="nelmio_alice.fixture_builder.denormalizer.chainable_fixture_denormalizer"/>
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.temporary_range"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.chainable.simple" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\Chainable\SimpleDenormalizer">
      <tag name="nelmio_alice.fixture_builder.denormalizer.chainable_fixture_denormalizer"/>
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.specs.simple"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.specs.simple" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\SpecificationBagDenormalizer\SimpleSpecificationsDenormalizer">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor.legacy_constructor_denormalizer"/>
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.property.simple_denormalizer"/>
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.simple_denormalizer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor.legacy_constructor_denormalizer" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\SpecificationBagDenormalizer\Constructor\LegacyConstructorDenormalizer">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor.constructor_denormalizer"/>
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor.factory_denormalizer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor.factory_denormalizer" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\SpecificationBagDenormalizer\Constructor\FactoryDenormalizer">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.simple_denormalizer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor.constructor_denormalizer" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\SpecificationBagDenormalizer\Constructor\ConstructorDenormalizer">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.arguments.simple_arguments_denormalizer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.arguments.simple_arguments_denormalizer" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\SpecificationBagDenormalizer\Arguments\SimpleArgumentsDenormalizer">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.value.unique_value_denormalizer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.value.unique_value_denormalizer" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\SpecificationBagDenormalizer\Value\UniqueValueDenormalizer">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.value.simple_value_denormalizer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.value.simple_value_denormalizer" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\SpecificationBagDenormalizer\Value\SimpleValueDenormalizer">
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.function_fixture_reference_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.property.simple_denormalizer" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\SpecificationBagDenormalizer\Property\SimplePropertyDenormalizer">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.value.unique_value_denormalizer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.simple_denormalizer" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\SpecificationBagDenormalizer\Calls\CallsWithFlagsDenormalizer">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.function_denormalizer"/>
      <argument type="collection">
        <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.method_flag_handler.configurator_flag_handler"/>
        <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.method_flag_handler.optional_flag_handler"/>
      </argument>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.function_denormalizer" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\SpecificationBagDenormalizer\Calls\FunctionDenormalizer">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.arguments.simple_arguments_denormalizer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.method_flag_handler.configurator_flag_handler" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\SpecificationBagDenormalizer\Calls\MethodFlagHandler\ConfiguratorFlagHandler">
      <tag name="nelmio_alice.fixture_builder.denormalizer.chainable_method_flag_handler"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.method_flag_handler.optional_flag_handler" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Fixture\SpecificationBagDenormalizer\Calls\MethodFlagHandler\OptionalFlagHandler">
      <tag name="nelmio_alice.fixture_builder.denormalizer.chainable_method_flag_handler"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.flag_parser.element" class="Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\ElementFlagParser">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.registry"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.flag_parser.registry" class="Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\FlagParserRegistry">
      <argument type="collection">
        <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.configurator"/>
        <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.extend"/>
        <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.optional"/>
        <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.template"/>
        <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.unique"/>
      </argument>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.configurator" class="Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\ConfiguratorFlagParser">
      <tag name="nelmio_alice.fixture_builder.denormalizer.chainable_flag_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.extend" class="Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\ExtendFlagParser">
      <tag name="nelmio_alice.fixture_builder.denormalizer.chainable_flag_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.optional" class="Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\OptionalFlagParser">
      <tag name="nelmio_alice.fixture_builder.denormalizer.chainable_flag_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.template" class="Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\TemplateFlagParser">
      <tag name="nelmio_alice.fixture_builder.denormalizer.chainable_flag_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.unique" class="Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\UniqueFlagParser">
      <tag name="nelmio_alice.fixture_builder.denormalizer.chainable_flag_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.registry" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\TokenParserRegistry">
      <argument type="collection">
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.dynamic_array_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.escaped_value_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.fixture_list_reference_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.fixture_method_reference_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.fixture_range_reference_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.method_reference_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.optional_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.parameter_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.property_reference_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.variable_reference_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.simple_reference_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.string_array_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.string_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.tolerant_function_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.variable_token_parser"/>
        <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.wildcard_reference_token_parser"/>
      </argument>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.argument_escaper" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\ArgumentEscaper"/>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.dynamic_array_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\DynamicArrayTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.escaped_value_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\EscapedValueTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.fixture_list_reference_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\FixtureListReferenceTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.fixture_method_reference_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\FixtureMethodReferenceTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.fixture_range_reference_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\FixtureRangeReferenceTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.method_reference_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\MethodReferenceTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.optional_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\OptionalTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.parameter_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\ParameterTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.property_reference_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\PropertyReferenceTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.variable_reference_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\VariableReferenceTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.simple_reference_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\SimpleReferenceTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.string_array_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\StringArrayTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.string_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\StringTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.argument_escaper"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.tolerant_function_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\TolerantFunctionTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.identity_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.identity_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\IdentityTokenParser">
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.function_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.function_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\FunctionTokenParser">
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.argument_escaper"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.variable_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\VariableTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.chainable.wildcard_reference_token_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\TokenParser\Chainable\WildcardReferenceTokenParser">
      <tag name="nelmio_alice.fixture_builder.expression_language.chainable_token_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.lexer.empty_value_lexer" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Lexer\EmptyValueLexer">
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.lexer.reference_escaper_lexer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.lexer.reference_escaper_lexer" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Lexer\ReferenceEscaperLexer">
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.lexer.globals_patterns_lexer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.lexer.globals_patterns_lexer" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Lexer\GlobalPatternsLexer">
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.lexer.function_lexer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.lexer.function_lexer" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Lexer\FunctionLexer">
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.lexer.string_then_reference_lexer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.lexer.string_then_reference_lexer" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Lexer\StringThenReferenceLexer">
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.lexer.sub_patterns_lexer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.lexer.sub_patterns_lexer" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Lexer\SubPatternsLexer">
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.lexer.reference_lexer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.lexer.reference_lexer" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Lexer\ReferenceLexer"/>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.function_fixture_reference_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\FunctionFixtureReferenceParser">
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.string_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.string_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\StringMergerParser">
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.simple_parser"/>
    </service>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.simple_parser" class="Nelmio\Alice\FixtureBuilder\ExpressionLanguage\Parser\SimpleParser">
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.lexer.empty_value_lexer"/>
      <argument type="service" id="nelmio_alice.fixture_builder.expression_language.parser.token_parser.registry"/>
    </service>
    <service id="nelmio_alice.fixture_builder.simple" class="Nelmio\Alice\FixtureBuilder\SimpleBuilder">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.simple"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.simple" class="Nelmio\Alice\FixtureBuilder\Denormalizer\SimpleDenormalizer">
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.parameter.simple_parameter_bag_denormalizer"/>
      <argument type="service" id="nelmio_alice.fixture_builder.denormalizer.fixture.simple_fixture_bag_denormalizer"/>
    </service>
    <service id="nelmio_alice.fixture_builder.denormalizer.parameter.simple_parameter_bag_denormalizer" class="Nelmio\Alice\FixtureBuilder\Denormalizer\Parameter\SimpleParameterBagDenormalizer"/>
    <service id="nelmio_alice.file_locator.default" class="Nelmio\Alice\FileLocator\DefaultFileLocator"/>
    <service id="nelmio_alice.faker.generator" class="Faker\Generator">
      <argument>en_US</argument>
      <call method="seed">
        <argument>1</argument>
      </call>
      <call method="addProvider">
        <argument type="service" id="nelmio_alice.faker.provider.alice"/>
      </call>
      <factory class="Faker\Factory" method="create"/>
    </service>
    <service id="nelmio_alice.faker.provider.alice" class="Nelmio\Alice\Faker\Provider\AliceProvider">
      <tag name="nelmio_alice.faker.provider"/>
    </service>
    <service id="nelmio_alice.property_accessor.std" class="Nelmio\Alice\PropertyAccess\StdPropertyAccessor">
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="nelmio_alice.generator.resolver.parameter_bag.remove_conflicting_parameters" class="Nelmio\Alice\Generator\Resolver\Parameter\RemoveConflictingParametersParameterBagResolver">
      <argument type="service" id="nelmio_alice.generator.resolver.parameter_bag.simple"/>
    </service>
    <service id="nelmio_alice.generator.resolver.parameter_bag.simple" class="Nelmio\Alice\Generator\Resolver\Parameter\SimpleParameterBagResolver">
      <argument type="service" id="nelmio_alice.generator.resolver.parameter.registry"/>
    </service>
    <service id="nelmio_alice.generator.resolver.parameter.registry" class="Nelmio\Alice\Generator\Resolver\Parameter\ParameterResolverRegistry">
      <argument type="collection">
        <argument type="service" id="nelmio_alice.generator.resolver.parameter.chainable.static_parameter_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.parameter.chainable.array_parameter_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.parameter.chainable.recursive_parameter_resolver"/>
      </argument>
    </service>
    <service id="nelmio_alice.generator.resolver.parameter.chainable.static_parameter_resolver" class="Nelmio\Alice\Generator\Resolver\Parameter\Chainable\StaticParameterResolver">
      <tag name="nelmio_alice.generator.resolver.parameter.chainable_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.parameter.chainable.array_parameter_resolver" class="Nelmio\Alice\Generator\Resolver\Parameter\Chainable\ArrayParameterResolver">
      <tag name="nelmio_alice.generator.resolver.parameter.chainable_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.parameter.chainable.recursive_parameter_resolver" class="Nelmio\Alice\Generator\Resolver\Parameter\Chainable\RecursiveParameterResolver">
      <tag name="nelmio_alice.generator.resolver.parameter.chainable_resolver"/>
      <argument type="service" id="nelmio_alice.generator.resolver.parameter.chainable.string_parameter_resolver"/>
      <argument>5</argument>
    </service>
    <service id="nelmio_alice.generator.resolver.parameter.chainable.string_parameter_resolver" class="Nelmio\Alice\Generator\Resolver\Parameter\Chainable\StringParameterResolver"/>
    <service id="nelmio_alice.generator.resolver.fixture_bag.template_bag" class="Nelmio\Alice\Generator\Resolver\Fixture\TemplateFixtureBagResolver"/>
    <service id="nelmio_alice.generator.named_arguments_resolver" class="Nelmio\Alice\Generator\NamedArgumentsResolver"/>
    <service id="nelmio_alice.generator.resolver.value.registry" class="Nelmio\Alice\Generator\Resolver\Value\ValueResolverRegistry">
      <argument type="collection">
        <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.array_value_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.dynamic_array_value_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.evaluated_value_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.function_argument_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.fixture_property_reference_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.fixture_method_call_reference_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.unresolved_fixture_reference_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.fixture_wildcard_reference_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.list_value_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.optional_value_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.parameter_value_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.unique_value_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.value_for_current_value_resolver"/>
        <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.variable_value_resolver"/>
      </argument>
    </service>
    <service id="nelmio_alice.generator.resolver.value.unique_values_pool" class="Nelmio\Alice\Generator\Resolver\UniqueValuesPool"/>
    <service id="nelmio_alice.generator.resolver.value.chainable.array_value_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\ArrayValueResolver">
      <tag name="nelmio_alice.generator.resolver.value.chainable_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.dynamic_array_value_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\DynamicArrayValueResolver">
      <tag name="nelmio_alice.generator.resolver.value.chainable_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.evaluated_value_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\EvaluatedValueResolver">
      <tag name="nelmio_alice.generator.resolver.value.chainable_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.faker_value_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\FakerFunctionCallValueResolver">
      <argument type="service" id="nelmio_alice.faker.generator"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.php_value_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\PhpFunctionCallValueResolver">
      <argument>%nelmio_alice.functions_blacklist%</argument>
      <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.faker_value_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.function_argument_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\FunctionCallArgumentResolver">
      <tag name="nelmio_alice.generator.resolver.value.chainable_resolver"/>
      <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.php_value_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.fixture_property_reference_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\FixturePropertyReferenceResolver">
      <tag name="nelmio_alice.generator.resolver.value.chainable_resolver"/>
      <argument type="service" id="nelmio_alice.property_accessor.std"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.fixture_method_call_reference_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\FixtureMethodCallReferenceResolver">
      <tag name="nelmio_alice.generator.resolver.value.chainable_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.fixture_reference_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\FixtureReferenceResolver"/>
    <service id="nelmio_alice.generator.resolver.value.chainable.self_fixture_reference_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\SelfFixtureReferenceResolver">
      <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.fixture_reference_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.unresolved_fixture_reference_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\UnresolvedFixtureReferenceIdResolver">
      <tag name="nelmio_alice.generator.resolver.value.chainable_resolver"/>
      <argument type="service" id="nelmio_alice.generator.resolver.value.chainable.self_fixture_reference_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.fixture_wildcard_reference_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\FixtureWildcardReferenceResolver">
      <tag name="nelmio_alice.generator.resolver.value.chainable_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.list_value_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\ListValueResolver">
      <tag name="nelmio_alice.generator.resolver.value.chainable_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.optional_value_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\OptionalValueResolver">
      <tag name="nelmio_alice.generator.resolver.value.chainable_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.parameter_value_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\ParameterValueResolver">
      <tag name="nelmio_alice.generator.resolver.value.chainable_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.unique_value_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\UniqueValueResolver">
      <tag name="nelmio_alice.generator.resolver.value.chainable_resolver"/>
      <argument type="service" id="nelmio_alice.generator.resolver.value.unique_values_pool"/>
      <argument>null</argument>
      <argument>150</argument>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.value_for_current_value_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\ValueForCurrentValueResolver">
      <tag name="nelmio_alice.generator.resolver.value.chainable_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.value.chainable.variable_value_resolver" class="Nelmio\Alice\Generator\Resolver\Value\Chainable\VariableValueResolver">
      <tag name="nelmio_alice.generator.resolver.value.chainable_resolver"/>
    </service>
    <service id="nelmio_alice.generator.resolver.fixture_set.remove_conflicting_objects" class="Nelmio\Alice\Generator\Resolver\FixtureSet\RemoveConflictingObjectsResolver">
      <argument type="service" id="nelmio_alice.generator.resolver.fixture_set.simple"/>
    </service>
    <service id="nelmio_alice.generator.resolver.fixture_set.simple" class="Nelmio\Alice\Generator\Resolver\FixtureSet\SimpleFixtureSetResolver">
      <argument type="service" id="nelmio_alice.generator.resolver.parameter_bag.remove_conflicting_parameters"/>
      <argument type="service" id="nelmio_alice.generator.resolver.fixture_bag.template_bag"/>
    </service>
    <service id="nelmio_alice.generator.caller.simple" class="Nelmio\Alice\Generator\Caller\SimpleCaller">
      <argument type="service" id="nelmio_alice.generator.caller.registry"/>
      <argument type="service" id="nelmio_alice.generator.resolver.value.registry"/>
      <argument type="service" id="nelmio_alice.generator.named_arguments_resolver"/>
    </service>
    <service id="nelmio_alice.generator.caller.registry" class="Nelmio\Alice\Generator\Caller\CallProcessorRegistry">
      <argument type="collection">
        <argument type="service" id="nelmio_alice.generator.caller.chainable.configurator_method_call"/>
        <argument type="service" id="nelmio_alice.generator.caller.chainable.method_call_with_reference"/>
        <argument type="service" id="nelmio_alice.generator.caller.chainable.optional_method_call"/>
        <argument type="service" id="nelmio_alice.generator.caller.chainable.simple_call"/>
      </argument>
    </service>
    <service id="nelmio_alice.generator.caller.chainable.configurator_method_call" class="Nelmio\Alice\Generator\Caller\Chainable\ConfiguratorMethodCallProcessor">
      <tag name="nelmio_alice.generator.caller.chainable_call_processor"/>
    </service>
    <service id="nelmio_alice.generator.caller.chainable.method_call_with_reference" class="Nelmio\Alice\Generator\Caller\Chainable\MethodCallWithReferenceProcessor">
      <tag name="nelmio_alice.generator.caller.chainable_call_processor"/>
    </service>
    <service id="nelmio_alice.generator.caller.chainable.optional_method_call" class="Nelmio\Alice\Generator\Caller\Chainable\OptionalMethodCallProcessor">
      <tag name="nelmio_alice.generator.caller.chainable_call_processor"/>
    </service>
    <service id="nelmio_alice.generator.caller.chainable.simple_call" class="Nelmio\Alice\Generator\Caller\Chainable\SimpleMethodCallProcessor">
      <tag name="nelmio_alice.generator.caller.chainable_call_processor"/>
    </service>
    <service id="nelmio_alice.generator.instantiator.existing_instance" class="Nelmio\Alice\Generator\Instantiator\ExistingInstanceInstantiator">
      <argument type="service" id="nelmio_alice.generator.instantiator.resolver"/>
    </service>
    <service id="nelmio_alice.generator.instantiator.resolver" class="Nelmio\Alice\Generator\Instantiator\InstantiatorResolver">
      <argument type="service" id="nelmio_alice.generator.instantiator.registry"/>
    </service>
    <service id="nelmio_alice.generator.instantiator.registry" class="Nelmio\Alice\Generator\Instantiator\InstantiatorRegistry">
      <argument type="collection">
        <argument type="service" id="nelmio_alice.generator.instantiator.chainable.no_caller_method_instantiator"/>
        <argument type="service" id="nelmio_alice.generator.instantiator.chainable.null_constructor_instantiator"/>
        <argument type="service" id="nelmio_alice.generator.instantiator.chainable.no_method_call_instantiator"/>
        <argument type="service" id="nelmio_alice.generator.instantiator.chainable.static_factory_instantiator"/>
      </argument>
    </service>
    <service id="nelmio_alice.generator.instantiator.chainable.no_caller_method_instantiator" class="Nelmio\Alice\Generator\Instantiator\Chainable\NoCallerMethodCallInstantiator">
      <tag name="nelmio_alice.generator.instantiator.chainable_instantiator"/>
      <argument type="service" id="nelmio_alice.generator.named_arguments_resolver"/>
    </service>
    <service id="nelmio_alice.generator.instantiator.chainable.null_constructor_instantiator" class="Nelmio\Alice\Generator\Instantiator\Chainable\NullConstructorInstantiator">
      <tag name="nelmio_alice.generator.instantiator.chainable_instantiator"/>
    </service>
    <service id="nelmio_alice.generator.instantiator.chainable.no_method_call_instantiator" class="Nelmio\Alice\Generator\Instantiator\Chainable\NoMethodCallInstantiator">
      <tag name="nelmio_alice.generator.instantiator.chainable_instantiator"/>
    </service>
    <service id="nelmio_alice.generator.instantiator.chainable.static_factory_instantiator" class="Nelmio\Alice\Generator\Instantiator\Chainable\StaticFactoryInstantiator">
      <tag name="nelmio_alice.generator.instantiator.chainable_instantiator"/>
      <argument type="service" id="nelmio_alice.generator.named_arguments_resolver"/>
    </service>
    <service id="nelmio_alice.generator.hydrator.simple" class="Nelmio\Alice\Generator\Hydrator\SimpleHydrator">
      <argument type="service" id="nelmio_alice.generator.hydrator.property.symfony_property_access"/>
    </service>
    <service id="nelmio_alice.generator.hydrator.property.symfony_property_access" class="Nelmio\Alice\Generator\Hydrator\Property\SymfonyPropertyAccessorHydrator">
      <argument type="service" id="nelmio_alice.property_accessor.std"/>
    </service>
    <service id="nelmio_alice.generator.double_pass" class="Nelmio\Alice\Generator\DoublePassGenerator">
      <argument type="service" id="nelmio_alice.generator.resolver.fixture_set.remove_conflicting_objects"/>
      <argument type="service" id="nelmio_alice.generator.object_generator.complete"/>
    </service>
    <service id="nelmio_alice.generator.object_generator.complete" class="Nelmio\Alice\Generator\ObjectGenerator\CompleteObjectGenerator">
      <argument type="service" id="nelmio_alice.generator.object_generator.simple"/>
    </service>
    <service id="nelmio_alice.generator.object_generator.simple" class="Nelmio\Alice\Generator\ObjectGenerator\SimpleObjectGenerator">
      <argument type="service" id="nelmio_alice.generator.resolver.value.registry"/>
      <argument type="service" id="nelmio_alice.generator.instantiator.existing_instance"/>
      <argument type="service" id="nelmio_alice.generator.hydrator.simple"/>
      <argument type="service" id="nelmio_alice.generator.caller.simple"/>
    </service>
    <service id="nelmio_alice.data_loader.simple" class="Nelmio\Alice\Loader\SimpleDataLoader">
      <argument type="service" id="nelmio_alice.fixture_builder.simple"/>
      <argument type="service" id="nelmio_alice.generator.double_pass"/>
    </service>
    <service id="nelmio_alice.file_loader.simple" class="Nelmio\Alice\Loader\SimpleFileLoader">
      <argument type="service" id="nelmio_alice.file_parser.runtime_cache"/>
      <argument type="service" id="nelmio_alice.data_loader.simple"/>
    </service>
    <service id="nelmio_alice.files_loader.simple" class="Nelmio\Alice\Loader\SimpleFilesLoader">
      <argument type="service" id="nelmio_alice.file_parser.runtime_cache"/>
      <argument type="service" id="nelmio_alice.data_loader.simple"/>
    </service>
    <service id="nelmio_alice.file_parser.runtime_cache" class="Nelmio\Alice\Parser\RuntimeCacheParser">
      <argument type="service" id="nelmio_alice.file_parser.registry"/>
      <argument type="service" id="nelmio_alice.file_locator.default"/>
      <argument type="service" id="nelmio_alice.file_parser.default_include_processor"/>
    </service>
    <service id="nelmio_alice.file_parser.symfony_yaml" class="Symfony\Component\Yaml\Parser"/>
    <service id="nelmio_alice.file_parser.default_include_processor" class="Nelmio\Alice\Parser\IncludeProcessor\DefaultIncludeProcessor">
      <argument type="service" id="nelmio_alice.file_locator.default"/>
    </service>
    <service id="nelmio_alice.file_parser.registry" class="Nelmio\Alice\Parser\ParserRegistry">
      <argument type="collection">
        <argument type="service" id="nelmio_alice.file_parser.chainable.yaml"/>
        <argument type="service" id="nelmio_alice.file_parser.chainable.php"/>
        <argument type="service" id="nelmio_alice.file_parser.chainable.json"/>
      </argument>
    </service>
    <service id="nelmio_alice.file_parser.chainable.yaml" class="Nelmio\Alice\Parser\Chainable\YamlParser">
      <tag name="nelmio_alice.file_parser"/>
      <argument type="service" id="nelmio_alice.file_parser.symfony_yaml"/>
    </service>
    <service id="nelmio_alice.file_parser.chainable.php" class="Nelmio\Alice\Parser\Chainable\PhpParser">
      <tag name="nelmio_alice.file_parser"/>
    </service>
    <service id="nelmio_alice.file_parser.chainable.json" class="Nelmio\Alice\Parser\Chainable\JsonParser">
      <tag name="nelmio_alice.file_parser"/>
    </service>
    <service id="SM\Callback\CascadeTransitionCallback" class="SM\Callback\CascadeTransitionCallback" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="SM\Factory\Factory"/>
    </service>
    <service id="SM\Extension\Twig\SMExtension" class="SM\Extension\Twig\SMExtension" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="SM\Factory\Factory"/>
    </service>
    <service id="SM\Factory\Factory" class="SM\Factory\Factory" autowire="true" autoconfigure="true">
      <argument>%sm.configs%</argument>
      <argument type="service" id="event_dispatcher"/>
      <argument type="service" id="winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallbackFactory"/>
    </service>
    <service id="winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallbackFactory" class="winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallbackFactory" autowire="true" autoconfigure="true">
      <argument>winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallback</argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="winzou\Bundle\StateMachineBundle\Command\winzouStateMachineDebugCommand" class="winzou\Bundle\StateMachineBundle\Command\winzouStateMachineDebugCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>%sm.configs%</argument>
      <call method="setName">
        <argument>debug:winzou:state-machine</argument>
      </call>
    </service>
    <service id="sylius.grid_field.datetime" class="Sylius\Component\Grid\FieldTypes\DatetimeFieldType" public="true">
      <tag name="sylius.grid_field" type="datetime"/>
      <argument type="service" id="sylius.grid.data_extractor.property_access"/>
    </service>
    <service id="sylius.grid_field.string" class="Sylius\Component\Grid\FieldTypes\StringFieldType" public="true">
      <tag name="sylius.grid_field" type="string"/>
      <argument type="service" id="sylius.grid.data_extractor.property_access"/>
    </service>
    <service id="sylius.grid_field.twig" class="Sylius\Bundle\GridBundle\FieldTypes\TwigFieldType" public="true">
      <tag name="sylius.grid_field" type="twig"/>
      <argument type="service" id="sylius.grid.data_extractor.property_access"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="sylius.form_registry.grid_filter" class="Sylius\Bundle\GridBundle\Form\Registry\FormTypeRegistry">
      <call method="add">
        <argument>string</argument>
        <argument>default</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType</argument>
      </call>
      <call method="add">
        <argument>boolean</argument>
        <argument>default</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType</argument>
      </call>
      <call method="add">
        <argument>date</argument>
        <argument>default</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType</argument>
      </call>
      <call method="add">
        <argument>entity</argument>
        <argument>default</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType</argument>
      </call>
      <call method="add">
        <argument>exists</argument>
        <argument>default</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType</argument>
      </call>
      <call method="add">
        <argument>select</argument>
        <argument>default</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\SelectFilterType</argument>
      </call>
    </service>
    <service id="sylius.grid_filter.string" class="Sylius\Component\Grid\Filter\StringFilter" public="true">
      <tag name="sylius.grid_filter" type="string" form_type="Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType" form-type="Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType"/>
    </service>
    <service id="sylius.form.type.grid_filter.string" class="Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType" public="true">
      <tag name="form.type"/>
    </service>
    <service id="sylius.grid_filter.boolean" class="Sylius\Component\Grid\Filter\BooleanFilter" public="true">
      <tag name="sylius.grid_filter" type="boolean" form_type="Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType" form-type="Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType"/>
    </service>
    <service id="sylius.form.type.grid_filter.boolean" class="Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType" public="true">
      <tag name="form.type"/>
    </service>
    <service id="sylius.grid_filter.date" class="Sylius\Component\Grid\Filter\DateFilter" public="true">
      <tag name="sylius.grid_filter" type="date" form_type="Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType" form-type="Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType"/>
    </service>
    <service id="sylius.form.type.grid_filter.date" class="Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType" public="true">
      <tag name="form.type"/>
    </service>
    <service id="sylius.grid_filter.entity" class="Sylius\Component\Grid\Filter\EntityFilter" public="true">
      <tag name="sylius.grid_filter" type="entity" form_type="Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType" form-type="Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType"/>
    </service>
    <service id="sylius.form.type.grid_filter.entity" class="Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType" public="true">
      <tag name="form.type"/>
    </service>
    <service id="sylius.grid_filter.exists" class="Sylius\Component\Grid\Filter\ExistsFilter" public="true">
      <tag name="sylius.grid_filter" type="exists" form_type="Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType" form-type="Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType"/>
    </service>
    <service id="sylius.form.type.grid_filter.exists" class="Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType" public="true">
      <tag name="form.type"/>
    </service>
    <service id="sylius.grid_filter.select" class="Sylius\Component\Grid\Filter\SelectFilter" public="true">
      <tag name="sylius.grid_filter" type="select" form_type="Sylius\Bundle\GridBundle\Form\Type\Filter\SelectFilterType" form-type="Sylius\Bundle\GridBundle\Form\Type\Filter\SelectFilterType"/>
    </service>
    <service id="sylius.form.type.grid_filter.select" class="Sylius\Bundle\GridBundle\Form\Type\Filter\SelectFilterType" public="true">
      <tag name="form.type"/>
    </service>
    <service id="sylius.templating.helper.grid" class="Sylius\Bundle\GridBundle\Templating\Helper\GridHelper" public="true" lazy="true">
      <argument type="service" id="sylius.custom_grid_renderer.twig"/>
    </service>
    <service id="sylius.templating.helper.bulk_action_grid" class="Sylius\Bundle\GridBundle\Templating\Helper\BulkActionGridHelper" public="true" lazy="true">
      <argument type="service" id="sylius.custom_bulk_action_grid_renderer.twig"/>
    </service>
    <service id="sylius.twig.extension.grid" class="Sylius\Bundle\GridBundle\Twig\GridExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sylius.templating.helper.grid"/>
    </service>
    <service id="sylius.twig.extension.bulk_action_grid" class="Sylius\Bundle\GridBundle\Twig\BulkActionGridExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sylius.templating.helper.bulk_action_grid"/>
    </service>
    <service id="sylius.grid.data_extractor.property_access" class="Sylius\Component\Grid\DataExtractor\PropertyAccessDataExtractor" public="true">
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="sylius.grid.array_to_definition_converter" class="Sylius\Component\Grid\Definition\ArrayToDefinitionConverter" public="true">
      <argument type="service" id="event_dispatcher"/>
    </service>
    <service id="sylius.grid.grid_registry" class="Sylius\Bundle\GridBundle\Registry\GridRegistry" public="true">
      <argument type="service" id=".service_locator.uvpMnvB"/>
    </service>
    <service id="sylius.grid.configuration_extender" class="Sylius\Component\Grid\Configuration\GridConfigurationExtender" public="true"/>
    <service id="sylius.grid.configuration_removals_handler" class="Sylius\Component\Grid\Configuration\GridConfigurationRemovalsHandler" public="true"/>
    <service id="sylius.grid.array_grid_provider" class="Sylius\Component\Grid\Provider\ArrayGridProvider" public="true">
      <tag name="sylius.grid_provider" key="array" priority="-200"/>
      <argument type="service" id="sylius.grid.array_to_definition_converter"/>
      <argument>%sylius.grids_definitions%</argument>
      <argument type="service" id="sylius.grid.configuration_extender"/>
      <argument type="service" id="sylius.grid.configuration_removals_handler"/>
    </service>
    <service id="sylius.grid.service_grid_provider" class="Sylius\Bundle\GridBundle\Provider\ServiceGridProvider" public="true">
      <tag name="sylius.grid_provider" key="service" priority="-100"/>
      <argument type="service" id="sylius.grid.array_to_definition_converter"/>
      <argument type="service" id="sylius.grid.grid_registry"/>
      <argument type="service" id="sylius.grid.configuration_extender"/>
      <argument type="service" id="sylius.grid.configuration_removals_handler"/>
    </service>
    <service id="sylius.grid.chain_provider" class="Sylius\Component\Grid\Provider\ChainProvider" public="true">
      <argument type="tagged_iterator" tag="sylius.grid_provider"/>
    </service>
    <service id="sylius.grid.view_factory" class="Sylius\Component\Grid\View\GridViewFactory" public="true">
      <argument type="service" id="sylius.grid.data_provider"/>
    </service>
    <service id="sylius.grid.data_provider" class="Sylius\Component\Grid\Data\DataProvider" public="true">
      <argument type="service" id="sylius.grid.data_source_provider"/>
      <argument type="service" id="sylius.grid.filters_applicator"/>
      <argument type="service" id="sylius.grid.sorter"/>
    </service>
    <service id="sylius.grid.filters_criteria_resolver" class="Sylius\Component\Grid\Filtering\FiltersCriteriaResolver" public="true"/>
    <service id="sylius.grid.filters_applicator" class="Sylius\Component\Grid\Filtering\FiltersApplicator" public="true">
      <argument type="service" id="sylius.registry.grid_filter"/>
      <argument type="service" id="sylius.grid.filters_criteria_resolver"/>
    </service>
    <service id="sylius.grid.sorter.validator" class="Sylius\Component\Grid\Validation\SortingParametersValidator" public="true"/>
    <service id="sylius.grid.field.validator" class="Sylius\Component\Grid\Validation\FieldValidator" public="true"/>
    <service id="sylius.grid.sorter" class="Sylius\Component\Grid\Sorting\Sorter" public="true">
      <argument type="service" id="sylius.grid.sorter.validator"/>
      <argument type="service" id="sylius.grid.field.validator"/>
    </service>
    <service id="sylius.grid.data_source_provider" class="Sylius\Component\Grid\Data\DataSourceProvider" public="true">
      <argument type="service" id="sylius.registry.grid_driver"/>
    </service>
    <service id="sylius.registry.grid_driver" class="Sylius\Component\Registry\ServiceRegistry" public="true">
      <argument>Sylius\Component\Grid\Data\DriverInterface</argument>
      <argument>grid driver</argument>
      <call method="register">
        <argument>doctrine/orm</argument>
        <argument type="service" id="sylius.grid_driver.doctrine.orm"/>
      </call>
      <call method="register">
        <argument>doctrine/dbal</argument>
        <argument type="service" id="sylius.grid_driver.doctrine.dbal"/>
      </call>
    </service>
    <service id="sylius.registry.grid_filter" class="Sylius\Component\Registry\ServiceRegistry" public="true">
      <argument>Sylius\Component\Grid\Filtering\FilterInterface</argument>
      <argument>grid filter</argument>
      <call method="register">
        <argument>string</argument>
        <argument type="service" id="sylius.grid_filter.string"/>
      </call>
      <call method="register">
        <argument>boolean</argument>
        <argument type="service" id="sylius.grid_filter.boolean"/>
      </call>
      <call method="register">
        <argument>date</argument>
        <argument type="service" id="sylius.grid_filter.date"/>
      </call>
      <call method="register">
        <argument>entity</argument>
        <argument type="service" id="sylius.grid_filter.entity"/>
      </call>
      <call method="register">
        <argument>exists</argument>
        <argument type="service" id="sylius.grid_filter.exists"/>
      </call>
      <call method="register">
        <argument>select</argument>
        <argument type="service" id="sylius.grid_filter.select"/>
      </call>
    </service>
    <service id="sylius.registry.grid_field" class="Sylius\Component\Registry\ServiceRegistry" public="true">
      <argument>Sylius\Component\Grid\FieldTypes\FieldTypeInterface</argument>
      <argument>grid field</argument>
      <call method="register">
        <argument>datetime</argument>
        <argument type="service" id="sylius.grid_field.datetime"/>
      </call>
      <call method="register">
        <argument>string</argument>
        <argument type="service" id="sylius.grid_field.string"/>
      </call>
      <call method="register">
        <argument>twig</argument>
        <argument type="service" id="sylius.grid_field.twig"/>
      </call>
    </service>
    <service id="sylius.grid_driver.doctrine.orm" class="Sylius\Bundle\GridBundle\Doctrine\ORM\Driver" public="true">
      <tag name="sylius.grid_driver" alias="doctrine/orm"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sylius.grid_driver.doctrine.dbal" class="Sylius\Bundle\GridBundle\Doctrine\DBAL\Driver" public="true">
      <tag name="sylius.grid_driver" alias="doctrine/dbal"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
    </service>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.app.form.type.book" class="App\Form\Type\BookType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.app.form.type.book" class="App\Form\Type\BookType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.app.form.type.science_book" class="App\Form\Type\ScienceBookType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.app.form.type.science_book" class="App\Form\Type\ScienceBookType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.app.form.type.book_translation" class="App\Form\Type\BookTranslationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.app.form.type.book_translation" class="App\Form\Type\BookTranslationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ComicBookRepository" class="App\Repository\ComicBookRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ComicBookRepository" class="App\Repository\ComicBookRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.App\Shared\Application\Command\CommandHandlerInterface.0.App\BoardGameBlog\Application\Command\CreateBoardGameCommandHandler" class="App\BoardGameBlog\Application\Command\CreateBoardGameCommandHandler" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\BoardGameBlog\Application\Command\CreateBoardGameCommandHandler" class="App\BoardGameBlog\Application\Command\CreateBoardGameCommandHandler" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.App\Shared\Application\Command\CommandHandlerInterface.0.App\BoardGameBlog\Application\Command\DeleteBoardGameCommandHandler" class="App\BoardGameBlog\Application\Command\DeleteBoardGameCommandHandler" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\BoardGameBlog\Application\Command\DeleteBoardGameCommandHandler" class="App\BoardGameBlog\Application\Command\DeleteBoardGameCommandHandler" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.App\Shared\Application\Command\CommandHandlerInterface.0.App\BoardGameBlog\Application\Command\UpdateBoardGameCommandHandler" class="App\BoardGameBlog\Application\Command\UpdateBoardGameCommandHandler" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\BoardGameBlog\Application\Command\UpdateBoardGameCommandHandler" class="App\BoardGameBlog\Application\Command\UpdateBoardGameCommandHandler" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.App\Shared\Application\Query\QueryHandlerInterface.0.App\BoardGameBlog\Application\Query\FindBoardGameQueryHandler" class="App\BoardGameBlog\Application\Query\FindBoardGameQueryHandler" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\BoardGameBlog\Application\Query\FindBoardGameQueryHandler" class="App\BoardGameBlog\Application\Query\FindBoardGameQueryHandler" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository" class="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository" class="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Sylius\Bundle\GridBundle\Grid\GridInterface.0.App\BoardGameBlog\Infrastructure\Sylius\Grid\BoardGameGrid" class="App\BoardGameBlog\Infrastructure\Sylius\Grid\BoardGameGrid" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\BoardGameBlog\Infrastructure\Sylius\Grid\BoardGameGrid" class="App\BoardGameBlog\Infrastructure\Sylius\Grid\BoardGameGrid" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Sylius\Component\Resource\State\ProcessorInterface.0.App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\CreateBoardGameProcessor" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\CreateBoardGameProcessor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\CreateBoardGameProcessor" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\CreateBoardGameProcessor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Sylius\Component\Resource\State\ProcessorInterface.0.App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\DeleteBoardGameProcessor" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\DeleteBoardGameProcessor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\DeleteBoardGameProcessor" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\DeleteBoardGameProcessor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Sylius\Component\Resource\State\ProcessorInterface.0.App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\UpdateBoardGameProcessor" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\UpdateBoardGameProcessor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\UpdateBoardGameProcessor" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\UpdateBoardGameProcessor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Sylius\Component\Resource\State\ProviderInterface.0.App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameCollectionProvider" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameCollectionProvider" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameCollectionProvider" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameCollectionProvider" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Sylius\Component\Resource\State\ProviderInterface.0.App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameItemProvider" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameItemProvider" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameItemProvider" class="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameItemProvider" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\BoardGameBlog\Infrastructure\Symfony\Form\Type\BoardGameType" class="App\BoardGameBlog\Infrastructure\Symfony\Form\Type\BoardGameType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\BoardGameBlog\Infrastructure\Symfony\Form\Type\BoardGameType" class="App\BoardGameBlog\Infrastructure\Symfony\Form\Type\BoardGameType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber" class="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber" class="App\Subscription\EventSubscriber\SmokeSubscriptionEventsSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Sylius\Component\Resource\Factory\FactoryInterface.0.App\Subscription\Factory\SubscriptionFactory" class="App\Subscription\Factory\SubscriptionFactory" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Subscription\Factory\SubscriptionFactory" class="App\Subscription\Factory\SubscriptionFactory" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Subscription\Form\Type\SubscriptionType" class="App\Subscription\Form\Type\SubscriptionType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Subscription\Form\Type\SubscriptionType" class="App\Subscription\Form\Type\SubscriptionType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Sylius\Bundle\GridBundle\Grid\GridInterface.0.App\Subscription\Grid\SubscriptionGrid" class="App\Subscription\Grid\SubscriptionGrid" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Subscription\Grid\SubscriptionGrid" class="App\Subscription\Grid\SubscriptionGrid" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Sylius\Component\Resource\Twig\Context\Factory\ContextFactoryInterface.0.App\Subscription\Twig\Context\Factory\ShowSubscriptionContextFactory" class="App\Subscription\Twig\Context\Factory\ShowSubscriptionContextFactory" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Subscription\Twig\Context\Factory\ShowSubscriptionContextFactory" class="App\Subscription\Twig\Context\Factory\ShowSubscriptionContextFactory" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.SM\Extension\Twig\SMExtension" class="SM\Extension\Twig\SMExtension" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.SM\Extension\Twig\SMExtension" class="SM\Extension\Twig\SMExtension" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.winzou\Bundle\StateMachineBundle\Command\winzouStateMachineDebugCommand" class="winzou\Bundle\StateMachineBundle\Command\winzouStateMachineDebugCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.winzou\Bundle\StateMachineBundle\Command\winzouStateMachineDebugCommand" class="winzou\Bundle\StateMachineBundle\Command\winzouStateMachineDebugCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.7nzbL4K" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service_closure" id="container.env_var_processor"/>
        <argument key="bool" type="service_closure" id="container.env_var_processor"/>
        <argument key="const" type="service_closure" id="container.env_var_processor"/>
        <argument key="csv" type="service_closure" id="container.env_var_processor"/>
        <argument key="default" type="service_closure" id="container.env_var_processor"/>
        <argument key="enum" type="service_closure" id="container.env_var_processor"/>
        <argument key="file" type="service_closure" id="container.env_var_processor"/>
        <argument key="float" type="service_closure" id="container.env_var_processor"/>
        <argument key="int" type="service_closure" id="container.env_var_processor"/>
        <argument key="json" type="service_closure" id="container.env_var_processor"/>
        <argument key="key" type="service_closure" id="container.env_var_processor"/>
        <argument key="not" type="service_closure" id="container.env_var_processor"/>
        <argument key="query_string" type="service_closure" id="container.env_var_processor"/>
        <argument key="require" type="service_closure" id="container.env_var_processor"/>
        <argument key="resolve" type="service_closure" id="container.env_var_processor"/>
        <argument key="shuffle" type="service_closure" id="container.env_var_processor"/>
        <argument key="string" type="service_closure" id="container.env_var_processor"/>
        <argument key="trim" type="service_closure" id="container.env_var_processor"/>
        <argument key="url" type="service_closure" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id=".service_locator.y4_Zrx." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="loader" type="service_closure" id=".errored..service_locator.y4_Zrx..Symfony\Component\Config\Loader\LoaderInterface"/>
      </argument>
    </service>
    <service id=".service_locator.HBdvAhp" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Kernel::loadRoutes" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="App\Kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="kernel::loadRoutes" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="kernel:loadRoutes" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="kernel:registerContainerConfiguration" type="service_closure" id=".service_locator.y4_Zrx."/>
      </argument>
    </service>
    <service id=".service_locator.fGvEh3." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service_closure" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service_closure" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service_closure" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" type="service_closure" id="validator.no_suspicious_characters"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service_closure" id="validator.not_compromised_password"/>
        <argument key="Symfony\Component\Validator\Constraints\WhenValidator" type="service_closure" id="validator.when"/>
        <argument key="doctrine.orm.validator.unique" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service_closure" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service_closure" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator.lLv4pWF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service_closure" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id=".service_locator.BV_ZfYz" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\BoardGameBlog\Infrastructure\Symfony\Form\Type\BoardGameType" type="service_closure" id="App\BoardGameBlog\Infrastructure\Symfony\Form\Type\BoardGameType"/>
        <argument key="App\Form\Type\BookTranslationType" type="service_closure" id="app.form.type.book_translation"/>
        <argument key="App\Form\Type\BookType" type="service_closure" id="app.form.type.book"/>
        <argument key="App\Form\Type\ScienceBookType" type="service_closure" id="app.form.type.science_book"/>
        <argument key="App\Subscription\Form\Type\SubscriptionType" type="service_closure" id="App\Subscription\Form\Type\SubscriptionType"/>
        <argument key="Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType" type="service_closure" id="sylius.form.type.grid_filter.boolean"/>
        <argument key="Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType" type="service_closure" id="sylius.form.type.grid_filter.date"/>
        <argument key="Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType" type="service_closure" id="sylius.form.type.grid_filter.entity"/>
        <argument key="Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType" type="service_closure" id="sylius.form.type.grid_filter.exists"/>
        <argument key="Sylius\Bundle\GridBundle\Form\Type\Filter\SelectFilterType" type="service_closure" id="sylius.form.type.grid_filter.select"/>
        <argument key="Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType" type="service_closure" id="sylius.form.type.grid_filter.string"/>
        <argument key="Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType" type="service_closure" id="sylius.form.type.default"/>
        <argument key="Sylius\Bundle\ResourceBundle\Form\Type\ResourceAutocompleteChoiceType" type="service_closure" id="sylius.form.type.resource_autocomplete_choice"/>
        <argument key="Sylius\Bundle\ResourceBundle\Form\Type\ResourceTranslationsType" type="service_closure" id="sylius.form.type.resource_translations"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service_closure" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service_closure" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ColorType" type="service_closure" id="form.type.color"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service_closure" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service_closure" id="form.type.form"/>
      </argument>
    </service>
    <service id="command.bus.middleware.add_bus_name_stamp_middleware" class="Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware">
      <argument>command.bus</argument>
    </service>
    <service id="command.bus.middleware.send_message" class="Symfony\Component\Messenger\Middleware\SendMessageMiddleware">
      <argument type="service" id="messenger.senders_locator"/>
      <argument type="service" id="event_dispatcher"/>
      <argument>true</argument>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="command.bus.middleware.handle_message" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware">
      <argument type="service" id="command.bus.messenger.handlers_locator"/>
      <argument>false</argument>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="query.bus.middleware.add_bus_name_stamp_middleware" class="Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware">
      <argument>query.bus</argument>
    </service>
    <service id="query.bus.middleware.send_message" class="Symfony\Component\Messenger\Middleware\SendMessageMiddleware">
      <argument type="service" id="messenger.senders_locator"/>
      <argument type="service" id="event_dispatcher"/>
      <argument>true</argument>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="query.bus.middleware.handle_message" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware">
      <argument type="service" id="query.bus.messenger.handlers_locator"/>
      <argument>false</argument>
      <call method="setLogger">
        <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
      </call>
    </service>
    <service id=".service_locator.jIERMQW" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="command.bus" type="service_closure" id="command.bus"/>
        <argument key="query.bus" type="service_closure" id="query.bus"/>
      </argument>
    </service>
    <service id=".service_locator.Xbsa8iG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.2ayLRl7" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="App\BoardGameBlog\Application\Command\CreateBoardGameCommandHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.PE5dsmh" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="App\BoardGameBlog\Application\Command\DeleteBoardGameCommandHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor._CGLcjg" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="App\BoardGameBlog\Application\Command\UpdateBoardGameCommandHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.ugW8i0p" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="messenger.redispatch_message_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.O91e.KW" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="App\BoardGameBlog\Application\Query\FindBoardGameQueryHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.yp2tzbo" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="messenger.redispatch_message_handler"/>
      <argument type="collection"/>
    </service>
    <service id="command.bus.messenger.handlers_locator" class="Symfony\Component\Messenger\Handler\HandlersLocator">
      <argument type="collection">
        <argument key="App\BoardGameBlog\Application\Command\CreateBoardGameCommand" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.2ayLRl7"/>
        </argument>
        <argument key="App\BoardGameBlog\Application\Command\DeleteBoardGameCommand" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.PE5dsmh"/>
        </argument>
        <argument key="App\BoardGameBlog\Application\Command\UpdateBoardGameCommand" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor._CGLcjg"/>
        </argument>
        <argument key="Symfony\Component\Messenger\Message\RedispatchMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.ugW8i0p"/>
        </argument>
      </argument>
    </service>
    <service id="query.bus.messenger.handlers_locator" class="Symfony\Component\Messenger\Handler\HandlersLocator">
      <argument type="collection">
        <argument key="App\BoardGameBlog\Application\Query\FindBoardGameQuery" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.O91e.KW"/>
        </argument>
        <argument key="Symfony\Component\Messenger\Message\RedispatchMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.yp2tzbo"/>
        </argument>
      </argument>
    </service>
    <service id=".debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="event_dispatcher"/>
    </service>
    <service id=".debug.security.voter.security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.simple_role_voter"/>
      <argument type="service" id="event_dispatcher"/>
    </service>
    <service id=".debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="event_dispatcher"/>
    </service>
    <service id="security.listener.csrf_protection" class="Symfony\Component\Security\Http\EventListener\CsrfProtectionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="security.logout.listener.csrf_token_clearing" class="Symfony\Component\Security\Http\EventListener\CsrfTokenClearingLogoutListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="security.ldap_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id=".service_locator.HeXyCEs" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Gedmo\Sortable\SortableListener" type="service_closure" id="Gedmo\Sortable\SortableListener"/>
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service_closure" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
        <argument key="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener" type="service_closure" id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener"/>
        <argument key="doctrine.orm.listeners.doctrine_token_provider_schema_listener" type="service_closure" id="doctrine.orm.listeners.doctrine_token_provider_schema_listener"/>
        <argument key="doctrine.orm.listeners.lock_store_schema_listener" type="service_closure" id="doctrine.orm.listeners.lock_store_schema_listener"/>
        <argument key="doctrine.orm.listeners.pdo_session_handler_schema_listener" type="service_closure" id="doctrine.orm.listeners.pdo_session_handler_schema_listener"/>
        <argument key="doctrine.orm.listeners.resolve_target_entity" type="service_closure" id="doctrine.orm.listeners.resolve_target_entity"/>
        <argument key="doctrine.orm.messenger.doctrine_schema_listener" type="service_closure" id="doctrine.orm.messenger.doctrine_schema_listener"/>
        <argument key="sylius.event_subscriber.orm_mapped_super_class" type="service_closure" id="sylius.event_subscriber.orm_mapped_super_class"/>
        <argument key="sylius.event_subscriber.orm_repository_class" type="service_closure" id="sylius.event_subscriber.orm_repository_class"/>
        <argument key="sylius.translation.translatable_listener.doctrine.orm" type="service_closure" id="sylius.translation.translatable_listener.doctrine.orm"/>
      </argument>
    </service>
    <service id=".service_locator.jTgEz5u" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository" type="service_closure" id="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository"/>
        <argument key="App\Repository\BookRepository" type="service_closure" id="App\Repository\BookRepository"/>
        <argument key="App\Repository\ComicBookRepository" type="service_closure" id="App\Repository\ComicBookRepository"/>
      </argument>
    </service>
    <service id=".service_locator.KLVvNIq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.ulid_generator" type="service_closure" id="doctrine.ulid_generator"/>
        <argument key="doctrine.uuid_generator" type="service_closure" id="doctrine.uuid_generator"/>
      </argument>
    </service>
    <service id=".doctrine.orm.default_metadata_driver" class="Doctrine\Bundle\DoctrineBundle\Mapping\MappingDriver">
      <tag name="container.decorator" id="doctrine.orm.default_metadata_driver"/>
      <argument type="service" id="Sylius\Bundle\ResourceBundle\Doctrine\ResourceMappingDriverChain"/>
      <argument type="service" id=".service_locator.KLVvNIq"/>
    </service>
    <service id="doctrine.dbal.logging_middleware.default" class="Doctrine\DBAL\Logging\Middleware">
      <argument type="service" id="Psr\Log\NullLogger"/>
    </service>
    <service id="doctrine.dbal.debug_middleware.default" class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware">
      <argument type="service" id="doctrine.debug_data_holder"/>
      <argument>null</argument>
      <call method="setConnectionName">
        <argument>default</argument>
      </call>
    </service>
    <service id="sylius.resource_controller.state_machine.winzou" class="Sylius\Bundle\ResourceBundle\Controller\StateMachine">
      <argument type="service" id="SM\Factory\Factory"/>
    </service>
    <service id="fos_rest.request_matcher.7e437a1bd0410de47b53737cedd3a1da2e51036b14ed3da048d3b9639aa83b903d1e4c5e" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
            <argument>^/admin/*</argument>
          </service>
        </argument>
      </argument>
    </service>
    <service id="fos_rest.request_matcher.35012096133f739bdc6bcc2346b6a5e2436616e6ba71f4b09b9fe43dc74bab79257b9bf8" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
            <argument>^/science-books/*</argument>
          </service>
        </argument>
      </argument>
    </service>
    <service id="fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
            <argument>^/</argument>
          </service>
        </argument>
      </argument>
    </service>
    <service id="fos_rest.serializer.form_error_handler" class="FOS\RestBundle\Serializer\Normalizer\FormErrorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <tag name="container.decorator" id="jms_serializer.form_error_handler"/>
      <argument type="service" id="fos_rest.serializer.form_error_handler.inner"/>
    </service>
    <service id="Sylius\Bundle\GridBundle\Command\StubMakeGrid" class="Sylius\Bundle\GridBundle\Command\StubMakeGrid">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>make:grid</argument>
      </call>
    </service>
    <service id=".service_locator.yY.p4P7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service_closure" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service_closure" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service_closure" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service_closure" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service_closure" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service_closure" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service_closure" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service_closure" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service_closure" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service_closure" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service_closure" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.fuYM_Z." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service_closure" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator.fuYM_Z..translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fuYM_Z." method="withContext"/>
    </service>
    <service id=".service_locator.PvoQzFT" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service_closure" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.PvoQzFT.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.PvoQzFT" method="withContext"/>
    </service>
    <service id=".service_locator.cUcW89y" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service_closure" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.cUcW89y.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.cUcW89y" method="withContext"/>
    </service>
    <service id=".service_locator.etVElvN" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service_closure" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.etVElvN.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.etVElvN" method="withContext"/>
    </service>
    <service id=".service_locator.d2ZEtNx" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\ArgumentResolver\EntityValueResolver" type="service_closure" id="doctrine.orm.entity_value_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver" type="service_closure" id="argument_resolver.backed_enum_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver" type="service_closure" id="argument_resolver.datetime"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" type="service_closure" id="argument_resolver.default"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver" type="service_closure" id="argument_resolver.query_parameter_value_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" type="service_closure" id="argument_resolver.request_attribute"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver" type="service_closure" id="argument_resolver.request_payload"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" type="service_closure" id="argument_resolver.request"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" type="service_closure" id="argument_resolver.service"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" type="service_closure" id="argument_resolver.session"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" type="service_closure" id="argument_resolver.variadic"/>
        <argument key="Symfony\Component\Security\Http\Controller\SecurityTokenValueResolver" type="service_closure" id="security.security_token_value_resolver"/>
        <argument key="Symfony\Component\Security\Http\Controller\UserValueResolver" type="service_closure" id="security.user_value_resolver"/>
      </argument>
    </service>
    <service id=".service_locator.XXv1IfR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.NBUFN6A" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cache.app" type="service_closure" id="cache.app.taggable"/>
      </argument>
    </service>
    <service id=".service_locator._1SGciK" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="event_dispatcher" type="service_closure" id="event_dispatcher"/>
        <argument key="security.event_dispatcher.main" type="service_closure" id="security.event_dispatcher.main"/>
      </argument>
    </service>
    <service id=".service_locator.7mS.Ryf" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="blog_publishing" type="service_closure" id="workflow.blog_publishing"/>
        <argument key="pull_request" type="service_closure" id="state_machine.pull_request"/>
        <argument key="subscription" type="service_closure" id="state_machine.subscription"/>
      </argument>
    </service>
    <service id=".service_locator.AQBflHD" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session_factory" type="service_closure" id="session.factory" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.17rSCVq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service_closure" id="kernel"/>
        <argument key="sylius.routing.loader.crud_routes_attributes" type="service_closure" id="sylius.routing.loader.crud_routes_attributes"/>
        <argument key="sylius.routing.loader.routes_attributes" type="service_closure" id="sylius.routing.loader.routes_attributes"/>
      </argument>
    </service>
    <service id=".service_locator.Kl0E_Fe" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="env" type="service_closure" id="container.getenv"/>
        <argument key="service" type="service_closure" id="container.get_routing_condition_service"/>
      </argument>
    </service>
    <service id=".service_locator.LcVn9Hr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="request_stack" type="service_closure" id="request_stack"/>
      </argument>
    </service>
    <service id=".service_locator.LrCXAmX" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="request_stack" type="service_closure" id="request_stack"/>
        <argument key="security.authenticator.managers_locator" type="service_closure" id="security.authenticator.managers_locator" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.firewall.event_dispatcher_locator" type="service_closure" id="security.firewall.event_dispatcher_locator"/>
        <argument key="security.firewall.map" type="service_closure" id="security.firewall.map"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage"/>
        <argument key="security.user_checker" type="service_closure" id="security.user_checker"/>
      </argument>
    </service>
    <service id=".service_locator.cwjLhlB" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameCollectionProvider" type="service_closure" id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameCollectionProvider"/>
        <argument key="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameItemProvider" type="service_closure" id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Provider\BoardGameItemProvider"/>
        <argument key="Sylius\Component\Resource\Grid\State\RequestGridProvider" type="service_closure" id="Sylius\Component\Resource\Grid\State\RequestGridProvider"/>
        <argument key="Sylius\Component\Resource\Symfony\Request\State\Provider" type="service_closure" id="Sylius\Component\Resource\Symfony\Request\State\Provider"/>
      </argument>
    </service>
    <service id=".service_locator.MHNFoLa" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="app.factory.blog_post" type="service_closure" id="app.factory.blog_post"/>
        <argument key="app.factory.book" type="service_closure" id="app.factory.book"/>
        <argument key="app.factory.book_translation" type="service_closure" id="app.factory.book_translation"/>
        <argument key="app.factory.comic_book" type="service_closure" id="app.factory.comic_book"/>
        <argument key="app.factory.gedmo" type="service_closure" id="app.factory.gedmo"/>
        <argument key="app.factory.pull_request" type="service_closure" id="app.factory.pull_request"/>
        <argument key="app.factory.science_book" type="service_closure" id="app.factory.science_book"/>
        <argument key="app.factory.subscription" type="service_closure" id="App\Subscription\Factory\SubscriptionFactory"/>
      </argument>
    </service>
    <service id=".service_locator.IHhttiU" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\CreateBoardGameProcessor" type="service_closure" id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\CreateBoardGameProcessor"/>
        <argument key="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\DeleteBoardGameProcessor" type="service_closure" id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\DeleteBoardGameProcessor"/>
        <argument key="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\UpdateBoardGameProcessor" type="service_closure" id="App\BoardGameBlog\Infrastructure\Sylius\State\Http\Processor\UpdateBoardGameProcessor"/>
        <argument key="Sylius\Component\Resource\Doctrine\Common\State\PersistProcessor" type="service_closure" id="Sylius\Component\Resource\Doctrine\Common\State\PersistProcessor"/>
        <argument key="Sylius\Component\Resource\Doctrine\Common\State\RemoveProcessor" type="service_closure" id="Sylius\Component\Resource\Doctrine\Common\State\RemoveProcessor"/>
        <argument key="Sylius\Component\Resource\StateMachine\State\ApplyStateMachineTransitionProcessor" type="service_closure" id="Sylius\Component\Resource\StateMachine\State\ApplyStateMachineTransitionProcessor"/>
      </argument>
    </service>
    <service id=".service_locator.Ine1Ld0" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Sylius\Component\Resource\Symfony\Request\State\Responder" type="service_closure" id="Sylius\Component\Resource\Symfony\Request\State\Responder"/>
        <argument key="sylius.state_responder.api" type="service_closure" id="sylius.state_responder.api"/>
        <argument key="sylius.state_responder.html" type="service_closure" id="sylius.state_responder.html"/>
      </argument>
    </service>
    <service id=".service_locator.YBWNcmH" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="app.repository.blog_post" type="service_closure" id="app.repository.blog_post"/>
        <argument key="app.repository.book" type="service_closure" id="app.repository.book"/>
        <argument key="app.repository.book_translation" type="service_closure" id="app.repository.book_translation"/>
        <argument key="app.repository.comic_book" type="service_closure" id="app.repository.comic_book"/>
        <argument key="app.repository.gedmo" type="service_closure" id="app.repository.gedmo"/>
        <argument key="app.repository.pull_request" type="service_closure" id="app.repository.pull_request"/>
        <argument key="app.repository.science_book" type="service_closure" id="app.repository.science_book"/>
        <argument key="app.repository.subscription" type="service_closure" id="app.repository.subscription"/>
      </argument>
    </service>
    <service id=".service_locator.tCqbw62" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="symfony" type="service_closure" id="sylius.state_machine.operation.symfony"/>
        <argument key="winzou" type="service_closure" id="sylius.state_machine.operation.winzou"/>
      </argument>
    </service>
    <service id=".service_locator.DblFLm1" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Subscription\Twig\Context\Factory\ShowSubscriptionContextFactory" type="service_closure" id="App\Subscription\Twig\Context\Factory\ShowSubscriptionContextFactory"/>
        <argument key="sylius.twig.context.factory.default" type="service_closure" id="sylius.twig.context.factory.default"/>
      </argument>
    </service>
    <service id=".service_locator.uvpMnvB" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="app_board_game" type="service_closure" id="App\BoardGameBlog\Infrastructure\Sylius\Grid\BoardGameGrid"/>
        <argument key="app_subscription" type="service_closure" id="App\Subscription\Grid\SubscriptionGrid"/>
      </argument>
    </service>
    <service id="sylius.form.type_extension.form.request_handler.inner" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="sylius.resource_controller.resources_resolver.grid_aware.inner" class="Sylius\Bundle\ResourceBundle\Controller\ResourcesResolver"/>
    <service id="sylius.custom_grid_renderer.twig.inner" class="Sylius\Bundle\GridBundle\Renderer\TwigGridRenderer">
      <argument type="service" id="twig"/>
      <argument type="service" id="sylius.registry.grid_field"/>
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sylius.form_registry.grid_filter"/>
      <argument>@SyliusGrid/_grid.html.twig</argument>
      <argument>%sylius.grid.templates.action%</argument>
      <argument type="collection"/>
    </service>
    <service id="sylius.custom_bulk_action_grid_renderer.twig.inner" class="Sylius\Bundle\GridBundle\Renderer\TwigBulkActionGridRenderer">
      <argument type="service" id="twig"/>
      <argument>%sylius.grid.templates.bulk_action%</argument>
    </service>
    <service id="sylius.routing.factory.operation_route_path_factory.collection.inner" class="Sylius\Component\Resource\Symfony\Routing\Factory\OperationRoutePathFactory"/>
    <service id="App\Subscription\Factory\SubscriptionFactory.inner" class="Sylius\Component\Resource\Factory\Factory">
      <argument>App\Subscription\Entity\Subscription</argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager">
      <argument type="iterator">
        <argument type="service" id=".debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id=".debug.security.voter.security.access.simple_role_voter"/>
        <argument type="service" id=".debug.security.voter.security.access.expression_voter"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\Strategy\AffirmativeStrategy">
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="debug.security.firewall.authenticator.main.inner" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener">
      <argument type="service" id="security.authenticator.manager.main"/>
    </service>
    <service id="sylius.context.initiator.legacy_request_context.inner" class="Sylius\Component\Resource\Context\Initiator\RequestContextInitiator"/>
    <service id="sylius.resource_metadata_collection.factory.templates_dir.inner" class="Sylius\Component\Resource\Metadata\Resource\Factory\AttributesResourceMetadataCollectionFactory">
      <argument type="service" id="sylius.resource_registry"/>
      <argument type="service" id="sylius.routing.factory.operation_route_name_factory"/>
      <argument>null</argument>
    </service>
    <service id="sylius.twig.context.factory.request.inner" class="Sylius\Component\Resource\Twig\Context\Factory\ContextFactory">
      <argument type="service" id=".service_locator.DblFLm1"/>
    </service>
    <service id="sylius.grid.view_factory.legacy.inner" class="Sylius\Component\Resource\Grid\View\Factory\GridViewFactory">
      <argument type="service" id="sylius.grid.data_provider"/>
    </service>
    <service id="Sylius\Bundle\ResourceBundle\Doctrine\ResourceMappingDriverChain.inner" class="Doctrine\Persistence\Mapping\Driver\MappingDriverChain">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_yml_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_attribute_metadata_driver"/>
        <argument>App\BoardGameBlog\Domain</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_attribute_metadata_driver"/>
        <argument>App\Subscription\Entity</argument>
      </call>
    </service>
    <service id="sylius.doctrine.orm.container_repository_factory.inner" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory">
      <argument type="service" id=".service_locator.jTgEz5u"/>
    </service>
    <service id="fos_rest.serializer.form_error_handler.inner" class="JMS\Serializer\Handler\FormErrorHandler">
      <argument type="service" id="translator.default" on-invalid="null"/>
      <argument>validators</argument>
    </service>
    <service id="sylius.state.provider.event_dispatcher.inner" class="Sylius\Component\Resource\State\Provider">
      <argument type="service" id=".service_locator.cwjLhlB"/>
    </service>
    <service id="sylius.state.processor.event_dispatcher.inner" class="Sylius\Component\Resource\State\Processor">
      <argument type="service" id=".service_locator.IHhttiU"/>
    </service>
    <service id="sylius.state.processor.event_dispatcher_bulk_aware.inner" class="Sylius\Component\Resource\State\BulkAwareProcessor">
      <tag name="container.decorator" id="sylius.state.processor"/>
      <argument type="service" id="sylius.state.processor.event_dispatcher"/>
    </service>
    <service id="jms_serializer.traceable_metadata_factory.inner" class="Metadata\MetadataFactory">
      <argument type="service" id="jms_serializer.metadata.lazy_loading_driver"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
      <call method="setIncludeInterfaces">
        <argument>false</argument>
      </call>
    </service>
    <service id="jms_serializer.traceable_handler_registry.inner" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id="jms_serializer.handler_registry.service_locator"/>
    </service>
    <service id="jms_serializer.metadata.traceable_file_locator.inner" class="Metadata\Driver\FileLocator">
      <argument type="collection"/>
    </service>
    <service id=".errored..service_locator.y4_Zrx..Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.y4_Zrx.&quot;: it needs an instance of &quot;Symfony\Component\Config\Loader\LoaderInterface&quot; but this type has been excluded from autowiring."/>
    </service>
    <service id=".console.command.about.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>about</argument>
      <argument type="collection"/>
      <argument>Display information about the current project</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.about"/>
    </service>
    <service id=".console.command.assets_install.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>assets:install</argument>
      <argument type="collection"/>
      <argument>Install bundle's web assets under a public directory</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.assets_install"/>
    </service>
    <service id=".console.command.cache_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:clear</argument>
      <argument type="collection"/>
      <argument>Clear the cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_clear"/>
    </service>
    <service id=".console.command.cache_pool_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:clear</argument>
      <argument type="collection"/>
      <argument>Clear cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_clear"/>
    </service>
    <service id=".console.command.cache_pool_prune.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:prune</argument>
      <argument type="collection"/>
      <argument>Prune cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_prune"/>
    </service>
    <service id=".console.command.cache_pool_invalidate_tags.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:invalidate-tags</argument>
      <argument type="collection"/>
      <argument>Invalidate cache tags for all or a specific pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_invalidate_tags"/>
    </service>
    <service id=".console.command.cache_pool_delete.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:delete</argument>
      <argument type="collection"/>
      <argument>Delete an item from a cache pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_delete"/>
    </service>
    <service id=".console.command.cache_pool_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:list</argument>
      <argument type="collection"/>
      <argument>List available cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_list"/>
    </service>
    <service id=".console.command.cache_warmup.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:warmup</argument>
      <argument type="collection"/>
      <argument>Warm up an empty cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_warmup"/>
    </service>
    <service id=".console.command.config_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:config</argument>
      <argument type="collection"/>
      <argument>Dump the current configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_debug"/>
    </service>
    <service id=".console.command.config_dump_reference.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>config:dump-reference</argument>
      <argument type="collection"/>
      <argument>Dump the default configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_dump_reference"/>
    </service>
    <service id=".console.command.container_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:container</argument>
      <argument type="collection"/>
      <argument>Display current services for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_debug"/>
    </service>
    <service id=".console.command.container_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:container</argument>
      <argument type="collection"/>
      <argument>Ensure that arguments injected into services match type declarations</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_lint"/>
    </service>
    <service id=".console.command.debug_autowiring.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:autowiring</argument>
      <argument type="collection"/>
      <argument>List classes/interfaces you can use for autowiring</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.debug_autowiring"/>
    </service>
    <service id=".console.command.dotenv_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:dotenv</argument>
      <argument type="collection"/>
      <argument>Lists all dotenv files with variables and values</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.dotenv_debug"/>
    </service>
    <service id=".console.command.event_dispatcher_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:event-dispatcher</argument>
      <argument type="collection"/>
      <argument>Display configured listeners for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.event_dispatcher_debug"/>
    </service>
    <service id=".console.command.messenger_consume_messages.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:consume</argument>
      <argument type="collection"/>
      <argument>Consume messages</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_consume_messages"/>
    </service>
    <service id=".console.command.messenger_setup_transports.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:setup-transports</argument>
      <argument type="collection"/>
      <argument>Prepare the required infrastructure for the transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_setup_transports"/>
    </service>
    <service id=".console.command.messenger_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:messenger</argument>
      <argument type="collection"/>
      <argument>List messages you can dispatch using the message buses</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_debug"/>
    </service>
    <service id=".console.command.messenger_stop_workers.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:stop-workers</argument>
      <argument type="collection"/>
      <argument>Stop workers after their current message</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_stop_workers"/>
    </service>
    <service id=".console.command.messenger_stats.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:stats</argument>
      <argument type="collection"/>
      <argument>Show the message count for one or more transports</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_stats"/>
    </service>
    <service id=".console.command.router_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:router</argument>
      <argument type="collection"/>
      <argument>Display current routes for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_debug"/>
    </service>
    <service id=".console.command.router_match.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>router:match</argument>
      <argument type="collection"/>
      <argument>Help debug routes by simulating a path info match</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_match"/>
    </service>
    <service id=".console.command.serializer_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:serializer</argument>
      <argument type="collection"/>
      <argument>Display serialization information for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.serializer_debug"/>
    </service>
    <service id=".console.command.translation_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:translation</argument>
      <argument type="collection"/>
      <argument>Display translation messages information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_debug"/>
    </service>
    <service id=".console.command.translation_extract.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:extract</argument>
      <argument type="collection"/>
      <argument>Extract missing translations keys from code to translation files.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_extract"/>
    </service>
    <service id=".console.command.validator_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:validator</argument>
      <argument type="collection"/>
      <argument>Display validation constraints for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.validator_debug"/>
    </service>
    <service id=".console.command.translation_pull.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:pull</argument>
      <argument type="collection"/>
      <argument>Pull translations from a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_pull"/>
    </service>
    <service id=".console.command.translation_push.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:push</argument>
      <argument type="collection"/>
      <argument>Push translations to a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_push"/>
    </service>
    <service id=".console.command.workflow_dump.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>workflow:dump</argument>
      <argument type="collection"/>
      <argument>Dump a workflow</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.workflow_dump"/>
    </service>
    <service id=".console.command.xliff_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:xliff</argument>
      <argument type="collection"/>
      <argument>Lint an XLIFF file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.xliff_lint"/>
    </service>
    <service id=".console.command.yaml_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:yaml</argument>
      <argument type="collection"/>
      <argument>Lint a YAML file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.yaml_lint"/>
    </service>
    <service id=".console.command.form_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:form</argument>
      <argument type="collection"/>
      <argument>Display form type information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.form_debug"/>
    </service>
    <service id=".console.command.secrets_set.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:set</argument>
      <argument type="collection"/>
      <argument>Set a secret in the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_set"/>
    </service>
    <service id=".console.command.secrets_remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:remove</argument>
      <argument type="collection"/>
      <argument>Remove a secret from the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_remove"/>
    </service>
    <service id=".console.command.secrets_generate_key.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:generate-keys</argument>
      <argument type="collection"/>
      <argument>Generate new encryption keys</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_generate_key"/>
    </service>
    <service id=".console.command.secrets_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:list</argument>
      <argument type="collection"/>
      <argument>List all secrets</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_list"/>
    </service>
    <service id=".console.command.secrets_decrypt_to_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:decrypt-to-local</argument>
      <argument type="collection"/>
      <argument>Decrypt all secrets and stores them in the local vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_decrypt_to_local"/>
    </service>
    <service id=".console.command.secrets_encrypt_from_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:encrypt-from-local</argument>
      <argument type="collection"/>
      <argument>Encrypt all local secrets to the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_encrypt_from_local"/>
    </service>
    <service id=".security.command.debug_firewall.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:firewall</argument>
      <argument type="collection"/>
      <argument>Display information about your security firewall(s)</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.debug_firewall"/>
    </service>
    <service id=".security.command.user_password_hash.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>security:hash-password</argument>
      <argument type="collection"/>
      <argument>Hash a user password</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.user_password_hash"/>
    </service>
    <service id=".twig.command.debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:twig</argument>
      <argument type="collection"/>
      <argument>Show a list of twig functions, filters, globals and tests</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.debug"/>
    </service>
    <service id=".twig.command.lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:twig</argument>
      <argument type="collection"/>
      <argument>Lint a Twig template and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.lint"/>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.HHiPyoo"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:invalidate-tags">console.command.cache_pool_invalidate_tags</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:dotenv">console.command.dotenv_debug</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="messenger:consume">console.command.messenger_consume_messages</argument>
        <argument key="messenger:setup-transports">console.command.messenger_setup_transports</argument>
        <argument key="debug:messenger">console.command.messenger_debug</argument>
        <argument key="messenger:stop-workers">console.command.messenger_stop_workers</argument>
        <argument key="messenger:stats">console.command.messenger_stats</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:serializer">console.command.serializer_debug</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:extract">console.command.translation_extract</argument>
        <argument key="debug:validator">console.command.validator_debug</argument>
        <argument key="translation:pull">console.command.translation_pull</argument>
        <argument key="translation:push">console.command.translation_push</argument>
        <argument key="workflow:dump">console.command.workflow_dump</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="debug:firewall">security.command.debug_firewall</argument>
        <argument key="security:hash-password">security.command.user_password_hash</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="dbal:run-sql">Doctrine\DBAL\Tools\Console\Command\RunSqlCommand</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="debug:winzou:state-machine">winzou\Bundle\StateMachineBundle\Command\winzouStateMachineDebugCommand</argument>
        <argument key="make:grid">Sylius\Bundle\GridBundle\Command\StubMakeGrid</argument>
      </argument>
    </service>
    <service id=".service_locator.HHiPyoo" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="console.command.about" type="service_closure" id=".console.command.about.lazy"/>
        <argument key="console.command.assets_install" type="service_closure" id=".console.command.assets_install.lazy"/>
        <argument key="console.command.cache_clear" type="service_closure" id=".console.command.cache_clear.lazy"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id=".console.command.cache_pool_clear.lazy"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id=".console.command.cache_pool_prune.lazy"/>
        <argument key="console.command.cache_pool_invalidate_tags" type="service_closure" id=".console.command.cache_pool_invalidate_tags.lazy"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id=".console.command.cache_pool_delete.lazy"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id=".console.command.cache_pool_list.lazy"/>
        <argument key="console.command.cache_warmup" type="service_closure" id=".console.command.cache_warmup.lazy"/>
        <argument key="console.command.config_debug" type="service_closure" id=".console.command.config_debug.lazy"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id=".console.command.config_dump_reference.lazy"/>
        <argument key="console.command.container_debug" type="service_closure" id=".console.command.container_debug.lazy"/>
        <argument key="console.command.container_lint" type="service_closure" id=".console.command.container_lint.lazy"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id=".console.command.debug_autowiring.lazy"/>
        <argument key="console.command.dotenv_debug" type="service_closure" id=".console.command.dotenv_debug.lazy"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id=".console.command.event_dispatcher_debug.lazy"/>
        <argument key="console.command.messenger_consume_messages" type="service_closure" id=".console.command.messenger_consume_messages.lazy"/>
        <argument key="console.command.messenger_setup_transports" type="service_closure" id=".console.command.messenger_setup_transports.lazy"/>
        <argument key="console.command.messenger_debug" type="service_closure" id=".console.command.messenger_debug.lazy"/>
        <argument key="console.command.messenger_stop_workers" type="service_closure" id=".console.command.messenger_stop_workers.lazy"/>
        <argument key="console.command.messenger_stats" type="service_closure" id=".console.command.messenger_stats.lazy"/>
        <argument key="console.command.router_debug" type="service_closure" id=".console.command.router_debug.lazy"/>
        <argument key="console.command.router_match" type="service_closure" id=".console.command.router_match.lazy"/>
        <argument key="console.command.serializer_debug" type="service_closure" id=".console.command.serializer_debug.lazy"/>
        <argument key="console.command.translation_debug" type="service_closure" id=".console.command.translation_debug.lazy"/>
        <argument key="console.command.translation_extract" type="service_closure" id=".console.command.translation_extract.lazy"/>
        <argument key="console.command.validator_debug" type="service_closure" id=".console.command.validator_debug.lazy"/>
        <argument key="console.command.translation_pull" type="service_closure" id=".console.command.translation_pull.lazy"/>
        <argument key="console.command.translation_push" type="service_closure" id=".console.command.translation_push.lazy"/>
        <argument key="console.command.workflow_dump" type="service_closure" id=".console.command.workflow_dump.lazy"/>
        <argument key="console.command.xliff_lint" type="service_closure" id=".console.command.xliff_lint.lazy"/>
        <argument key="console.command.yaml_lint" type="service_closure" id=".console.command.yaml_lint.lazy"/>
        <argument key="console.command.form_debug" type="service_closure" id=".console.command.form_debug.lazy"/>
        <argument key="console.command.secrets_set" type="service_closure" id=".console.command.secrets_set.lazy"/>
        <argument key="console.command.secrets_remove" type="service_closure" id=".console.command.secrets_remove.lazy"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id=".console.command.secrets_generate_key.lazy"/>
        <argument key="console.command.secrets_list" type="service_closure" id=".console.command.secrets_list.lazy"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id=".console.command.secrets_decrypt_to_local.lazy"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id=".console.command.secrets_encrypt_from_local.lazy"/>
        <argument key="security.command.debug_firewall" type="service_closure" id=".security.command.debug_firewall.lazy"/>
        <argument key="security.command.user_password_hash" type="service_closure" id=".security.command.user_password_hash.lazy"/>
        <argument key="doctrine.database_create_command" type="service_closure" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service_closure" id="doctrine.database_drop_command"/>
        <argument key="doctrine.query_sql_command" type="service_closure" id="doctrine.query_sql_command"/>
        <argument key="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" type="service_closure" id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service_closure" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service_closure" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service_closure" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service_closure" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.mapping_convert_command" type="service_closure" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.schema_create_command" type="service_closure" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service_closure" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service_closure" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service_closure" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.mapping_info_command" type="service_closure" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.clear_query_region_command" type="service_closure" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.query_dql_command" type="service_closure" id="doctrine.query_dql_command"/>
        <argument key="doctrine.schema_update_command" type="service_closure" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service_closure" id="doctrine.schema_validate_command"/>
        <argument key="doctrine.mapping_import_command" type="service_closure" id="doctrine.mapping_import_command"/>
        <argument key="twig.command.debug" type="service_closure" id=".twig.command.debug.lazy"/>
        <argument key="twig.command.lint" type="service_closure" id=".twig.command.lint.lazy"/>
        <argument key="winzou\Bundle\StateMachineBundle\Command\winzouStateMachineDebugCommand" type="service_closure" id="winzou\Bundle\StateMachineBundle\Command\winzouStateMachineDebugCommand"/>
        <argument key="Sylius\Bundle\GridBundle\Command\StubMakeGrid" type="service_closure" id="Sylius\Bundle\GridBundle\Command\StubMakeGrid"/>
      </argument>
    </service>
    <service id=".service_locator.fL6tnjm" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service_closure" id="twig.runtime.security_csrf"/>
        <argument key="Pagerfanta\Twig\Extension\PagerfantaRuntime" type="service_closure" id="pagerfanta.twig_runtime"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service_closure" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Bridge\Twig\Extension\SerializerRuntime" type="service_closure" id="twig.runtime.serializer"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service_closure" id="twig.form.renderer"/>
        <argument key="JMS\Serializer\Twig\SerializerRuntimeHelper" type="service_closure" id="jms_serializer.twig_extension.serializer_runtime_helper"/>
      </argument>
    </service>
    <service id="logger" alias="Psr\Log\NullLogger"/>
    <service id="App\Shared\Application\Command\CommandBusInterface" alias="App\Shared\Infrastructure\Symfony\Messenger\MessengerCommandBus"/>
    <service id="App\Shared\Application\Query\QueryBusInterface" alias="App\Shared\Infrastructure\Symfony\Messenger\MessengerQueryBus"/>
    <service id="App\Shared\Application\Query\QueryHandlerInterface" alias="App\BoardGameBlog\Application\Query\FindBoardGameQueryHandler"/>
    <service id="App\Shared\Application\Query\QueryInterface" alias="App\BoardGameBlog\Application\Query\FindBoardGameQuery"/>
    <service id="App\Shared\Domain\Repository\RepositoryInterface" alias="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository"/>
    <service id="App\BoardGameBlog\Domain\Repository\BoardGameRepositoryInterface" alias="App\BoardGameBlog\Infrastructure\Doctrine\DoctrineBoardGameRepository"/>
    <service id="App\Kernel" alias="kernel" public="true"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="event_dispatcher"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="event_dispatcher"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="event_dispatcher"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack"/>
    <service id="Symfony\Component\HttpKernel\HttpCache\StoreInterface" alias="http_cache.store"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator"/>
    <service id="Symfony\Component\HttpKernel\UriSigner" alias="uri_signer"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger"/>
    <service id="Symfony\Component\HttpKernel\Fragment\FragmentUriGeneratorInterface" alias="fragment.uri_generator"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.default"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer"/>
    <service id="Symfony\Contracts\Translation\LocaleAwareInterface" alias="translation.locale_switcher"/>
    <service id="Symfony\Component\Translation\LocaleSwitcher" alias="translation.locale_switcher"/>
    <service id="translator" alias="translator.default" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default"/>
    <service id="Symfony\Component\Workflow\Registry" alias=".workflow.registry">
      <deprecated package="symfony/workflow" version="6.2">The "%alias_id%" alias is deprecated, inject the workflow directly.</deprecated>
    </service>
    <service id="workflow.registry" alias=".workflow.registry">
      <deprecated package="symfony/workflow" version="6.2">The "%alias_id%" alias is deprecated, inject the workflow directly.</deprecated>
    </service>
    <service id="Symfony\Component\Workflow\WorkflowInterface $pullRequestStateMachine" alias="state_machine.pull_request"/>
    <service id="Symfony\Component\Workflow\WorkflowInterface $pullRequest" alias="state_machine.pull_request"/>
    <service id="Symfony\Component\Workflow\WorkflowInterface $blogPublishingWorkflow" alias="workflow.blog_publishing"/>
    <service id="Symfony\Component\Workflow\WorkflowInterface $blogPublishing" alias="workflow.blog_publishing"/>
    <service id="Symfony\Component\Workflow\WorkflowInterface $subscriptionStateMachine" alias="state_machine.subscription"/>
    <service id="Symfony\Component\Workflow\WorkflowInterface $subscription" alias="state_machine.subscription"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer"/>
    <service id="serializer.property_accessor" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object">
      <deprecated package="symfony/serializer" version="6.2">The "%alias_id%" service alias is deprecated, type-hint against "Symfony\Component\Serializer\Normalizer\NormalizerInterface" or implement "Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Serializer\Normalizer\PropertyNormalizer" alias="serializer.normalizer.property">
      <deprecated package="symfony/serializer" version="6.2">The "%alias_id%" service alias is deprecated, type-hint against "Symfony\Component\Serializer\Normalizer\NormalizerInterface" or implement "Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.class_metadata_factory"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX"/>
    <service id="cache.default_doctrine_dbal_provider" alias="doctrine.dbal.default_connection"/>
    <service id="SessionHandlerInterface" alias="session.handler.native"/>
    <service id="session.storage.factory" alias="session.storage.factory.mock_file"/>
    <service id="session.handler" alias="session.handler.native"/>
    <service id="session_listener" alias="test.session.listener"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="sylius.form.factory" public="true"/>
    <service id="form.property_accessor" alias="property_accessor"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="validator"/>
    <service id="validator.mapping.class_metadata_factory" alias="validator"/>
    <service id="Symfony\Component\Messenger\Transport\Serialization\SerializerInterface" alias="messenger.transport.native_php_serializer"/>
    <service id="messenger.default_serializer" alias="messenger.transport.native_php_serializer"/>
    <service id="messenger.default_bus" alias="command.bus" public="true"/>
    <service id="Symfony\Component\Messenger\MessageBusInterface" alias="command.bus"/>
    <service id="Symfony\Component\Messenger\MessageBusInterface $queryBus" alias="query.bus"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage"/>
    <service id="Symfony\Bundle\SecurityBundle\Security" alias="security.helper"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper">
      <deprecated package="symfony/security-bundle" version="6.2">The "%alias_id%" service alias is deprecated, use "Symfony\Bundle\SecurityBundle\Security" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall"/>
    <service id="Symfony\Component\Security\Http\FirewallMapInterface" alias="security.firewall.map"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" alias="security.password_hasher_factory"/>
    <service id="security.password_hasher" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\Security\Http\Authentication\UserAuthenticatorInterface" alias="security.user_authenticator"/>
    <service id="security.firewall" alias="debug.security.firewall"/>
    <service id="security.user_providers" alias="security.user.provider.concrete.users_in_memory"/>
    <service id="Symfony\Component\Security\Core\User\UserProviderInterface" alias="security.user.provider.concrete.users_in_memory"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.main" alias="security.user_checker"/>
    <service id="security.firewall.context_locator" alias=".service_locator.zJyh7qS"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="Doctrine\DBAL\Connection $defaultConnection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="cache.doctrine.orm.default.metadata"/>
    <service id="doctrine.orm.default_result_cache" alias="cache.doctrine.orm.default.result"/>
    <service id="doctrine.orm.default_query_cache" alias="cache.doctrine.orm.default.query"/>
    <service id="Doctrine\ORM\EntityManagerInterface $defaultEntityManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="Sylius\Bundle\ResourceBundle\Command\DebugResourceCommand" alias="sylius.console.command.resource_debug" public="true"/>
    <service id="Sylius\Component\Resource\Context\Initiator\RequestContextInitiatorInterface" alias="sylius.context.initiator.legacy_request_context"/>
    <service id="Sylius\Bundle\ResourceBundle\Controller\ParametersParserInterface" alias="sylius.resource_controller.parameters_parser"/>
    <service id="Sylius\Bundle\ResourceBundle\Controller\RequestConfigurationFactoryInterface" alias="sylius.resource_controller.request_configuration_factory"/>
    <service id="Sylius\Bundle\ResourceBundle\Controller\NewResourceFactoryInterface" alias="sylius.resource_controller.new_resource_factory"/>
    <service id="Sylius\Bundle\ResourceBundle\Controller\SingleResourceProviderInterface" alias="sylius.resource_controller.single_resource_provider"/>
    <service id="Hateoas\Representation\Factory\PagerfantaFactory" alias="sylius.resource_controller.pagerfanta_representation_factory"/>
    <service id="Sylius\Bundle\ResourceBundle\Controller\ResourcesResolverInterface" alias="sylius.resource_controller.resources_resolver.grid_aware" public="true"/>
    <service id="Sylius\Bundle\ResourceBundle\Controller\ResourcesCollectionProviderInterface" alias="sylius.resource_controller.resources_collection_provider"/>
    <service id="Sylius\Bundle\ResourceBundle\Controller\ResourceFormFactoryInterface" alias="sylius.resource_controller.form_factory"/>
    <service id="Sylius\Bundle\ResourceBundle\Controller\RedirectHandlerInterface" alias="sylius.resource_controller.redirect_handler"/>
    <service id="Sylius\Bundle\ResourceBundle\Controller\DisabledAuthorizationChecker" alias="sylius.resource_controller.authorization_checker.disabled"/>
    <service id="Sylius\Bundle\ResourceBundle\Controller\FlashHelperInterface" alias="sylius.resource_controller.flash_helper"/>
    <service id="Sylius\Bundle\ResourceBundle\Controller\EventDispatcherInterface" alias="sylius.resource_controller.event_dispatcher"/>
    <service id="Sylius\Bundle\ResourceBundle\Controller\ViewHandlerInterface" alias="sylius.resource_controller.view_handler"/>
    <service id="Sylius\Bundle\ResourceBundle\Controller\ResourceUpdateHandlerInterface" alias="sylius.resource_controller.resource_update_handler"/>
    <service id="Sylius\Bundle\ResourceBundle\Controller\ResourceDeleteHandlerInterface" alias="sylius.resource_controller.resource_delete_handler"/>
    <service id="Sylius\Component\Resource\Symfony\EventDispatcher\OperationEventDispatcherInterface" alias="sylius.dispatcher.operation"/>
    <service id="Sylius\Component\Resource\Symfony\EventDispatcher\OperationEventHandlerInterface" alias="sylius.event_handler.operation"/>
    <service id="Sylius\Bundle\ResourceBundle\Form\Type\ResourceAutocompleteChoiceType" alias="sylius.form.type.resource_autocomplete_choice" public="true"/>
    <service id="Sylius\Component\Resource\Symfony\Session\Flash\FlashHelperInterface" alias="sylius.helper.flash"/>
    <service id="Sylius\Component\Resource\Metadata\Resource\Factory\ResourceMetadataCollectionFactoryInterface" alias="sylius.resource_metadata_collection.factory.templates_dir"/>
    <service id="sylius.resource_metadata_collection.factory" alias="sylius.resource_metadata_collection.factory.cached"/>
    <service id="sylius.routing.loader.resource" alias="Sylius\Bundle\ResourceBundle\Routing\ResourceLoader"/>
    <service id="Sylius\Bundle\ResourceBundle\Routing\CrudRoutesAttributesLoader" alias="sylius.routing.loader.crud_routes_attributes"/>
    <service id="Sylius\Bundle\ResourceBundle\Routing\RoutesAttributesLoader" alias="sylius.routing.loader.routes_attributes"/>
    <service id="Sylius\Component\Resource\Symfony\Routing\Factory\OperationRouteNameFactoryInterface" alias="sylius.routing.factory.operation_route_name_factory" public="true"/>
    <service id="sylius.routing.factory.operation_route_path_factory" alias="sylius.routing.factory.operation_route_path_factory.create" public="true"/>
    <service id="Sylius\Component\Resource\Symfony\Routing\Factory\OperationRoutePathFactoryInterface" alias="sylius.routing.factory.operation_route_path_factory.create" public="true"/>
    <service id="Sylius\Bundle\ResourceBundle\Routing\RouteAttributesFactoryInterface" alias="sylius.routing.factory.route_attributes" public="true"/>
    <service id="Sylius\Bundle\ResourceBundle\Routing\AttributesOperationRouteFactoryInterface" alias="sylius.routing.factory.attributes_operation_route" public="true"/>
    <service id="Sylius\Component\Resource\Symfony\Routing\Factory\OperationRouteFactoryInterface" alias="sylius.routing.factory.operation_route" public="true"/>
    <service id="Sylius\Component\Resource\Symfony\Routing\RedirectHandlerInterface" alias="sylius.routing.redirect_handler" public="true"/>
    <service id="Sylius\Component\Resource\State\ProviderInterface" alias="sylius.state.provider.event_dispatcher"/>
    <service id="Sylius\Component\Resource\State\FactoryInterface" alias="sylius.state.factory"/>
    <service id="Sylius\Component\Resource\State\ProcessorInterface" alias="sylius.state.processor.event_dispatcher_bulk_aware"/>
    <service id="Sylius\Component\Resource\State\ResponderInterface" alias="sylius.state.responder"/>
    <service id="Sylius\Component\Resource\StateMachine\OperationStateMachineInterface" alias="sylius.state_machine.operation"/>
    <service id="sylius.state_machine.operation.default" alias="sylius.state_machine.operation.winzou"/>
    <service id="Sylius\Bundle\ResourceBundle\Storage\SessionStorage" alias="sylius.storage.session" public="true"/>
    <service id="Sylius\Bundle\ResourceBundle\Storage\CookieStorage" alias="sylius.storage.cookie" public="true"/>
    <service id="Sylius\Component\Resource\Twig\Context\Factory\ContextFactoryInterface" alias="sylius.twig.context.factory.default"/>
    <service id="Sylius\Component\Resource\Generator\RandomnessGeneratorInterface" alias="sylius.random_generator" public="true"/>
    <service id="Sylius\Component\Resource\Metadata\RegistryInterface" alias="sylius.resource_registry"/>
    <service id="Sylius\Bundle\ResourceBundle\ExpressionLanguage\ExpressionLanguage" alias="sylius.expression_language"/>
    <service id="Sylius\Bundle\ResourceBundle\Form\Extension\CollectionTypeExtension" alias="sylius.form.extension.type.collection" public="true"/>
    <service id="Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType" alias="sylius.form.type.default" public="true"/>
    <service id="Sylius\Bundle\ResourceBundle\Grid\View\ResourceGridViewFactoryInterface" alias="sylius.grid.resource_view_factory" public="true"/>
    <service id="Sylius\Bundle\ResourceBundle\Grid\Renderer\TwigGridRenderer" alias="sylius.custom_grid_renderer.twig" public="true"/>
    <service id="Sylius\Bundle\ResourceBundle\Grid\Renderer\TwigBulkActionGridRenderer" alias="sylius.custom_bulk_action_grid_renderer.twig" public="true"/>
    <service id="Sylius\Bundle\ResourceBundle\Grid\Parser\OptionsParserInterface" alias="sylius.grid_options_parser"/>
    <service id="Sylius\Component\Resource\Grid\View\Factory\GridViewFactoryInterface" alias="sylius.grid.view_factory.legacy" public="true"/>
    <service id="Sylius\Component\Resource\Translation\Provider\ImmutableTranslationLocaleProvider" alias="sylius.translation_locale_provider.immutable" public="true"/>
    <service id="Sylius\Bundle\ResourceBundle\EventListener\ORMTranslatableListener" alias="sylius.translation.translatable_listener.doctrine.orm" public="true"/>
    <service id="Sylius\Bundle\ResourceBundle\Form\Type\ResourceTranslationsType" alias="sylius.form.type.resource_translations" public="true"/>
    <service id="Sylius\Component\Resource\Translation\TranslatableEntityLocaleAssignerInterface" alias="sylius.translatable_entity_locale_assigner" public="true"/>
    <service id="sylius.translation_locale_provider" alias="test.translation_locale_provider" public="true"/>
    <service id="sylius.resource_controller.authorization_checker" alias="sylius.resource_controller.authorization_checker.disabled"/>
    <service id="sylius_resource.doctrine.mapping_driver_chain" alias="Sylius\Bundle\ResourceBundle\Doctrine\ResourceMappingDriverChain" public="true"/>
    <service id="Sylius\Bundle\ResourceBundle\EventListener\ORMMappedSuperClassSubscriber" alias="sylius.event_subscriber.orm_mapped_super_class" public="true"/>
    <service id="Sylius\Bundle\ResourceBundle\EventListener\ORMRepositoryClassSubscriber" alias="sylius.event_subscriber.orm_repository_class" public="true"/>
    <service id="Sylius\Bundle\ResourceBundle\Doctrine\ORM\Form\Builder\DefaultFormBuilder" alias="sylius.form_builder.default"/>
    <service id="Sylius\Bundle\ResourceBundle\Doctrine\ORM\ContainerRepositoryFactory" alias="sylius.doctrine.orm.container_repository_factory"/>
    <service id="app.manager.blog_post" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="Doctrine\Common\Persistence\ObjectManager $blogPostManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectManager $blogPostManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\ORM\EntityManagerInterface $blogPostManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectRepository $blogPostRepository" alias="app.repository.blog_post"/>
    <service id="Doctrine\Common\Collections\Selectable $blogPostRepository" alias="app.repository.blog_post"/>
    <service id="Sylius\Component\Resource\Repository\RepositoryInterface $blogPostRepository" alias="app.repository.blog_post"/>
    <service id="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository $blogPostRepository" alias="app.repository.blog_post"/>
    <service id="Doctrine\ORM\EntityRepository $blogPostRepository" alias="app.repository.blog_post"/>
    <service id="Sylius\Component\Resource\Factory\FactoryInterface $blogPostFactory" alias="app.factory.blog_post"/>
    <service id="Sylius\Component\Resource\Factory\Factory $blogPostFactory" alias="app.factory.blog_post"/>
    <service id="app.manager.book" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="Doctrine\Common\Persistence\ObjectManager $bookManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectManager $bookManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\ORM\EntityManagerInterface $bookManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface $bookRepository" alias="app.repository.book"/>
    <service id="Doctrine\Common\Collections\Selectable $bookRepository" alias="app.repository.book"/>
    <service id="Doctrine\Persistence\ObjectRepository $bookRepository" alias="app.repository.book"/>
    <service id="App\Repository\BookRepositoryInterface $bookRepository" alias="app.repository.book"/>
    <service id="Sylius\Component\Resource\Repository\RepositoryInterface $bookRepository" alias="app.repository.book"/>
    <service id="App\Repository\BookRepository $bookRepository" alias="app.repository.book"/>
    <service id="Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository $bookRepository" alias="app.repository.book"/>
    <service id="Doctrine\Bundle\DoctrineBundle\Repository\LazyServiceEntityRepository $bookRepository" alias="app.repository.book"/>
    <service id="Doctrine\ORM\EntityRepository $bookRepository" alias="app.repository.book"/>
    <service id="App\Factory\BookFactoryInterface $bookFactory" alias="app.factory.book"/>
    <service id="Sylius\Component\Resource\Factory\FactoryInterface $bookFactory" alias="app.factory.book"/>
    <service id="Sylius\Component\Resource\Factory\TranslatableFactoryInterface $bookFactory" alias="app.factory.book"/>
    <service id="App\Factory\BookFactory $bookFactory" alias="app.factory.book"/>
    <service id="app.manager.book_translation" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="Doctrine\Common\Persistence\ObjectManager $bookTranslationManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectManager $bookTranslationManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\ORM\EntityManagerInterface $bookTranslationManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectRepository $bookTranslationRepository" alias="app.repository.book_translation"/>
    <service id="Doctrine\Common\Collections\Selectable $bookTranslationRepository" alias="app.repository.book_translation"/>
    <service id="Sylius\Component\Resource\Repository\RepositoryInterface $bookTranslationRepository" alias="app.repository.book_translation"/>
    <service id="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository $bookTranslationRepository" alias="app.repository.book_translation"/>
    <service id="Doctrine\ORM\EntityRepository $bookTranslationRepository" alias="app.repository.book_translation"/>
    <service id="Sylius\Component\Resource\Factory\FactoryInterface $bookTranslationFactory" alias="app.factory.book_translation"/>
    <service id="Sylius\Component\Resource\Factory\Factory $bookTranslationFactory" alias="app.factory.book_translation"/>
    <service id="app.manager.comic_book" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="Doctrine\Common\Persistence\ObjectManager $comicBookManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectManager $comicBookManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\ORM\EntityManagerInterface $comicBookManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectRepository $comicBookRepository" alias="app.repository.comic_book"/>
    <service id="Doctrine\Common\Collections\Selectable $comicBookRepository" alias="app.repository.comic_book"/>
    <service id="Sylius\Component\Resource\Repository\RepositoryInterface $comicBookRepository" alias="app.repository.comic_book"/>
    <service id="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository $comicBookRepository" alias="app.repository.comic_book"/>
    <service id="Doctrine\ORM\EntityRepository $comicBookRepository" alias="app.repository.comic_book"/>
    <service id="Sylius\Component\Resource\Factory\FactoryInterface $comicBookFactory" alias="app.factory.comic_book"/>
    <service id="Sylius\Component\Resource\Factory\Factory $comicBookFactory" alias="app.factory.comic_book"/>
    <service id="app.manager.science_book" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="Doctrine\Common\Persistence\ObjectManager $scienceBookManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectManager $scienceBookManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\ORM\EntityManagerInterface $scienceBookManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectRepository $scienceBookRepository" alias="app.repository.science_book"/>
    <service id="Doctrine\Common\Collections\Selectable $scienceBookRepository" alias="app.repository.science_book"/>
    <service id="Sylius\Component\Resource\Repository\RepositoryInterface $scienceBookRepository" alias="app.repository.science_book"/>
    <service id="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository $scienceBookRepository" alias="app.repository.science_book"/>
    <service id="Doctrine\ORM\EntityRepository $scienceBookRepository" alias="app.repository.science_book"/>
    <service id="Sylius\Component\Resource\Factory\FactoryInterface $scienceBookFactory" alias="app.factory.science_book"/>
    <service id="Sylius\Component\Resource\Factory\Factory $scienceBookFactory" alias="app.factory.science_book"/>
    <service id="app.manager.gedmo" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="Doctrine\Common\Persistence\ObjectManager $gedmoManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectManager $gedmoManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\ORM\EntityManagerInterface $gedmoManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectRepository $gedmoRepository" alias="app.repository.gedmo"/>
    <service id="Doctrine\Common\Collections\Selectable $gedmoRepository" alias="app.repository.gedmo"/>
    <service id="Sylius\Component\Resource\Repository\RepositoryInterface $gedmoRepository" alias="app.repository.gedmo"/>
    <service id="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository $gedmoRepository" alias="app.repository.gedmo"/>
    <service id="Doctrine\ORM\EntityRepository $gedmoRepository" alias="app.repository.gedmo"/>
    <service id="Sylius\Component\Resource\Factory\FactoryInterface $gedmoFactory" alias="app.factory.gedmo"/>
    <service id="Sylius\Component\Resource\Factory\Factory $gedmoFactory" alias="app.factory.gedmo"/>
    <service id="app.manager.pull_request" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="Doctrine\Common\Persistence\ObjectManager $pullRequestManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectManager $pullRequestManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\ORM\EntityManagerInterface $pullRequestManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectRepository $pullRequestRepository" alias="app.repository.pull_request"/>
    <service id="Doctrine\Common\Collections\Selectable $pullRequestRepository" alias="app.repository.pull_request"/>
    <service id="Sylius\Component\Resource\Repository\RepositoryInterface $pullRequestRepository" alias="app.repository.pull_request"/>
    <service id="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository $pullRequestRepository" alias="app.repository.pull_request"/>
    <service id="Doctrine\ORM\EntityRepository $pullRequestRepository" alias="app.repository.pull_request"/>
    <service id="Sylius\Component\Resource\Factory\FactoryInterface $pullRequestFactory" alias="app.factory.pull_request"/>
    <service id="Sylius\Component\Resource\Factory\Factory $pullRequestFactory" alias="app.factory.pull_request"/>
    <service id="app.manager.subscription" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="Doctrine\Common\Persistence\ObjectManager $subscriptionManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectManager $subscriptionManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\ORM\EntityManagerInterface $subscriptionManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\Persistence\ObjectRepository $subscriptionRepository" alias="app.repository.subscription"/>
    <service id="Doctrine\Common\Collections\Selectable $subscriptionRepository" alias="app.repository.subscription"/>
    <service id="Sylius\Component\Resource\Repository\RepositoryInterface $subscriptionRepository" alias="app.repository.subscription"/>
    <service id="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository $subscriptionRepository" alias="app.repository.subscription"/>
    <service id="Doctrine\ORM\EntityRepository $subscriptionRepository" alias="app.repository.subscription"/>
    <service id="Sylius\Component\Resource\Factory\FactoryInterface $subscriptionFactory" alias="App\Subscription\Factory\SubscriptionFactory"/>
    <service id="Sylius\Component\Resource\Factory\Factory $subscriptionFactory" alias="App\Subscription\Factory\SubscriptionFactory"/>
    <service id="Pagerfanta\RouteGenerator\RouteGeneratorFactoryInterface" alias="pagerfanta.route_generator_factory"/>
    <service id="Pagerfanta\View\ViewFactory" alias="pagerfanta.view_factory"/>
    <service id="Pagerfanta\View\ViewFactoryInterface" alias="pagerfanta.view_factory"/>
    <service id="Twig_Environment" alias="twig">
      <deprecated package="symfony/twig-bundle" version="6.3">The "%alias_id%" service alias is deprecated, use "Twig\Environment" or "twig" instead.</deprecated>
    </service>
    <service id="Twig\Environment" alias="twig"/>
    <service id="FOS\RestBundle\View\ViewHandlerInterface" alias="fos_rest.view_handler.default"/>
    <service id="FOS\RestBundle\Request\ParamFetcherInterface" alias="fos_rest.request.param_fetcher"/>
    <service id="fos_rest.view_handler" alias="fos_rest.view_handler.default" public="true"/>
    <service id="jms_serializer.metadata_driver" alias="jms_serializer.metadata.typed_properties_driver" public="true"/>
    <service id="jms_serializer.metadata.cache" alias="jms_serializer.metadata.cache.file_cache"/>
    <service id="jms_serializer.naming_strategy" alias="jms_serializer.serialized_name_annotation_strategy"/>
    <service id="jms_serializer.object_constructor" alias="jms_serializer.doctrine_object_constructor"/>
    <service id="jms_serializer.deserialization_context_factory" alias="jms_serializer.configured_deserialization_context_factory" public="true"/>
    <service id="jms_serializer.serialization_context_factory" alias="jms_serializer.configured_serialization_context_factory" public="true"/>
    <service id="jms_serializer" alias="jms_serializer.serializer" public="true"/>
    <service id="JMS\Serializer\SerializerInterface" alias="jms_serializer.serializer"/>
    <service id="JMS\Serializer\ArrayTransformerInterface" alias="jms_serializer.serializer"/>
    <service id="jms_serializer.accessor_strategy" alias="jms_serializer.accessor_strategy.default"/>
    <service id="JMS\Serializer\ContextFactory\SerializationContextFactoryInterface" alias="jms_serializer.configured_serialization_context_factory"/>
    <service id="JMS\Serializer\ContextFactory\DeserializationContextFactoryInterface" alias="jms_serializer.configured_deserialization_context_factory"/>
    <service id="jms_serializer.event_dispatcher" alias="jms_serializer.traceable_event_dispatcher"/>
    <service id="hateoas.configuration.provider" alias="hateoas.configuration.provider.chain" public="true"/>
    <service id="hateoas.configuration.metadata_driver" alias="hateoas.configuration.metadata.chain_driver" public="true"/>
    <service id="hateoas.configuration.metadata.cache" alias="hateoas.configuration.metadata.cache.file_cache"/>
    <service id="fidry_alice_data_fixtures.loader.doctrine" alias="fidry_alice_data_fixtures.doctrine.purger_loader" public="true"/>
    <service id="fidry_alice_data_fixtures.doctrine.loader" alias="fidry_alice_data_fixtures.doctrine.purger_loader"/>
    <service id="fidry_alice_data_fixtures.persistence.purger_factory.doctrine" alias="fidry_alice_data_fixtures.persistence.doctrine.purger.purger_factory" public="true"/>
    <service id="fidry_alice_data_fixtures.persistence.purger.doctrine.orm_purger" alias="fidry_alice_data_fixtures.persistence.doctrine.purger.purger_factory">
      <deprecated package="theofidry/alice-data-fixtures" version="1.0">The service alias "%alias_id%" is deprecated and will be removed in future versions.Use "fidry_alice_data_fixtures.persistence.doctrine.purger.purger_factory" instead.</deprecated>
    </service>
    <service id="fidry_alice_data_fixtures.persistence.persister.doctrine" alias="fidry_alice_data_fixtures.persistence.persister.doctrine.object_manager_persister" public="true"/>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture_bag" alias="nelmio_alice.fixture_builder.denormalizer.fixture.simple_fixture_bag_denormalizer"/>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture" alias="nelmio_alice.fixture_builder.denormalizer.fixture.tolerant_denormalizer"/>
    <service id="nelmio_alice.fixture_builder.denormalizer.specs" alias="nelmio_alice.fixture_builder.denormalizer.specs.simple"/>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor" alias="nelmio_alice.fixture_builder.denormalizer.fixture.specs.constructor.legacy_constructor_denormalizer"/>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.arguments" alias="nelmio_alice.fixture_builder.denormalizer.fixture.specs.arguments.simple_arguments_denormalizer"/>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.value" alias="nelmio_alice.fixture_builder.denormalizer.fixture.specs.value.unique_value_denormalizer"/>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.property" alias="nelmio_alice.fixture_builder.denormalizer.fixture.specs.property.simple_denormalizer"/>
    <service id="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls" alias="nelmio_alice.fixture_builder.denormalizer.fixture.specs.calls.simple_denormalizer"/>
    <service id="nelmio_alice.fixture_builder.denormalizer.flag_parser" alias="nelmio_alice.fixture_builder.denormalizer.flag_parser.element"/>
    <service id="nelmio_alice.fixture_builder.expression_language.parser.token_parser" alias="nelmio_alice.fixture_builder.expression_language.parser.token_parser.registry"/>
    <service id="nelmio_alice.fixture_builder.expression_language.lexer" alias="nelmio_alice.fixture_builder.expression_language.lexer.empty_value_lexer"/>
    <service id="nelmio_alice.fixture_builder.expression_language.parser" alias="nelmio_alice.fixture_builder.expression_language.parser.function_fixture_reference_parser"/>
    <service id="nelmio_alice.fixture_builder" alias="nelmio_alice.fixture_builder.simple"/>
    <service id="nelmio_alice.fixture_builder.denormalizer" alias="nelmio_alice.fixture_builder.denormalizer.simple"/>
    <service id="nelmio_alice.fixture_builder.denormalizer.parameter_bag" alias="nelmio_alice.fixture_builder.denormalizer.parameter.simple_parameter_bag_denormalizer"/>
    <service id="nelmio_alice.file_locator" alias="nelmio_alice.file_locator.default"/>
    <service id="Faker\Generator" alias="nelmio_alice.faker.generator" public="true"/>
    <service id="nelmio_alice.property_accessor" alias="nelmio_alice.property_accessor.std"/>
    <service id="nelmio_alice.generator.resolver.parameter_bag" alias="nelmio_alice.generator.resolver.parameter_bag.remove_conflicting_parameters"/>
    <service id="nelmio_alice.generator.resolver.fixture_bag" alias="nelmio_alice.generator.resolver.fixture_bag.template_bag"/>
    <service id="nelmio_alice.generator.resolver.value" alias="nelmio_alice.generator.resolver.value.registry"/>
    <service id="nelmio_alice.generator.resolver.value.property_accessor" alias="property_accessor"/>
    <service id="nelmio_alice.generator.resolver.fixture_set" alias="nelmio_alice.generator.resolver.fixture_set.remove_conflicting_objects"/>
    <service id="nelmio_alice.generator.caller" alias="nelmio_alice.generator.caller.simple"/>
    <service id="nelmio_alice.generator.instantiator" alias="nelmio_alice.generator.instantiator.existing_instance"/>
    <service id="nelmio_alice.generator.hydrator" alias="nelmio_alice.generator.hydrator.simple"/>
    <service id="nelmio_alice.generator.hydrator.property" alias="nelmio_alice.generator.hydrator.property.symfony_property_access"/>
    <service id="nelmio_alice.generator" alias="nelmio_alice.generator.double_pass"/>
    <service id="nelmio_alice.generator.object_generator" alias="nelmio_alice.generator.object_generator.complete"/>
    <service id="nelmio_alice.data_loader" alias="nelmio_alice.data_loader.simple" public="true"/>
    <service id="nelmio_alice.file_loader" alias="nelmio_alice.file_loader.simple" public="true"/>
    <service id="nelmio_alice.files_loader" alias="nelmio_alice.files_loader.simple" public="true"/>
    <service id="nelmio_alice.file_parser" alias="nelmio_alice.file_parser.runtime_cache"/>
    <service id="SM\Factory\FactoryInterface" alias="SM\Factory\Factory" public="true"/>
    <service id="SM\Callback\CallbackFactoryInterface" alias="winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallbackFactory" public="true"/>
    <service id="Psr\Container\ContainerInterface" alias="service_container"/>
    <service id="Sylius\Bundle\GridBundle\Registry\GridRegistryInterface" alias="sylius.grid.grid_registry" public="true"/>
    <service id="Sylius\Component\Grid\Configuration\GridConfigurationExtenderInterface" alias="sylius.grid.configuration_extender" public="true"/>
    <service id="Sylius\Component\Grid\Configuration\GridConfigurationRemovalsHandlerInterface" alias="sylius.grid.configuration_removals_handler" public="true"/>
    <service id="sylius.grid.provider" alias="sylius.grid.chain_provider" public="true"/>
    <service id="sylius.grid.renderer" alias="sylius.custom_grid_renderer.twig"/>
    <service id="sylius.grid.bulk_action_renderer" alias="sylius.custom_bulk_action_grid_renderer.twig"/>
    <service id="sylius.grid.data_extractor" alias="sylius.grid.data_extractor.property_access"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.7nzbL4K" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.HBdvAhp"/>
    <service id="doctrine.id_generator_locator" alias=".service_locator.KLVvNIq"/>
    <service id="app.controller_state_machine.board_game" alias="sylius.resource_controller.state_machine"/>
    <service id="app.controller_state_machine.blog_post" alias="sylius.resource_controller.state_machine"/>
    <service id="app.controller_state_machine.book" alias="sylius.resource_controller.state_machine"/>
    <service id="app.controller_state_machine.book_translation" alias="sylius.resource_controller.state_machine"/>
    <service id="app.controller_state_machine.comic_book" alias="sylius.resource_controller.state_machine"/>
    <service id="app.controller_state_machine.science_book" alias="sylius.resource_controller.state_machine"/>
    <service id="app.controller_state_machine.gedmo" alias="sylius.resource_controller.state_machine"/>
    <service id="app.controller_state_machine.pull_request" alias="sylius.resource_controller.state_machine"/>
    <service id="app.controller_state_machine.subscription" alias="sylius.resource_controller.state_machine"/>
    <service id="sm.factory" alias="SM\Factory\Factory" public="true"/>
    <service id="sm.callback_factory" alias="winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallbackFactory" public="true"/>
    <service id="sm.callback.cascade_transition" alias="SM\Callback\CascadeTransitionCallback" public="true"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="fos_rest.serializer" alias="fos_rest.serializer.jms"/>
    <service id="jms_serializer.authorization_checker" alias="security.authorization_checker" public="true"/>
    <service id="twig.extension.pagerfanta" alias="pagerfanta.twig_extension">
      <deprecated package="sylius/resource-bundle" version="1.8">The "%alias_id%" service alias is deprecated since Sylius 1.8, use the "pagerfanta.twig_extension" service ID instead.</deprecated>
    </service>
    <service id="white_october_pagerfanta.view_factory" alias="pagerfanta.view_factory">
      <deprecated package="sylius/resource-bundle" version="1.8">The "%alias_id%" service alias is deprecated since Sylius 1.8, use the "pagerfanta.view_factory" service ID instead.</deprecated>
    </service>
    <service id="Psr\Log\LoggerInterface" alias="Psr\Log\NullLogger"/>
    <service id=".service_locator.iX.v8su" alias="messenger.receiver_locator"/>
    <service id=".service_locator.gHN.DUu" alias="messenger.retry_strategy_locator"/>
    <service id=".service_locator.L2.mihF" alias=".service_locator.QXBcHvi"/>
    <service id=".service_locator.KsPGMLD" alias="jms_serializer.event_dispatcher.service_locator"/>
    <service id=".service_locator.vsIIEJz" alias="jms_serializer.handler_registry.service_locator"/>
    <service id=".service_locator.NuHbnez" alias="jms_serializer.metadata.service_locator"/>
    <service id=".service_locator.o.uf2zi" alias=".service_locator.7nzbL4K"/>
    <service id=".service_locator.L.EDYUC" alias=".service_locator.HBdvAhp"/>
    <service id=".service_locator.BFrsqsn" alias=".service_locator.fGvEh3."/>
    <service id=".service_locator.cDQ5vm6" alias=".service_locator.BV_ZfYz"/>
    <service id=".service_locator.124sa1V" alias=".service_locator.HeXyCEs"/>
    <service id=".service_locator.nW0a6Mm" alias=".service_locator.jTgEz5u"/>
    <service id=".service_locator.O24_MAy" alias=".service_locator.yY.p4P7"/>
    <service id="form.type_extension.form.request_handler" alias="sylius.form.type_extension.form.request_handler"/>
    <service id="sylius.resource_controller.resources_resolver" alias="sylius.resource_controller.resources_resolver.grid_aware"/>
    <service id="sylius.grid.renderer.twig" alias="sylius.custom_grid_renderer.twig" public="true"/>
    <service id="sylius.grid.bulk_action_renderer.twig" alias="sylius.custom_bulk_action_grid_renderer.twig" public="true"/>
    <service id="sylius.resource_metadata_collection.factory.doctrine.inner" alias="sylius.resource_metadata_collection.factory.templates_dir"/>
    <service id="sylius.resource_metadata_collection.factory.redirect.inner" alias="sylius.resource_metadata_collection.factory.doctrine"/>
    <service id="sylius.routing.factory.operation_route_path_factory.default" alias="sylius.routing.factory.operation_route_path_factory.create"/>
    <service id="app.factory.subscription" alias="App\Subscription\Factory\SubscriptionFactory" public="true"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager"/>
    <service id="security.firewall.authenticator.main" alias="debug.security.firewall.authenticator.main"/>
    <service id="sylius.context.initiator.request_context" alias="sylius.context.initiator.legacy_request_context"/>
    <service id="sylius.resource_metadata_collection.factory.resource_factory.inner" alias="sylius.resource_metadata_collection.factory.redirect"/>
    <service id="sylius.resource_metadata_collection.factory.event_short_name.inner" alias="sylius.resource_metadata_collection.factory.resource_factory"/>
    <service id="sylius.resource_metadata_collection.factory.attributes" alias="sylius.resource_metadata_collection.factory.templates_dir"/>
    <service id="sylius.twig.context.factory" alias="sylius.twig.context.factory.legacy"/>
    <service id="sylius.twig.context.factory.legacy.inner" alias="sylius.twig.context.factory.request"/>
    <service id="sylius.grid.view_factory.resource" alias="sylius.grid.view_factory.legacy" public="true"/>
    <service id="doctrine.orm.default_metadata_driver" alias=".doctrine.orm.default_metadata_driver"/>
    <service id="doctrine.orm.container_repository_factory" alias="sylius.doctrine.orm.container_repository_factory"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html"/>
    <service id="jms_serializer.metadata.doctrine_type_driver.inner" alias="jms_serializer.metadata.chain_driver"/>
    <service id="jms_serializer.metadata.typed_properties_driver.inner" alias="jms_serializer.metadata.doctrine_type_driver"/>
    <service id="jms_serializer.doctrine_object_constructor.inner" alias="jms_serializer.unserialize_object_constructor"/>
    <service id=".doctrine.orm.default_metadata_driver.inner" alias="Sylius\Bundle\ResourceBundle\Doctrine\ResourceMappingDriverChain"/>
    <service id="jms_serializer.form_error_handler" alias="fos_rest.serializer.form_error_handler"/>
    <service id="sylius.resource_metadata_collection.factory.cached.inner" alias="sylius.resource_metadata_collection.factory.event_short_name"/>
    <service id="sylius.routing.factory.operation_route_path_factory.show.inner" alias="sylius.routing.factory.operation_route_path_factory.collection"/>
    <service id="sylius.routing.factory.operation_route_path_factory.delete.inner" alias="sylius.routing.factory.operation_route_path_factory.show"/>
    <service id="sylius.routing.factory.operation_route_path_factory.bulk_operation.inner" alias="sylius.routing.factory.operation_route_path_factory.delete"/>
    <service id="sylius.state.provider" alias="sylius.state.provider.event_dispatcher"/>
    <service id="sylius.state.processor" alias="sylius.state.processor.event_dispatcher_bulk_aware"/>
    <service id="sylius.state.processor.bulk_aware" alias="sylius.state.processor.event_dispatcher_bulk_aware"/>
    <service id="sylius.routing.factory.operation_route_path_factory.update.inner" alias="sylius.routing.factory.operation_route_path_factory.bulk_operation"/>
    <service id="sylius.routing.factory.operation_route_path_factory.create.inner" alias="sylius.routing.factory.operation_route_path_factory.update"/>
    <service id="sylius.state.processor.bulk_aware.inner" alias="sylius.state.processor.event_dispatcher"/>
    <service id="jms_serializer.metadata_factory" alias="jms_serializer.traceable_metadata_factory"/>
    <service id="jms_serializer.handler_registry" alias="jms_serializer.traceable_handler_registry"/>
    <service id="jms_serializer.metadata.file_locator" alias="jms_serializer.metadata.traceable_file_locator"/>
    <service id=".service_locator.gFlme_s" alias=".service_locator.y4_Zrx."/>
    <service id=".service_locator.k0KBf69" alias=".service_locator.d2ZEtNx"/>
    <service id=".service_locator.AeOtN4T" alias=".service_locator.7mS.Ryf"/>
    <service id=".service_locator.BlxN3Cw" alias=".service_locator.LrCXAmX"/>
    <service id=".service_locator.DaULGk." alias=".service_locator.cwjLhlB"/>
    <service id=".service_locator.17Icj_S" alias=".service_locator.MHNFoLa"/>
    <service id=".service_locator.GxcoNeo" alias=".service_locator.Ine1Ld0"/>
    <service id=".service_locator.iimt8mH" alias=".service_locator.YBWNcmH"/>
    <service id=".service_locator.TG7.GPp" alias=".service_locator.uvpMnvB"/>
  </services>
</container>
